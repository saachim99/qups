//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31057947
// Cuda compilation tools, release 11.6, V11.6.124
// Based on NVVM 7.0.1
//

.version 7.6
.target sm_86
.address_size 64

	// .globl	_Z8interpdhP7ushort2PKS_PKti
.const .align 8 .u64 W;
.const .align 8 .u64 D;
.const .align 1 .u8 QUPS_VS;
.const .align 8 .u64 QUPS_T;
.const .align 8 .u64 QUPS_M;
.const .align 8 .u64 QUPS_N;
.const .align 8 .u64 QUPS_I;
.const .align 8 .u64 QUPS_F;
.const .align 8 .u64 QUPS_S;
.const .align 8 .u64 QUPS_I1;
.const .align 8 .u64 QUPS_I2;
.const .align 8 .u64 QUPS_I3;

.visible .entry _Z8interpdhP7ushort2PKS_PKti(
	.param .u64 _Z8interpdhP7ushort2PKS_PKti_param_0,
	.param .u64 _Z8interpdhP7ushort2PKS_PKti_param_1,
	.param .u64 _Z8interpdhP7ushort2PKS_PKti_param_2,
	.param .u32 _Z8interpdhP7ushort2PKS_PKti_param_3
)
{
	.reg .pred 	%p<82>;
	.reg .b16 	%rs<332>;
	.reg .f32 	%f<432>;
	.reg .b32 	%r<138>;
	.reg .f64 	%fd<13>;
	.reg .b64 	%rd<68>;


	ld.param.u64 	%rd26, [_Z8interpdhP7ushort2PKS_PKti_param_0];
	ld.param.u64 	%rd27, [_Z8interpdhP7ushort2PKS_PKti_param_1];
	ld.param.u64 	%rd28, [_Z8interpdhP7ushort2PKS_PKti_param_2];
	ld.param.u32 	%r37, [_Z8interpdhP7ushort2PKS_PKti_param_3];
	mov.u32 	%r38, %ntid.x;
	mov.u32 	%r39, %ctaid.x;
	mov.u32 	%r40, %tid.x;
	mad.lo.s32 	%r41, %r39, %r38, %r40;
	cvt.u64.u32 	%rd1, %r41;
	mov.u32 	%r42, %ntid.y;
	mov.u32 	%r43, %ctaid.y;
	mov.u32 	%r44, %tid.y;
	mad.lo.s32 	%r45, %r43, %r42, %r44;
	cvt.u64.u32 	%rd2, %r45;
	mov.f32 	%f130, 0f00000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs54, %f130;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs55, %f130;}

	// end inline asm
	ld.const.u64 	%rd3, [QUPS_M];
	ld.const.u64 	%rd4, [QUPS_N];
	ld.const.u64 	%rd5, [QUPS_T];
	ld.const.u64 	%rd66, [QUPS_F];
	ld.const.u64 	%rd7, [QUPS_I];
	and.b64  	%rd29, %rd7, -4294967296;
	setp.eq.s64 	%p1, %rd29, 0;
	@%p1 bra 	$L__BB0_2;

	div.u64 	%rd63, %rd1, %rd7;
	mul.lo.s64 	%rd30, %rd63, %rd7;
	sub.s64 	%rd64, %rd1, %rd30;
	bra.uni 	$L__BB0_3;

$L__BB0_2:
	cvt.u32.u64 	%r46, %rd7;
	cvt.u32.u64 	%r47, %rd1;
	div.u32 	%r48, %r47, %r46;
	mul.lo.s32 	%r49, %r48, %r46;
	sub.s32 	%r50, %r47, %r49;
	cvt.u64.u32 	%rd63, %r48;
	cvt.u64.u32 	%rd64, %r50;

$L__BB0_3:
	setp.ge.u64 	%p2, %rd63, %rd3;
	setp.le.u64 	%p3, %rd4, %rd2;
	or.pred  	%p4, %p2, %p3;
	setp.eq.s64 	%p5, %rd66, 0;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB0_118;

	cvta.to.global.u64 	%rd32, %rd28;
	mul.lo.s64 	%rd33, %rd7, %rd2;
	add.s64 	%rd14, %rd64, %rd33;
	mul.lo.s64 	%rd15, %rd4, %rd7;
	mul.lo.s64 	%rd34, %rd15, %rd63;
	add.s64 	%rd35, %rd34, %rd14;
	shl.b64 	%rd36, %rd35, 1;
	add.s64 	%rd37, %rd32, %rd36;
	ld.global.nc.u16 	%rs3, [%rd37];
	mov.u64 	%rd67, 0;
	mov.b32 	%r1, {%rs54, %rs55};
	mul.lo.s64 	%rd38, %rd5, %rd2;
	cvta.to.global.u64 	%rd39, %rd27;
	shl.b64 	%rd40, %rd38, 2;
	add.s64 	%rd65, %rd39, %rd40;
	mul.lo.s64 	%rd41, %rd4, %rd5;
	shl.b64 	%rd17, %rd41, 2;
	cvta.to.global.u64 	%rd18, %rd26;
	setp.gt.s32 	%p7, %r37, 1;
	setp.eq.s32 	%p11, %r37, 0;
	// begin inline asm
	{  cvt.f32.f16 %f383, %rs3;}

	// end inline asm
	mov.b32 	%r129, %f383;
	and.b32  	%r130, %r129, -2147483648;
	or.b32  	%r131, %r130, 1056964608;
	mov.b32 	%f384, %r131;
	add.rz.ftz.f32 	%f385, %f383, %f384;
	cvt.rzi.f32.f32 	%f386, %f385;
	cvt.rzi.ftz.s32.f32 	%r34, %f386;
	setp.lt.s32 	%p79, %r34, 0;
	setp.eq.s32 	%p12, %r37, 1;
	abs.ftz.f32 	%f122, %f383;
	cvt.rzi.f32.f32 	%f125, %f383;
	sub.ftz.f32 	%f381, %f383, %f125;
	mov.b32 	%r116, %f381;
	or.b32  	%r119, %r130, %r116;
	mov.b32 	%f126, %r119;
	mov.f64 	%fd1, 0d0000000000000000;
	// begin inline asm
	{  cvt.rn.f16.f64 %rs83, %fd1;}

	// end inline asm
	mov.f64 	%fd3, 0d4000000000000000;
	// begin inline asm
	{  cvt.rn.f16.f64 %rs100, %fd3;}

	// end inline asm
	mov.f64 	%fd11, 0d3FF0000000000000;
	// begin inline asm
	{  cvt.rn.f16.f64 %rs197, %fd11;}

	// end inline asm

$L__BB0_5:
	@%p7 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_6;

$L__BB0_8:
	setp.eq.s32 	%p8, %r37, 2;
	@%p8 bra 	$L__BB0_96;

	setp.eq.s32 	%p9, %r37, 3;
	@%p9 bra 	$L__BB0_20;

	setp.ne.s32 	%p10, %r37, 4;
	mov.u16 	%rs330, %rs55;
	mov.u16 	%rs331, %rs54;
	@%p10 bra 	$L__BB0_117;

	setp.lt.ftz.f32 	%p13, %f122, 0f7F800000;
	@%p13 bra 	$L__BB0_15;
	bra.uni 	$L__BB0_12;

$L__BB0_15:
	cvt.rzi.f32.f32 	%f400, %f383;
	sub.ftz.f32 	%f132, %f383, %f400;
	mov.b32 	%r53, %f132;
	or.b32  	%r56, %r130, %r53;
	mov.b32 	%f401, %r56;
	bra.uni 	$L__BB0_16;

$L__BB0_6:
	@%p11 bra 	$L__BB0_113;

	mov.u16 	%rs330, %rs55;
	mov.u16 	%rs331, %rs54;
	@%p12 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_117;

$L__BB0_104:
	setp.lt.ftz.f32 	%p75, %f122, 0f7F800000;
	@%p75 bra 	$L__BB0_108;
	bra.uni 	$L__BB0_105;

$L__BB0_108:
	cvt.rzi.f32.f32 	%f430, %f383;
	mov.f32 	%f431, %f126;
	bra.uni 	$L__BB0_109;

$L__BB0_96:
	setp.lt.ftz.f32 	%p70, %f122, 0f7F800000;
	@%p70 bra 	$L__BB0_100;
	bra.uni 	$L__BB0_97;

$L__BB0_100:
	cvt.rzi.f32.f32 	%f428, %f383;
	sub.ftz.f32 	%f365, %f383, %f428;
	mov.b32 	%r96, %f365;
	or.b32  	%r99, %r130, %r96;
	mov.b32 	%f429, %r99;
	bra.uni 	$L__BB0_101;

$L__BB0_20:
	setp.lt.ftz.f32 	%p17, %f122, 0f7F800000;
	@%p17 bra 	$L__BB0_24;
	bra.uni 	$L__BB0_21;

$L__BB0_24:
	cvt.rzi.f32.f32 	%f402, %f383;
	sub.ftz.f32 	%f135, %f383, %f402;
	mov.b32 	%r68, %f135;
	or.b32  	%r71, %r130, %r68;
	mov.b32 	%f403, %r71;
	bra.uni 	$L__BB0_25;

$L__BB0_113:
	mov.u32 	%r137, %r1;
	@%p79 bra 	$L__BB0_116;

	cvt.s64.s32 	%rd22, %r34;
	setp.le.u64 	%p80, %rd5, %rd22;
	mov.u32 	%r137, %r1;
	@%p80 bra 	$L__BB0_116;

	shl.b64 	%rd54, %rd22, 2;
	add.s64 	%rd55, %rd65, %rd54;
	ld.global.nc.v2.u16 	{%rs320, %rs321}, [%rd55];
	// begin inline asm
	{  mov.b32 %r137, {%rs320,%rs321};}

	// end inline asm

$L__BB0_116:
	mov.b32 	{%rs331, %rs330}, %r137;
	bra.uni 	$L__BB0_117;

$L__BB0_12:
	setp.eq.ftz.f32 	%p14, %f122, 0f7F800000;
	@%p14 bra 	$L__BB0_14;
	bra.uni 	$L__BB0_13;

$L__BB0_14:
	mov.b32 	%f401, %r130;
	mov.f32 	%f400, %f383;
	bra.uni 	$L__BB0_16;

$L__BB0_105:
	setp.eq.ftz.f32 	%p76, %f122, 0f7F800000;
	@%p76 bra 	$L__BB0_107;
	bra.uni 	$L__BB0_106;

$L__BB0_107:
	mov.b32 	%f431, %r130;
	mov.f32 	%f430, %f383;
	bra.uni 	$L__BB0_109;

$L__BB0_97:
	setp.eq.ftz.f32 	%p71, %f122, 0f7F800000;
	@%p71 bra 	$L__BB0_99;
	bra.uni 	$L__BB0_98;

$L__BB0_99:
	mov.b32 	%f429, %r130;
	mov.f32 	%f428, %f383;
	bra.uni 	$L__BB0_101;

$L__BB0_21:
	setp.eq.ftz.f32 	%p18, %f122, 0f7F800000;
	@%p18 bra 	$L__BB0_23;
	bra.uni 	$L__BB0_22;

$L__BB0_23:
	mov.b32 	%f403, %r130;
	mov.f32 	%f402, %f383;
	bra.uni 	$L__BB0_25;

$L__BB0_98:
	add.ftz.f32 	%f428, %f383, %f383;
	mov.f32 	%f429, %f428;

$L__BB0_101:
	cvt.rzi.ftz.s32.f32 	%r28, %f428;
	setp.lt.s32 	%p72, %r28, 1;
	add.s32 	%r100, %r28, 2;
	cvt.s64.s32 	%rd48, %r100;
	setp.le.u64 	%p73, %rd5, %rd48;
	or.pred  	%p74, %p72, %p73;
	mov.u32 	%r135, %r1;
	@%p74 bra 	$L__BB0_103;

	mul.wide.s32 	%rd49, %r28, 4;
	add.s64 	%rd50, %rd65, %rd49;
	ld.global.nc.v2.u16 	{%rs293, %rs294}, [%rd50+-4];
	// begin inline asm
	{  mov.b32 %r101, {%rs293,%rs294};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs295, %rs296}, [%rd50];
	// begin inline asm
	{  mov.b32 %r102, {%rs295,%rs296};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs297, %rs298}, [%rd50+4];
	// begin inline asm
	{  mov.b32 %r103, {%rs297,%rs298};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs299, %rs300}, [%rd50+8];
	// begin inline asm
	{  mov.b32 %r104, {%rs299,%rs300};}

	// end inline asm
	fma.rn.ftz.f32 	%f371, %f429, 0f40000000, 0fBF800000;
	mov.f32 	%f372, 0f3F800000;
	fma.rn.ftz.f32 	%f373, %f429, %f371, 0fBF800000;
	fma.rn.ftz.f32 	%f366, %f429, %f373, 0f00000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs258, %f366;}

	// end inline asm
	fma.rn.ftz.f32 	%f374, %f429, 0fC0A00000, 0f40400000;
	fma.rn.ftz.f32 	%f375, %f429, %f374, 0f00000000;
	fma.rn.ftz.f32 	%f367, %f429, %f375, 0f40000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs259, %f367;}

	// end inline asm
	fma.rn.ftz.f32 	%f376, %f429, 0f40800000, 0fC0400000;
	fma.rn.ftz.f32 	%f377, %f429, %f376, 0f3F800000;
	fma.rn.ftz.f32 	%f368, %f429, %f377, 0f00000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs260, %f368;}

	// end inline asm
	sub.ftz.f32 	%f378, %f372, %f429;
	fma.rn.ftz.f32 	%f379, %f429, %f378, 0f00000000;
	fma.rn.ftz.f32 	%f369, %f429, %f379, 0f00000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs261, %f369;}

	// end inline asm
	mov.b32 	{%rs263, %rs266}, %r101;
	mov.b32 	{%rs269, %rs272}, %r102;
	// begin inline asm
	{mul.f16 %rs265,%rs266,%rs258;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs262,%rs263,%rs258;
}
	// end inline asm
	mov.b32 	%r106, {%rs262, %rs265};
	// begin inline asm
	{mul.f16 %rs271,%rs272,%rs259;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs268,%rs269,%rs259;
}
	// end inline asm
	mov.b32 	%r107, {%rs268, %rs271};
	// begin inline asm
	{add.f16x2 %r105,%r106,%r107;
}
	// end inline asm
	mov.b32 	{%rs275, %rs278}, %r103;
	// begin inline asm
	{mul.f16 %rs277,%rs278,%rs260;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs274,%rs275,%rs260;
}
	// end inline asm
	mov.b32 	%r110, {%rs274, %rs277};
	// begin inline asm
	{add.f16x2 %r108,%r105,%r110;
}
	// end inline asm
	mov.b32 	{%rs281, %rs284}, %r104;
	// begin inline asm
	{mul.f16 %rs283,%rs284,%rs261;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs280,%rs281,%rs261;
}
	// end inline asm
	mov.b32 	%r113, {%rs280, %rs283};
	// begin inline asm
	{add.f16x2 %r111,%r108,%r113;
}
	// end inline asm
	mov.b32 	{%rs288, %rs291}, %r111;
	mov.f32 	%f370, 0f3F000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs286, %f370;}

	// end inline asm
	// begin inline asm
	{mul.f16 %rs290,%rs291,%rs286;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs287,%rs288,%rs286;
}
	// end inline asm
	mov.b32 	%r135, {%rs287, %rs290};

$L__BB0_103:
	mov.b32 	{%rs331, %rs330}, %r135;
	bra.uni 	$L__BB0_117;

$L__BB0_13:
	add.ftz.f32 	%f400, %f383, %f383;
	mov.f32 	%f401, %f400;

$L__BB0_16:
	// begin inline asm
	{  cvt.rn.f16.f32 %rs57, %f401;}

	// end inline asm
	cvt.rzi.ftz.s32.f32 	%r2, %f400;
	setp.lt.s32 	%p15, %r2, 0;
	mov.u32 	%r133, %r1;
	@%p15 bra 	$L__BB0_19;

	add.s32 	%r57, %r2, 1;
	cvt.s64.s32 	%rd42, %r57;
	setp.le.u64 	%p16, %rd5, %rd42;
	mov.u32 	%r133, %r1;
	@%p16 bra 	$L__BB0_19;

	mul.wide.s32 	%rd43, %r2, 4;
	add.s64 	%rd44, %rd65, %rd43;
	ld.global.nc.v2.u16 	{%rs68, %rs69}, [%rd44];
	// begin inline asm
	{  mov.b32 %r58, {%rs68,%rs69};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs70, %rs71}, [%rd44+4];
	// begin inline asm
	{  mov.b32 %r59, {%rs70,%rs71};}

	// end inline asm
	// begin inline asm
	{sub.f16x2 %r60,%r59,%r58;
}
	// end inline asm
	mov.b32 	{%rs64, %rs67}, %r60;
	// begin inline asm
	{mul.f16 %rs65,%rs57,%rs67;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs62,%rs57,%rs64;
}
	// end inline asm
	mov.b32 	%r65, {%rs62, %rs65};
	// begin inline asm
	{add.f16x2 %r133,%r58,%r65;
}
	// end inline asm

$L__BB0_19:
	mov.b32 	{%rs331, %rs330}, %r133;
	bra.uni 	$L__BB0_117;

$L__BB0_106:
	add.ftz.f32 	%f430, %f383, %f383;
	mov.f32 	%f431, %f430;

$L__BB0_109:
	// begin inline asm
	{  cvt.rn.f16.f32 %rs302, %f431;}

	// end inline asm
	cvt.rzi.ftz.s32.f32 	%r31, %f430;
	setp.lt.s32 	%p77, %r31, 0;
	mov.u32 	%r136, %r1;
	@%p77 bra 	$L__BB0_112;

	add.s32 	%r120, %r31, 1;
	cvt.s64.s32 	%rd51, %r120;
	setp.le.u64 	%p78, %rd5, %rd51;
	mov.u32 	%r136, %r1;
	@%p78 bra 	$L__BB0_112;

	mul.wide.s32 	%rd52, %r31, 4;
	add.s64 	%rd53, %rd65, %rd52;
	ld.global.nc.v2.u16 	{%rs313, %rs314}, [%rd53];
	// begin inline asm
	{  mov.b32 %r121, {%rs313,%rs314};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs315, %rs316}, [%rd53+4];
	// begin inline asm
	{  mov.b32 %r122, {%rs315,%rs316};}

	// end inline asm
	// begin inline asm
	{sub.f16x2 %r123,%r122,%r121;
}
	// end inline asm
	mov.b32 	{%rs309, %rs312}, %r123;
	// begin inline asm
	{mul.f16 %rs310,%rs302,%rs312;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs307,%rs302,%rs309;
}
	// end inline asm
	mov.b32 	%r128, {%rs307, %rs310};
	// begin inline asm
	{add.f16x2 %r136,%r121,%r128;
}
	// end inline asm

$L__BB0_112:
	mov.b32 	{%rs331, %rs330}, %r136;
	bra.uni 	$L__BB0_117;

$L__BB0_22:
	add.ftz.f32 	%f402, %f383, %f383;
	mov.f32 	%f403, %f402;

$L__BB0_25:
	cvt.rzi.ftz.s32.f32 	%r5, %f402;
	setp.lt.s32 	%p19, %r5, 1;
	add.s32 	%r72, %r5, 2;
	cvt.s64.s32 	%rd45, %r72;
	setp.le.u64 	%p20, %rd5, %rd45;
	or.pred  	%p21, %p19, %p20;
	mov.u32 	%r134, %r1;
	@%p21 bra 	$L__BB0_95;

	mul.wide.s32 	%rd46, %r5, 4;
	add.s64 	%rd47, %rd65, %rd46;
	ld.global.nc.v2.u16 	{%rs87, %rs88}, [%rd47+-4];
	// begin inline asm
	{  mov.b32 %r73, {%rs87,%rs88};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs89, %rs90}, [%rd47];
	// begin inline asm
	{  mov.b32 %r74, {%rs89,%rs90};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs91, %rs92}, [%rd47+4];
	// begin inline asm
	{  mov.b32 %r75, {%rs91,%rs92};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs93, %rs94}, [%rd47+8];
	// begin inline asm
	{  mov.b32 %r76, {%rs93,%rs94};}

	// end inline asm
	add.ftz.f32 	%f136, %f403, 0f3F800000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs81, %f136;}

	// end inline asm
	mov.f32 	%f137, 0f40490FDB;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs82, %f137;}

	// end inline asm
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.eq.f16  __$temp3, %rs81, %rs83;
  selp.u16 %rs84, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p22, %rs84, 0;
	@%p22 bra 	$L__BB0_28;

	mov.u16 	%rs323, %rs197;
	bra.uni 	$L__BB0_43;

$L__BB0_28:
	// begin inline asm
	{  cvt.f32.f16 %f138, %rs81;}

	// end inline asm
	add.ftz.f32 	%f140, %f138, %f138;
	cvt.rni.f32.f32 	%f141, %f140;
	cvt.rzi.ftz.s32.f32 	%r10, %f141;
	neg.ftz.f32 	%f142, %f141;
	mov.f32 	%f143, 0f3F000000;
	fma.rn.ftz.f32 	%f144, %f142, %f143, %f138;
	mul.ftz.f32 	%f145, %f144, 0f34222169;
	mov.f32 	%f146, 0f40490FDA;
	fma.rn.ftz.f32 	%f147, %f144, %f146, %f145;
	mul.rn.ftz.f32 	%f18, %f147, %f147;
	and.b32  	%r11, %r10, 1;
	setp.eq.s32 	%p23, %r11, 0;
	selp.f32 	%f19, %f147, 0f3F800000, %p23;
	mov.f32 	%f404, 0fB94D4153;
	@%p23 bra 	$L__BB0_30;

	mov.f32 	%f148, 0fBAB607ED;
	mov.f32 	%f149, 0f37CBAC00;
	fma.rn.ftz.f32 	%f404, %f149, %f18, %f148;

$L__BB0_30:
	selp.f32 	%f150, 0f3C0885E4, 0f3D2AAABB, %p23;
	fma.rn.ftz.f32 	%f151, %f404, %f18, %f150;
	selp.f32 	%f152, 0fBE2AAAA8, 0fBEFFFFFF, %p23;
	fma.rn.ftz.f32 	%f153, %f151, %f18, %f152;
	fma.rn.ftz.f32 	%f155, %f18, %f19, %f130;
	fma.rn.ftz.f32 	%f406, %f153, %f155, %f19;
	and.b32  	%r77, %r10, 2;
	setp.eq.s32 	%p25, %r77, 0;
	@%p25 bra 	$L__BB0_32;

	mov.f32 	%f157, 0fBF800000;
	fma.rn.ftz.f32 	%f406, %f406, %f157, %f130;

$L__BB0_32:
	cvt.rzi.f32.f32 	%f158, %f138;
	setp.neu.ftz.f32 	%p26, %f158, %f138;
	@%p26 bra 	$L__BB0_34;

	mul.rn.ftz.f32 	%f406, %f138, %f130;

$L__BB0_34:
	mov.f32 	%f395, 0f40490FDA;
	mov.f32 	%f394, 0f3F000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs97, %f406;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f161, %rs81;}

	// end inline asm
	mov.f32 	%f163, 0f40000000;
	div.approx.ftz.f32 	%f27, %f161, %f163;
	add.ftz.f32 	%f164, %f27, %f27;
	cvt.rni.f32.f32 	%f165, %f164;
	cvt.rzi.ftz.s32.f32 	%r12, %f165;
	neg.ftz.f32 	%f166, %f165;
	fma.rn.ftz.f32 	%f168, %f166, %f394, %f27;
	mul.ftz.f32 	%f169, %f168, 0f34222169;
	fma.rn.ftz.f32 	%f171, %f168, %f395, %f169;
	mul.rn.ftz.f32 	%f28, %f171, %f171;
	and.b32  	%r13, %r12, 1;
	setp.eq.s32 	%p27, %r13, 0;
	selp.f32 	%f29, %f171, 0f3F800000, %p27;
	mov.f32 	%f407, 0fB94D4153;
	@%p27 bra 	$L__BB0_36;

	mov.f32 	%f172, 0fBAB607ED;
	mov.f32 	%f173, 0f37CBAC00;
	fma.rn.ftz.f32 	%f407, %f173, %f28, %f172;

$L__BB0_36:
	selp.f32 	%f174, 0f3C0885E4, 0f3D2AAABB, %p27;
	fma.rn.ftz.f32 	%f175, %f407, %f28, %f174;
	selp.f32 	%f176, 0fBE2AAAA8, 0fBEFFFFFF, %p27;
	fma.rn.ftz.f32 	%f177, %f175, %f28, %f176;
	fma.rn.ftz.f32 	%f179, %f28, %f29, %f130;
	fma.rn.ftz.f32 	%f409, %f177, %f179, %f29;
	and.b32  	%r78, %r12, 2;
	setp.eq.s32 	%p29, %r78, 0;
	@%p29 bra 	$L__BB0_38;

	mov.f32 	%f181, 0fBF800000;
	fma.rn.ftz.f32 	%f409, %f409, %f181, %f130;

$L__BB0_38:
	cvt.rzi.f32.f32 	%f182, %f27;
	setp.neu.ftz.f32 	%p30, %f182, %f27;
	@%p30 bra 	$L__BB0_40;

	mul.rn.ftz.f32 	%f409, %f27, %f130;

$L__BB0_40:
	// begin inline asm
	{  cvt.rn.f16.f32 %rs99, %f409;}

	// end inline asm
	// begin inline asm
	{mul.f16 %rs101,%rs100,%rs97;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs104,%rs101,%rs99;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs107,%rs82,%rs82;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs110,%rs107,%rs81;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs113,%rs110,%rs81;
}
	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f185, %rs104;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f186, %rs113;}

	// end inline asm
	// begin inline asm
	{rcp.approx.ftz.f32 %f187, %f186;
}
	// end inline asm
	mul.ftz.f32 	%f189, %f185, %f187;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs323, %f189;}

	// end inline asm
	and.b16  	%rs120, %rs323, 32767;
	mov.u16 	%rs121, 143;
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.lt.f16  __$temp3, %rs120, %rs121;
  selp.u16 %rs119, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p31, %rs119, 0;
	setp.eq.s16 	%p32, %rs120, 0;
	or.pred  	%p33, %p31, %p32;
	@%p33 bra 	$L__BB0_43;

	neg.ftz.f32 	%f191, %f186;
	fma.rn.ftz.f32 	%f192, %f191, %f189, %f185;
	fma.rn.ftz.f32 	%f190, %f187, %f192, %f189;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs323, %f190;}

	// end inline asm

$L__BB0_43:
	mov.f32 	%f390, 0f40490FDB;
	add.ftz.f32 	%f193, %f403, 0f00000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs123, %f193;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs124, %f390;}

	// end inline asm
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.eq.f16  __$temp3, %rs123, %rs83;
  selp.u16 %rs126, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p34, %rs126, 0;
	@%p34 bra 	$L__BB0_45;

	mov.u16 	%rs325, %rs197;
	bra.uni 	$L__BB0_60;

$L__BB0_45:
	// begin inline asm
	{  cvt.f32.f16 %f195, %rs123;}

	// end inline asm
	add.ftz.f32 	%f197, %f195, %f195;
	cvt.rni.f32.f32 	%f198, %f197;
	cvt.rzi.ftz.s32.f32 	%r14, %f198;
	neg.ftz.f32 	%f199, %f198;
	mov.f32 	%f200, 0f3F000000;
	fma.rn.ftz.f32 	%f201, %f199, %f200, %f195;
	mul.ftz.f32 	%f202, %f201, 0f34222169;
	mov.f32 	%f203, 0f40490FDA;
	fma.rn.ftz.f32 	%f204, %f201, %f203, %f202;
	mul.rn.ftz.f32 	%f42, %f204, %f204;
	and.b32  	%r15, %r14, 1;
	setp.eq.s32 	%p35, %r15, 0;
	selp.f32 	%f43, %f204, 0f3F800000, %p35;
	mov.f32 	%f410, 0fB94D4153;
	@%p35 bra 	$L__BB0_47;

	mov.f32 	%f205, 0fBAB607ED;
	mov.f32 	%f206, 0f37CBAC00;
	fma.rn.ftz.f32 	%f410, %f206, %f42, %f205;

$L__BB0_47:
	selp.f32 	%f207, 0f3C0885E4, 0f3D2AAABB, %p35;
	fma.rn.ftz.f32 	%f208, %f410, %f42, %f207;
	selp.f32 	%f209, 0fBE2AAAA8, 0fBEFFFFFF, %p35;
	fma.rn.ftz.f32 	%f210, %f208, %f42, %f209;
	fma.rn.ftz.f32 	%f212, %f42, %f43, %f130;
	fma.rn.ftz.f32 	%f412, %f210, %f212, %f43;
	and.b32  	%r79, %r14, 2;
	setp.eq.s32 	%p37, %r79, 0;
	@%p37 bra 	$L__BB0_49;

	mov.f32 	%f214, 0fBF800000;
	fma.rn.ftz.f32 	%f412, %f412, %f214, %f130;

$L__BB0_49:
	cvt.rzi.f32.f32 	%f215, %f195;
	setp.neu.ftz.f32 	%p38, %f215, %f195;
	@%p38 bra 	$L__BB0_51;

	mul.rn.ftz.f32 	%f412, %f195, %f130;

$L__BB0_51:
	mov.f32 	%f397, 0f40490FDA;
	mov.f32 	%f396, 0f3F000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs131, %f412;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f218, %rs123;}

	// end inline asm
	mov.f32 	%f220, 0f40000000;
	div.approx.ftz.f32 	%f51, %f218, %f220;
	add.ftz.f32 	%f221, %f51, %f51;
	cvt.rni.f32.f32 	%f222, %f221;
	cvt.rzi.ftz.s32.f32 	%r16, %f222;
	neg.ftz.f32 	%f223, %f222;
	fma.rn.ftz.f32 	%f225, %f223, %f396, %f51;
	mul.ftz.f32 	%f226, %f225, 0f34222169;
	fma.rn.ftz.f32 	%f228, %f225, %f397, %f226;
	mul.rn.ftz.f32 	%f52, %f228, %f228;
	and.b32  	%r17, %r16, 1;
	setp.eq.s32 	%p39, %r17, 0;
	selp.f32 	%f53, %f228, 0f3F800000, %p39;
	mov.f32 	%f413, 0fB94D4153;
	@%p39 bra 	$L__BB0_53;

	mov.f32 	%f229, 0fBAB607ED;
	mov.f32 	%f230, 0f37CBAC00;
	fma.rn.ftz.f32 	%f413, %f230, %f52, %f229;

$L__BB0_53:
	selp.f32 	%f231, 0f3C0885E4, 0f3D2AAABB, %p39;
	fma.rn.ftz.f32 	%f232, %f413, %f52, %f231;
	selp.f32 	%f233, 0fBE2AAAA8, 0fBEFFFFFF, %p39;
	fma.rn.ftz.f32 	%f234, %f232, %f52, %f233;
	fma.rn.ftz.f32 	%f236, %f52, %f53, %f130;
	fma.rn.ftz.f32 	%f415, %f234, %f236, %f53;
	and.b32  	%r80, %r16, 2;
	setp.eq.s32 	%p41, %r80, 0;
	@%p41 bra 	$L__BB0_55;

	mov.f32 	%f238, 0fBF800000;
	fma.rn.ftz.f32 	%f415, %f415, %f238, %f130;

$L__BB0_55:
	cvt.rzi.f32.f32 	%f239, %f51;
	setp.neu.ftz.f32 	%p42, %f239, %f51;
	@%p42 bra 	$L__BB0_57;

	mul.rn.ftz.f32 	%f415, %f51, %f130;

$L__BB0_57:
	// begin inline asm
	{  cvt.rn.f16.f32 %rs133, %f415;}

	// end inline asm
	// begin inline asm
	{mul.f16 %rs135,%rs100,%rs131;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs138,%rs135,%rs133;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs141,%rs124,%rs124;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs144,%rs141,%rs123;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs147,%rs144,%rs123;
}
	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f242, %rs138;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f243, %rs147;}

	// end inline asm
	// begin inline asm
	{rcp.approx.ftz.f32 %f244, %f243;
}
	// end inline asm
	mul.ftz.f32 	%f246, %f242, %f244;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs325, %f246;}

	// end inline asm
	and.b16  	%rs154, %rs325, 32767;
	mov.u16 	%rs155, 143;
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.lt.f16  __$temp3, %rs154, %rs155;
  selp.u16 %rs153, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p43, %rs153, 0;
	setp.eq.s16 	%p44, %rs154, 0;
	or.pred  	%p45, %p43, %p44;
	@%p45 bra 	$L__BB0_60;

	neg.ftz.f32 	%f248, %f243;
	fma.rn.ftz.f32 	%f249, %f248, %f246, %f242;
	fma.rn.ftz.f32 	%f247, %f244, %f249, %f246;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs325, %f247;}

	// end inline asm

$L__BB0_60:
	mov.f32 	%f391, 0f40490FDB;
	add.ftz.f32 	%f250, %f403, 0fBF800000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs157, %f250;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs158, %f391;}

	// end inline asm
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.eq.f16  __$temp3, %rs157, %rs83;
  selp.u16 %rs160, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p46, %rs160, 0;
	@%p46 bra 	$L__BB0_62;

	mov.u16 	%rs327, %rs197;
	bra.uni 	$L__BB0_77;

$L__BB0_62:
	// begin inline asm
	{  cvt.f32.f16 %f252, %rs157;}

	// end inline asm
	add.ftz.f32 	%f254, %f252, %f252;
	cvt.rni.f32.f32 	%f255, %f254;
	cvt.rzi.ftz.s32.f32 	%r18, %f255;
	neg.ftz.f32 	%f256, %f255;
	mov.f32 	%f257, 0f3F000000;
	fma.rn.ftz.f32 	%f258, %f256, %f257, %f252;
	mul.ftz.f32 	%f259, %f258, 0f34222169;
	mov.f32 	%f260, 0f40490FDA;
	fma.rn.ftz.f32 	%f261, %f258, %f260, %f259;
	mul.rn.ftz.f32 	%f66, %f261, %f261;
	and.b32  	%r19, %r18, 1;
	setp.eq.s32 	%p47, %r19, 0;
	selp.f32 	%f67, %f261, 0f3F800000, %p47;
	mov.f32 	%f416, 0fB94D4153;
	@%p47 bra 	$L__BB0_64;

	mov.f32 	%f262, 0fBAB607ED;
	mov.f32 	%f263, 0f37CBAC00;
	fma.rn.ftz.f32 	%f416, %f263, %f66, %f262;

$L__BB0_64:
	selp.f32 	%f264, 0f3C0885E4, 0f3D2AAABB, %p47;
	fma.rn.ftz.f32 	%f265, %f416, %f66, %f264;
	selp.f32 	%f266, 0fBE2AAAA8, 0fBEFFFFFF, %p47;
	fma.rn.ftz.f32 	%f267, %f265, %f66, %f266;
	fma.rn.ftz.f32 	%f269, %f66, %f67, %f130;
	fma.rn.ftz.f32 	%f418, %f267, %f269, %f67;
	and.b32  	%r81, %r18, 2;
	setp.eq.s32 	%p49, %r81, 0;
	@%p49 bra 	$L__BB0_66;

	mov.f32 	%f271, 0fBF800000;
	fma.rn.ftz.f32 	%f418, %f418, %f271, %f130;

$L__BB0_66:
	cvt.rzi.f32.f32 	%f272, %f252;
	setp.neu.ftz.f32 	%p50, %f272, %f252;
	@%p50 bra 	$L__BB0_68;

	mul.rn.ftz.f32 	%f418, %f252, %f130;

$L__BB0_68:
	mov.f32 	%f388, 0f40490FDA;
	mov.f32 	%f387, 0f3F000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs165, %f418;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f275, %rs157;}

	// end inline asm
	mov.f32 	%f277, 0f40000000;
	div.approx.ftz.f32 	%f75, %f275, %f277;
	add.ftz.f32 	%f278, %f75, %f75;
	cvt.rni.f32.f32 	%f279, %f278;
	cvt.rzi.ftz.s32.f32 	%r20, %f279;
	neg.ftz.f32 	%f280, %f279;
	fma.rn.ftz.f32 	%f282, %f280, %f387, %f75;
	mul.ftz.f32 	%f283, %f282, 0f34222169;
	fma.rn.ftz.f32 	%f285, %f282, %f388, %f283;
	mul.rn.ftz.f32 	%f76, %f285, %f285;
	and.b32  	%r21, %r20, 1;
	setp.eq.s32 	%p51, %r21, 0;
	selp.f32 	%f77, %f285, 0f3F800000, %p51;
	mov.f32 	%f419, 0fB94D4153;
	@%p51 bra 	$L__BB0_70;

	mov.f32 	%f286, 0fBAB607ED;
	mov.f32 	%f287, 0f37CBAC00;
	fma.rn.ftz.f32 	%f419, %f287, %f76, %f286;

$L__BB0_70:
	selp.f32 	%f288, 0f3C0885E4, 0f3D2AAABB, %p51;
	fma.rn.ftz.f32 	%f289, %f419, %f76, %f288;
	selp.f32 	%f290, 0fBE2AAAA8, 0fBEFFFFFF, %p51;
	fma.rn.ftz.f32 	%f291, %f289, %f76, %f290;
	fma.rn.ftz.f32 	%f293, %f76, %f77, %f130;
	fma.rn.ftz.f32 	%f421, %f291, %f293, %f77;
	and.b32  	%r82, %r20, 2;
	setp.eq.s32 	%p53, %r82, 0;
	@%p53 bra 	$L__BB0_72;

	mov.f32 	%f295, 0fBF800000;
	fma.rn.ftz.f32 	%f421, %f421, %f295, %f130;

$L__BB0_72:
	cvt.rzi.f32.f32 	%f296, %f75;
	setp.neu.ftz.f32 	%p54, %f296, %f75;
	@%p54 bra 	$L__BB0_74;

	mul.rn.ftz.f32 	%f421, %f75, %f130;

$L__BB0_74:
	// begin inline asm
	{  cvt.rn.f16.f32 %rs167, %f421;}

	// end inline asm
	// begin inline asm
	{mul.f16 %rs169,%rs100,%rs165;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs172,%rs169,%rs167;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs175,%rs158,%rs158;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs178,%rs175,%rs157;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs181,%rs178,%rs157;
}
	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f299, %rs172;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f300, %rs181;}

	// end inline asm
	// begin inline asm
	{rcp.approx.ftz.f32 %f301, %f300;
}
	// end inline asm
	mul.ftz.f32 	%f303, %f299, %f301;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs327, %f303;}

	// end inline asm
	and.b16  	%rs188, %rs327, 32767;
	mov.u16 	%rs189, 143;
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.lt.f16  __$temp3, %rs188, %rs189;
  selp.u16 %rs187, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p55, %rs187, 0;
	setp.eq.s16 	%p56, %rs188, 0;
	or.pred  	%p57, %p55, %p56;
	@%p57 bra 	$L__BB0_77;

	neg.ftz.f32 	%f305, %f300;
	fma.rn.ftz.f32 	%f306, %f305, %f303, %f299;
	fma.rn.ftz.f32 	%f304, %f301, %f306, %f303;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs327, %f304;}

	// end inline asm

$L__BB0_77:
	mov.f32 	%f389, 0f40490FDB;
	add.ftz.f32 	%f307, %f403, 0fC0000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs191, %f307;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs192, %f389;}

	// end inline asm
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.eq.f16  __$temp3, %rs191, %rs83;
  selp.u16 %rs194, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p58, %rs194, 0;
	@%p58 bra 	$L__BB0_79;

	mov.u16 	%rs329, %rs197;
	bra.uni 	$L__BB0_94;

$L__BB0_79:
	// begin inline asm
	{  cvt.f32.f16 %f309, %rs191;}

	// end inline asm
	add.ftz.f32 	%f311, %f309, %f309;
	cvt.rni.f32.f32 	%f312, %f311;
	cvt.rzi.ftz.s32.f32 	%r22, %f312;
	neg.ftz.f32 	%f313, %f312;
	mov.f32 	%f314, 0f3F000000;
	fma.rn.ftz.f32 	%f315, %f313, %f314, %f309;
	mul.ftz.f32 	%f316, %f315, 0f34222169;
	mov.f32 	%f317, 0f40490FDA;
	fma.rn.ftz.f32 	%f318, %f315, %f317, %f316;
	mul.rn.ftz.f32 	%f90, %f318, %f318;
	and.b32  	%r23, %r22, 1;
	setp.eq.s32 	%p59, %r23, 0;
	selp.f32 	%f91, %f318, 0f3F800000, %p59;
	mov.f32 	%f422, 0fB94D4153;
	@%p59 bra 	$L__BB0_81;

	mov.f32 	%f319, 0fBAB607ED;
	mov.f32 	%f320, 0f37CBAC00;
	fma.rn.ftz.f32 	%f422, %f320, %f90, %f319;

$L__BB0_81:
	selp.f32 	%f321, 0f3C0885E4, 0f3D2AAABB, %p59;
	fma.rn.ftz.f32 	%f322, %f422, %f90, %f321;
	selp.f32 	%f323, 0fBE2AAAA8, 0fBEFFFFFF, %p59;
	fma.rn.ftz.f32 	%f324, %f322, %f90, %f323;
	fma.rn.ftz.f32 	%f326, %f90, %f91, %f130;
	fma.rn.ftz.f32 	%f424, %f324, %f326, %f91;
	and.b32  	%r83, %r22, 2;
	setp.eq.s32 	%p61, %r83, 0;
	@%p61 bra 	$L__BB0_83;

	mov.f32 	%f328, 0fBF800000;
	fma.rn.ftz.f32 	%f424, %f424, %f328, %f130;

$L__BB0_83:
	cvt.rzi.f32.f32 	%f329, %f309;
	setp.neu.ftz.f32 	%p62, %f329, %f309;
	@%p62 bra 	$L__BB0_85;

	mul.rn.ftz.f32 	%f424, %f309, %f130;

$L__BB0_85:
	mov.f32 	%f399, 0f40490FDA;
	mov.f32 	%f398, 0f3F000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs199, %f424;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f332, %rs191;}

	// end inline asm
	mov.f32 	%f334, 0f40000000;
	div.approx.ftz.f32 	%f99, %f332, %f334;
	add.ftz.f32 	%f335, %f99, %f99;
	cvt.rni.f32.f32 	%f336, %f335;
	cvt.rzi.ftz.s32.f32 	%r24, %f336;
	neg.ftz.f32 	%f337, %f336;
	fma.rn.ftz.f32 	%f339, %f337, %f398, %f99;
	mul.ftz.f32 	%f340, %f339, 0f34222169;
	fma.rn.ftz.f32 	%f342, %f339, %f399, %f340;
	mul.rn.ftz.f32 	%f100, %f342, %f342;
	and.b32  	%r25, %r24, 1;
	setp.eq.s32 	%p63, %r25, 0;
	selp.f32 	%f101, %f342, 0f3F800000, %p63;
	mov.f32 	%f425, 0fB94D4153;
	@%p63 bra 	$L__BB0_87;

	mov.f32 	%f343, 0fBAB607ED;
	mov.f32 	%f344, 0f37CBAC00;
	fma.rn.ftz.f32 	%f425, %f344, %f100, %f343;

$L__BB0_87:
	selp.f32 	%f345, 0f3C0885E4, 0f3D2AAABB, %p63;
	fma.rn.ftz.f32 	%f346, %f425, %f100, %f345;
	selp.f32 	%f347, 0fBE2AAAA8, 0fBEFFFFFF, %p63;
	fma.rn.ftz.f32 	%f348, %f346, %f100, %f347;
	fma.rn.ftz.f32 	%f350, %f100, %f101, %f130;
	fma.rn.ftz.f32 	%f427, %f348, %f350, %f101;
	and.b32  	%r84, %r24, 2;
	setp.eq.s32 	%p65, %r84, 0;
	@%p65 bra 	$L__BB0_89;

	mov.f32 	%f352, 0fBF800000;
	fma.rn.ftz.f32 	%f427, %f427, %f352, %f130;

$L__BB0_89:
	cvt.rzi.f32.f32 	%f353, %f99;
	setp.neu.ftz.f32 	%p66, %f353, %f99;
	@%p66 bra 	$L__BB0_91;

	mul.rn.ftz.f32 	%f427, %f99, %f130;

$L__BB0_91:
	// begin inline asm
	{  cvt.rn.f16.f32 %rs201, %f427;}

	// end inline asm
	// begin inline asm
	{mul.f16 %rs203,%rs100,%rs199;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs206,%rs203,%rs201;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs209,%rs192,%rs192;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs212,%rs209,%rs191;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs215,%rs212,%rs191;
}
	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f356, %rs206;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f357, %rs215;}

	// end inline asm
	// begin inline asm
	{rcp.approx.ftz.f32 %f358, %f357;
}
	// end inline asm
	mul.ftz.f32 	%f360, %f356, %f358;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs329, %f360;}

	// end inline asm
	and.b16  	%rs222, %rs329, 32767;
	mov.u16 	%rs223, 143;
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.lt.f16  __$temp3, %rs222, %rs223;
  selp.u16 %rs221, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p67, %rs221, 0;
	setp.eq.s16 	%p68, %rs222, 0;
	or.pred  	%p69, %p67, %p68;
	@%p69 bra 	$L__BB0_94;

	neg.ftz.f32 	%f362, %f357;
	fma.rn.ftz.f32 	%f363, %f362, %f360, %f356;
	fma.rn.ftz.f32 	%f361, %f358, %f363, %f360;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs329, %f361;}

	// end inline asm

$L__BB0_94:
	mov.b32 	{%rs226, %rs229}, %r73;
	mov.b32 	{%rs232, %rs235}, %r74;
	// begin inline asm
	{mul.f16 %rs228,%rs229,%rs323;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs225,%rs226,%rs323;
}
	// end inline asm
	mov.b32 	%r86, {%rs225, %rs228};
	// begin inline asm
	{mul.f16 %rs234,%rs235,%rs325;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs231,%rs232,%rs325;
}
	// end inline asm
	mov.b32 	%r87, {%rs231, %rs234};
	// begin inline asm
	{add.f16x2 %r85,%r86,%r87;
}
	// end inline asm
	mov.b32 	{%rs238, %rs241}, %r75;
	// begin inline asm
	{mul.f16 %rs240,%rs241,%rs327;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs237,%rs238,%rs327;
}
	// end inline asm
	mov.b32 	%r90, {%rs237, %rs240};
	// begin inline asm
	{add.f16x2 %r88,%r85,%r90;
}
	// end inline asm
	mov.b32 	{%rs244, %rs247}, %r76;
	// begin inline asm
	{mul.f16 %rs246,%rs247,%rs329;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs243,%rs244,%rs329;
}
	// end inline asm
	mov.b32 	%r93, {%rs243, %rs246};
	// begin inline asm
	{add.f16x2 %r134,%r88,%r93;
}
	// end inline asm

$L__BB0_95:
	mov.b32 	{%rs331, %rs330}, %r134;

$L__BB0_117:
	ld.const.u64 	%rd62, [QUPS_M];
	mul.lo.s64 	%rd56, %rd67, %rd62;
	add.s64 	%rd57, %rd56, %rd63;
	mul.lo.s64 	%rd58, %rd15, %rd57;
	add.s64 	%rd59, %rd58, %rd14;
	shl.b64 	%rd60, %rd59, 2;
	add.s64 	%rd61, %rd18, %rd60;
	st.global.v2.u16 	[%rd61], {%rs331, %rs330};
	add.s64 	%rd67, %rd67, 1;
	add.s64 	%rd65, %rd65, %rd17;
	add.s64 	%rd66, %rd66, -1;
	setp.ne.s64 	%p81, %rd66, 0;
	@%p81 bra 	$L__BB0_5;

$L__BB0_118:
	ret;

}
	// .globl	_Z10wsinterpdhP7ushort2PKS_S2_PKtPKmS6_S6_i
.visible .entry _Z10wsinterpdhP7ushort2PKS_S2_PKtPKmS6_S6_i(
	.param .u64 _Z10wsinterpdhP7ushort2PKS_S2_PKtPKmS6_S6_i_param_0,
	.param .u64 _Z10wsinterpdhP7ushort2PKS_S2_PKtPKmS6_S6_i_param_1,
	.param .u64 _Z10wsinterpdhP7ushort2PKS_S2_PKtPKmS6_S6_i_param_2,
	.param .u64 _Z10wsinterpdhP7ushort2PKS_S2_PKtPKmS6_S6_i_param_3,
	.param .u64 _Z10wsinterpdhP7ushort2PKS_S2_PKtPKmS6_S6_i_param_4,
	.param .u64 _Z10wsinterpdhP7ushort2PKS_S2_PKtPKmS6_S6_i_param_5,
	.param .u64 _Z10wsinterpdhP7ushort2PKS_S2_PKtPKmS6_S6_i_param_6,
	.param .u32 _Z10wsinterpdhP7ushort2PKS_S2_PKtPKmS6_S6_i_param_7
)
{
	.reg .pred 	%p<92>;
	.reg .b16 	%rs<354>;
	.reg .f32 	%f<442>;
	.reg .b32 	%r<148>;
	.reg .f64 	%fd<13>;
	.reg .b64 	%rd<167>;


	ld.param.u64 	%rd61, [_Z10wsinterpdhP7ushort2PKS_S2_PKtPKmS6_S6_i_param_1];
	ld.param.u64 	%rd65, [_Z10wsinterpdhP7ushort2PKS_S2_PKtPKmS6_S6_i_param_2];
	ld.param.u64 	%rd62, [_Z10wsinterpdhP7ushort2PKS_S2_PKtPKmS6_S6_i_param_3];
	ld.param.u64 	%rd66, [_Z10wsinterpdhP7ushort2PKS_S2_PKtPKmS6_S6_i_param_4];
	ld.param.u64 	%rd63, [_Z10wsinterpdhP7ushort2PKS_S2_PKtPKmS6_S6_i_param_5];
	ld.param.u64 	%rd64, [_Z10wsinterpdhP7ushort2PKS_S2_PKtPKmS6_S6_i_param_6];
	ld.param.u32 	%r38, [_Z10wsinterpdhP7ushort2PKS_S2_PKtPKmS6_S6_i_param_7];
	cvta.to.global.u64 	%rd1, %rd66;
	cvta.to.global.u64 	%rd2, %rd65;
	mov.u32 	%r39, %ntid.x;
	mov.u32 	%r40, %ctaid.x;
	mov.u32 	%r41, %tid.x;
	mad.lo.s32 	%r42, %r40, %r39, %r41;
	cvt.u64.u32 	%rd3, %r42;
	mov.u32 	%r43, %ntid.y;
	mov.u32 	%r44, %ctaid.y;
	mov.u32 	%r45, %tid.y;
	mad.lo.s32 	%r46, %r44, %r43, %r45;
	cvt.u64.u32 	%rd4, %r46;
	mov.f32 	%f130, 0f00000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs54, %f130;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs55, %f130;}

	// end inline asm
	ld.const.u64 	%rd5, [QUPS_M];
	ld.const.u64 	%rd6, [QUPS_N];
	ld.const.u64 	%rd7, [QUPS_T];
	ld.const.u64 	%rd8, [QUPS_F];
	ld.const.u64 	%rd9, [QUPS_S];
	ld.const.u64 	%rd10, [QUPS_I];
	and.b64  	%rd67, %rd10, -4294967296;
	setp.eq.s64 	%p1, %rd67, 0;
	@%p1 bra 	$L__BB1_2;

	div.u64 	%rd152, %rd3, %rd10;
	mul.lo.s64 	%rd68, %rd152, %rd10;
	sub.s64 	%rd153, %rd3, %rd68;
	bra.uni 	$L__BB1_3;

$L__BB1_2:
	cvt.u32.u64 	%r47, %rd10;
	cvt.u32.u64 	%r48, %rd3;
	div.u32 	%r49, %r48, %r47;
	mul.lo.s32 	%r50, %r49, %r47;
	sub.s32 	%r51, %r48, %r50;
	cvt.u64.u32 	%rd152, %r49;
	cvt.u64.u32 	%rd153, %r51;

$L__BB1_3:
	setp.ge.u64 	%p2, %rd152, %rd5;
	setp.le.u64 	%p3, %rd6, %rd4;
	or.pred  	%p4, %p2, %p3;
	setp.eq.s64 	%p5, %rd8, 0;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB1_134;

	cvta.to.global.u64 	%rd70, %rd62;
	mul.lo.s64 	%rd71, %rd10, %rd4;
	add.s64 	%rd17, %rd153, %rd71;
	mul.lo.s64 	%rd18, %rd152, %rd6;
	mul.lo.s64 	%rd72, %rd18, %rd10;
	add.s64 	%rd73, %rd72, %rd17;
	shl.b64 	%rd74, %rd73, 1;
	add.s64 	%rd19, %rd70, %rd74;
	mov.u64 	%rd154, 0;
	mov.b32 	%r1, {%rs54, %rs55};
	cvta.to.global.u64 	%rd20, %rd64;
	cvta.to.global.u64 	%rd21, %rd63;
	cvta.to.global.u64 	%rd22, %rd61;
	setp.eq.s64 	%p7, %rd9, 0;
	setp.gt.s32 	%p17, %r38, 1;
	setp.eq.s32 	%p21, %r38, 0;
	setp.eq.s32 	%p22, %r38, 1;
	mov.f64 	%fd1, 0d0000000000000000;
	// begin inline asm
	{  cvt.rn.f16.f64 %rs87, %fd1;}

	// end inline asm
	mov.f64 	%fd3, 0d4000000000000000;
	// begin inline asm
	{  cvt.rn.f16.f64 %rs104, %fd3;}

	// end inline asm
	mov.f64 	%fd11, 0d3FF0000000000000;
	// begin inline asm
	{  cvt.rn.f16.f64 %rs201, %fd11;}

	// end inline asm

$L__BB1_5:
	mov.u64 	%rd155, 0;
	mul.lo.s64 	%rd24, %rd154, %rd6;
	mul.lo.s64 	%rd80, %rd24, %rd5;
	add.s64 	%rd81, %rd80, %rd18;
	mul.lo.s64 	%rd82, %rd81, %rd10;
	add.s64 	%rd25, %rd82, %rd17;
	mov.u64 	%rd156, %rd155;
	mov.u64 	%rd157, %rd155;
	@%p7 bra 	$L__BB1_21;

$L__BB1_6:
	setp.eq.s64 	%p8, %rd155, 0;
	mov.u64 	%rd164, 1;
	@%p8 bra 	$L__BB1_14;

	add.s64 	%rd87, %rd155, -1;
	setp.lt.u64 	%p9, %rd87, 3;
	mov.u64 	%rd164, 1;
	mov.u64 	%rd162, 0;
	@%p9 bra 	$L__BB1_10;

	mov.u64 	%rd158, %rd1;

$L__BB1_9:
	and.b64  	%rd150, %rd155, 3;
	sub.s64 	%rd149, %rd150, %rd155;
	ld.global.u64 	%rd90, [%rd158];
	mul.lo.s64 	%rd91, %rd90, %rd164;
	ld.global.u64 	%rd92, [%rd158+8];
	mul.lo.s64 	%rd93, %rd92, %rd91;
	ld.global.u64 	%rd94, [%rd158+16];
	mul.lo.s64 	%rd95, %rd94, %rd93;
	ld.global.u64 	%rd96, [%rd158+24];
	mul.lo.s64 	%rd164, %rd96, %rd95;
	add.s64 	%rd158, %rd158, 32;
	add.s64 	%rd162, %rd162, 4;
	add.s64 	%rd97, %rd149, %rd162;
	setp.ne.s64 	%p10, %rd97, 0;
	@%p10 bra 	$L__BB1_9;

$L__BB1_10:
	and.b64  	%rd146, %rd155, 3;
	setp.eq.s64 	%p11, %rd146, 0;
	@%p11 bra 	$L__BB1_14;

	and.b64  	%rd147, %rd155, 3;
	shl.b64 	%rd98, %rd162, 3;
	add.s64 	%rd40, %rd1, %rd98;
	ld.global.u64 	%rd99, [%rd40];
	mul.lo.s64 	%rd164, %rd99, %rd164;
	setp.eq.s64 	%p12, %rd147, 1;
	@%p12 bra 	$L__BB1_14;

	and.b64  	%rd148, %rd155, 3;
	ld.global.u64 	%rd100, [%rd40+8];
	mul.lo.s64 	%rd164, %rd100, %rd164;
	setp.eq.s64 	%p13, %rd148, 2;
	@%p13 bra 	$L__BB1_14;

	ld.global.u64 	%rd101, [%rd40+16];
	mul.lo.s64 	%rd164, %rd101, %rd164;

$L__BB1_14:
	or.b64  	%rd102, %rd25, %rd164;
	and.b64  	%rd103, %rd102, -4294967296;
	setp.eq.s64 	%p14, %rd103, 0;
	@%p14 bra 	$L__BB1_16;

	div.u64 	%rd165, %rd25, %rd164;
	bra.uni 	$L__BB1_17;

$L__BB1_16:
	cvt.u32.u64 	%r52, %rd164;
	cvt.u32.u64 	%r53, %rd25;
	div.u32 	%r54, %r53, %r52;
	cvt.u64.u32 	%rd165, %r54;

$L__BB1_17:
	shl.b64 	%rd104, %rd155, 3;
	add.s64 	%rd105, %rd1, %rd104;
	ld.global.u64 	%rd48, [%rd105];
	or.b64  	%rd106, %rd165, %rd48;
	and.b64  	%rd107, %rd106, -4294967296;
	setp.eq.s64 	%p15, %rd107, 0;
	@%p15 bra 	$L__BB1_19;

	rem.u64 	%rd166, %rd165, %rd48;
	bra.uni 	$L__BB1_20;

$L__BB1_19:
	cvt.u32.u64 	%r55, %rd48;
	cvt.u32.u64 	%r56, %rd165;
	rem.u32 	%r57, %r56, %r55;
	cvt.u64.u32 	%rd166, %r57;

$L__BB1_20:
	shl.b64 	%rd151, %rd155, 3;
	add.s64 	%rd109, %rd21, %rd151;
	ld.global.u64 	%rd110, [%rd109];
	mul.lo.s64 	%rd111, %rd110, %rd166;
	add.s64 	%rd157, %rd111, %rd157;
	add.s64 	%rd112, %rd20, %rd151;
	ld.global.u64 	%rd113, [%rd112];
	mul.lo.s64 	%rd114, %rd113, %rd166;
	add.s64 	%rd156, %rd114, %rd156;
	add.s64 	%rd155, %rd155, 1;
	setp.lt.u64 	%p16, %rd155, %rd9;
	@%p16 bra 	$L__BB1_6;

$L__BB1_21:
	shl.b64 	%rd115, %rd157, 2;
	add.s64 	%rd116, %rd22, %rd115;
	ld.global.nc.v2.u16 	{%rs58, %rs59}, [%rd116];
	// begin inline asm
	{  mov.b32 %r58, {%rs58,%rs59};}

	// end inline asm
	add.s64 	%rd117, %rd24, %rd4;
	mul.lo.s64 	%rd57, %rd117, %rd7;
	ld.global.nc.u16 	%rs3, [%rd19];
	@%p17 bra 	$L__BB1_24;
	bra.uni 	$L__BB1_22;

$L__BB1_24:
	setp.eq.s32 	%p18, %r38, 2;
	@%p18 bra 	$L__BB1_112;

	setp.eq.s32 	%p19, %r38, 3;
	@%p19 bra 	$L__BB1_36;

	setp.ne.s32 	%p20, %r38, 4;
	mov.u16 	%rs352, %rs55;
	mov.u16 	%rs353, %rs54;
	@%p20 bra 	$L__BB1_133;

	// begin inline asm
	{  cvt.f32.f16 %f410, %rs3;}

	// end inline asm
	abs.ftz.f32 	%f2, %f410;
	setp.lt.ftz.f32 	%p23, %f2, 0f7F800000;
	@%p23 bra 	$L__BB1_31;
	bra.uni 	$L__BB1_28;

$L__BB1_31:
	cvt.rzi.f32.f32 	%f5, %f410;
	sub.ftz.f32 	%f132, %f410, %f5;
	mov.b32 	%r61, %f132;
	mov.b32 	%r62, %f410;
	and.b32  	%r63, %r62, -2147483648;
	or.b32  	%r64, %r63, %r61;
	mov.b32 	%f411, %r64;
	mov.f32 	%f410, %f5;
	bra.uni 	$L__BB1_32;

$L__BB1_22:
	@%p21 bra 	$L__BB1_129;

	mov.u16 	%rs352, %rs55;
	mov.u16 	%rs353, %rs54;
	@%p22 bra 	$L__BB1_120;
	bra.uni 	$L__BB1_133;

$L__BB1_120:
	// begin inline asm
	{  cvt.f32.f16 %f440, %rs3;}

	// end inline asm
	abs.ftz.f32 	%f122, %f440;
	setp.lt.ftz.f32 	%p85, %f122, 0f7F800000;
	@%p85 bra 	$L__BB1_124;
	bra.uni 	$L__BB1_121;

$L__BB1_124:
	cvt.rzi.f32.f32 	%f125, %f440;
	sub.ftz.f32 	%f381, %f440, %f125;
	mov.b32 	%r124, %f381;
	mov.b32 	%r125, %f440;
	and.b32  	%r126, %r125, -2147483648;
	or.b32  	%r127, %r126, %r124;
	mov.b32 	%f441, %r127;
	mov.f32 	%f440, %f125;
	bra.uni 	$L__BB1_125;

$L__BB1_112:
	// begin inline asm
	{  cvt.f32.f16 %f438, %rs3;}

	// end inline asm
	abs.ftz.f32 	%f114, %f438;
	setp.lt.ftz.f32 	%p80, %f114, 0f7F800000;
	@%p80 bra 	$L__BB1_116;
	bra.uni 	$L__BB1_113;

$L__BB1_116:
	cvt.rzi.f32.f32 	%f117, %f438;
	sub.ftz.f32 	%f365, %f438, %f117;
	mov.b32 	%r104, %f365;
	mov.b32 	%r105, %f438;
	and.b32  	%r106, %r105, -2147483648;
	or.b32  	%r107, %r106, %r104;
	mov.b32 	%f439, %r107;
	mov.f32 	%f438, %f117;
	bra.uni 	$L__BB1_117;

$L__BB1_36:
	// begin inline asm
	{  cvt.f32.f16 %f412, %rs3;}

	// end inline asm
	abs.ftz.f32 	%f10, %f412;
	setp.lt.ftz.f32 	%p27, %f10, 0f7F800000;
	@%p27 bra 	$L__BB1_40;
	bra.uni 	$L__BB1_37;

$L__BB1_40:
	cvt.rzi.f32.f32 	%f13, %f412;
	sub.ftz.f32 	%f135, %f412, %f13;
	mov.b32 	%r76, %f135;
	mov.b32 	%r77, %f412;
	and.b32  	%r78, %r77, -2147483648;
	or.b32  	%r79, %r78, %r76;
	mov.b32 	%f413, %r79;
	mov.f32 	%f412, %f13;
	bra.uni 	$L__BB1_41;

$L__BB1_129:
	// begin inline asm
	{  cvt.f32.f16 %f383, %rs3;}

	// end inline asm
	mov.b32 	%r137, %f383;
	and.b32  	%r138, %r137, -2147483648;
	or.b32  	%r139, %r138, 1056964608;
	mov.b32 	%f384, %r139;
	add.rz.ftz.f32 	%f385, %f383, %f384;
	cvt.rzi.f32.f32 	%f386, %f385;
	cvt.rzi.ftz.s32.f32 	%r35, %f386;
	setp.lt.s32 	%p89, %r35, 0;
	mov.u32 	%r147, %r1;
	@%p89 bra 	$L__BB1_132;

	cvt.s64.s32 	%rd58, %r35;
	setp.le.u64 	%p90, %rd7, %rd58;
	mov.u32 	%r147, %r1;
	@%p90 bra 	$L__BB1_132;

	add.s64 	%rd138, %rd57, %rd58;
	shl.b64 	%rd139, %rd138, 2;
	add.s64 	%rd140, %rd2, %rd139;
	ld.global.nc.v2.u16 	{%rs324, %rs325}, [%rd140];
	// begin inline asm
	{  mov.b32 %r147, {%rs324,%rs325};}

	// end inline asm

$L__BB1_132:
	mov.b32 	{%rs353, %rs352}, %r147;
	bra.uni 	$L__BB1_133;

$L__BB1_28:
	setp.eq.ftz.f32 	%p24, %f2, 0f7F800000;
	@%p24 bra 	$L__BB1_30;
	bra.uni 	$L__BB1_29;

$L__BB1_30:
	mov.b32 	%r59, %f410;
	and.b32  	%r60, %r59, -2147483648;
	mov.b32 	%f411, %r60;
	bra.uni 	$L__BB1_32;

$L__BB1_121:
	setp.eq.ftz.f32 	%p86, %f122, 0f7F800000;
	@%p86 bra 	$L__BB1_123;
	bra.uni 	$L__BB1_122;

$L__BB1_123:
	mov.b32 	%r122, %f440;
	and.b32  	%r123, %r122, -2147483648;
	mov.b32 	%f441, %r123;
	bra.uni 	$L__BB1_125;

$L__BB1_113:
	setp.eq.ftz.f32 	%p81, %f114, 0f7F800000;
	@%p81 bra 	$L__BB1_115;
	bra.uni 	$L__BB1_114;

$L__BB1_115:
	mov.b32 	%r102, %f438;
	and.b32  	%r103, %r102, -2147483648;
	mov.b32 	%f439, %r103;
	bra.uni 	$L__BB1_117;

$L__BB1_37:
	setp.eq.ftz.f32 	%p28, %f10, 0f7F800000;
	@%p28 bra 	$L__BB1_39;
	bra.uni 	$L__BB1_38;

$L__BB1_39:
	mov.b32 	%r74, %f412;
	and.b32  	%r75, %r74, -2147483648;
	mov.b32 	%f413, %r75;
	bra.uni 	$L__BB1_41;

$L__BB1_114:
	add.ftz.f32 	%f438, %f438, %f438;
	mov.f32 	%f439, %f438;

$L__BB1_117:
	cvt.rzi.ftz.s32.f32 	%r29, %f438;
	setp.lt.s32 	%p82, %r29, 1;
	add.s32 	%r108, %r29, 2;
	cvt.s64.s32 	%rd128, %r108;
	setp.le.u64 	%p83, %rd7, %rd128;
	or.pred  	%p84, %p82, %p83;
	mov.u32 	%r145, %r1;
	@%p84 bra 	$L__BB1_119;

	cvt.s64.s32 	%rd129, %r29;
	add.s64 	%rd130, %rd57, %rd129;
	shl.b64 	%rd131, %rd130, 2;
	add.s64 	%rd132, %rd2, %rd131;
	ld.global.nc.v2.u16 	{%rs297, %rs298}, [%rd132+-4];
	// begin inline asm
	{  mov.b32 %r109, {%rs297,%rs298};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs299, %rs300}, [%rd132];
	// begin inline asm
	{  mov.b32 %r110, {%rs299,%rs300};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs301, %rs302}, [%rd132+4];
	// begin inline asm
	{  mov.b32 %r111, {%rs301,%rs302};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs303, %rs304}, [%rd132+8];
	// begin inline asm
	{  mov.b32 %r112, {%rs303,%rs304};}

	// end inline asm
	fma.rn.ftz.f32 	%f371, %f439, 0f40000000, 0fBF800000;
	mov.f32 	%f372, 0f3F800000;
	fma.rn.ftz.f32 	%f373, %f439, %f371, 0fBF800000;
	fma.rn.ftz.f32 	%f366, %f439, %f373, 0f00000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs262, %f366;}

	// end inline asm
	fma.rn.ftz.f32 	%f374, %f439, 0fC0A00000, 0f40400000;
	fma.rn.ftz.f32 	%f375, %f439, %f374, 0f00000000;
	fma.rn.ftz.f32 	%f367, %f439, %f375, 0f40000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs263, %f367;}

	// end inline asm
	fma.rn.ftz.f32 	%f376, %f439, 0f40800000, 0fC0400000;
	fma.rn.ftz.f32 	%f377, %f439, %f376, 0f3F800000;
	fma.rn.ftz.f32 	%f368, %f439, %f377, 0f00000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs264, %f368;}

	// end inline asm
	sub.ftz.f32 	%f378, %f372, %f439;
	fma.rn.ftz.f32 	%f379, %f439, %f378, 0f00000000;
	fma.rn.ftz.f32 	%f369, %f439, %f379, 0f00000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs265, %f369;}

	// end inline asm
	mov.b32 	{%rs267, %rs270}, %r109;
	mov.b32 	{%rs273, %rs276}, %r110;
	// begin inline asm
	{mul.f16 %rs269,%rs270,%rs262;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs266,%rs267,%rs262;
}
	// end inline asm
	mov.b32 	%r114, {%rs266, %rs269};
	// begin inline asm
	{mul.f16 %rs275,%rs276,%rs263;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs272,%rs273,%rs263;
}
	// end inline asm
	mov.b32 	%r115, {%rs272, %rs275};
	// begin inline asm
	{add.f16x2 %r113,%r114,%r115;
}
	// end inline asm
	mov.b32 	{%rs279, %rs282}, %r111;
	// begin inline asm
	{mul.f16 %rs281,%rs282,%rs264;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs278,%rs279,%rs264;
}
	// end inline asm
	mov.b32 	%r118, {%rs278, %rs281};
	// begin inline asm
	{add.f16x2 %r116,%r113,%r118;
}
	// end inline asm
	mov.b32 	{%rs285, %rs288}, %r112;
	// begin inline asm
	{mul.f16 %rs287,%rs288,%rs265;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs284,%rs285,%rs265;
}
	// end inline asm
	mov.b32 	%r121, {%rs284, %rs287};
	// begin inline asm
	{add.f16x2 %r119,%r116,%r121;
}
	// end inline asm
	mov.b32 	{%rs292, %rs295}, %r119;
	mov.f32 	%f370, 0f3F000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs290, %f370;}

	// end inline asm
	// begin inline asm
	{mul.f16 %rs294,%rs295,%rs290;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs291,%rs292,%rs290;
}
	// end inline asm
	mov.b32 	%r145, {%rs291, %rs294};

$L__BB1_119:
	mov.b32 	{%rs353, %rs352}, %r145;
	bra.uni 	$L__BB1_133;

$L__BB1_29:
	add.ftz.f32 	%f410, %f410, %f410;
	mov.f32 	%f411, %f410;

$L__BB1_32:
	// begin inline asm
	{  cvt.rn.f16.f32 %rs61, %f411;}

	// end inline asm
	cvt.rzi.ftz.s32.f32 	%r3, %f410;
	setp.lt.s32 	%p25, %r3, 0;
	mov.u32 	%r143, %r1;
	@%p25 bra 	$L__BB1_35;

	add.s32 	%r65, %r3, 1;
	cvt.s64.s32 	%rd118, %r65;
	setp.le.u64 	%p26, %rd7, %rd118;
	mov.u32 	%r143, %r1;
	@%p26 bra 	$L__BB1_35;

	cvt.s64.s32 	%rd119, %r3;
	add.s64 	%rd120, %rd57, %rd119;
	shl.b64 	%rd121, %rd120, 2;
	add.s64 	%rd122, %rd2, %rd121;
	ld.global.nc.v2.u16 	{%rs72, %rs73}, [%rd122];
	// begin inline asm
	{  mov.b32 %r66, {%rs72,%rs73};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs74, %rs75}, [%rd122+4];
	// begin inline asm
	{  mov.b32 %r67, {%rs74,%rs75};}

	// end inline asm
	// begin inline asm
	{sub.f16x2 %r68,%r67,%r66;
}
	// end inline asm
	mov.b32 	{%rs68, %rs71}, %r68;
	// begin inline asm
	{mul.f16 %rs69,%rs61,%rs71;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs66,%rs61,%rs68;
}
	// end inline asm
	mov.b32 	%r73, {%rs66, %rs69};
	// begin inline asm
	{add.f16x2 %r143,%r66,%r73;
}
	// end inline asm

$L__BB1_35:
	mov.b32 	{%rs353, %rs352}, %r143;
	bra.uni 	$L__BB1_133;

$L__BB1_122:
	add.ftz.f32 	%f440, %f440, %f440;
	mov.f32 	%f441, %f440;

$L__BB1_125:
	// begin inline asm
	{  cvt.rn.f16.f32 %rs306, %f441;}

	// end inline asm
	cvt.rzi.ftz.s32.f32 	%r32, %f440;
	setp.lt.s32 	%p87, %r32, 0;
	mov.u32 	%r146, %r1;
	@%p87 bra 	$L__BB1_128;

	add.s32 	%r128, %r32, 1;
	cvt.s64.s32 	%rd133, %r128;
	setp.le.u64 	%p88, %rd7, %rd133;
	mov.u32 	%r146, %r1;
	@%p88 bra 	$L__BB1_128;

	cvt.s64.s32 	%rd134, %r32;
	add.s64 	%rd135, %rd57, %rd134;
	shl.b64 	%rd136, %rd135, 2;
	add.s64 	%rd137, %rd2, %rd136;
	ld.global.nc.v2.u16 	{%rs317, %rs318}, [%rd137];
	// begin inline asm
	{  mov.b32 %r129, {%rs317,%rs318};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs319, %rs320}, [%rd137+4];
	// begin inline asm
	{  mov.b32 %r130, {%rs319,%rs320};}

	// end inline asm
	// begin inline asm
	{sub.f16x2 %r131,%r130,%r129;
}
	// end inline asm
	mov.b32 	{%rs313, %rs316}, %r131;
	// begin inline asm
	{mul.f16 %rs314,%rs306,%rs316;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs311,%rs306,%rs313;
}
	// end inline asm
	mov.b32 	%r136, {%rs311, %rs314};
	// begin inline asm
	{add.f16x2 %r146,%r129,%r136;
}
	// end inline asm

$L__BB1_128:
	mov.b32 	{%rs353, %rs352}, %r146;
	bra.uni 	$L__BB1_133;

$L__BB1_38:
	add.ftz.f32 	%f412, %f412, %f412;
	mov.f32 	%f413, %f412;

$L__BB1_41:
	cvt.rzi.ftz.s32.f32 	%r6, %f412;
	setp.lt.s32 	%p29, %r6, 1;
	add.s32 	%r80, %r6, 2;
	cvt.s64.s32 	%rd123, %r80;
	setp.le.u64 	%p30, %rd7, %rd123;
	or.pred  	%p31, %p29, %p30;
	mov.u32 	%r144, %r1;
	@%p31 bra 	$L__BB1_111;

	cvt.s64.s32 	%rd124, %r6;
	add.s64 	%rd125, %rd57, %rd124;
	shl.b64 	%rd126, %rd125, 2;
	add.s64 	%rd127, %rd2, %rd126;
	ld.global.nc.v2.u16 	{%rs91, %rs92}, [%rd127+-4];
	// begin inline asm
	{  mov.b32 %r81, {%rs91,%rs92};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs93, %rs94}, [%rd127];
	// begin inline asm
	{  mov.b32 %r82, {%rs93,%rs94};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs95, %rs96}, [%rd127+4];
	// begin inline asm
	{  mov.b32 %r83, {%rs95,%rs96};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs97, %rs98}, [%rd127+8];
	// begin inline asm
	{  mov.b32 %r84, {%rs97,%rs98};}

	// end inline asm
	add.ftz.f32 	%f136, %f413, 0f3F800000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs85, %f136;}

	// end inline asm
	mov.f32 	%f137, 0f40490FDB;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs86, %f137;}

	// end inline asm
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.eq.f16  __$temp3, %rs85, %rs87;
  selp.u16 %rs88, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p32, %rs88, 0;
	@%p32 bra 	$L__BB1_44;

	mov.u16 	%rs345, %rs201;
	bra.uni 	$L__BB1_59;

$L__BB1_44:
	// begin inline asm
	{  cvt.f32.f16 %f138, %rs85;}

	// end inline asm
	add.ftz.f32 	%f140, %f138, %f138;
	cvt.rni.f32.f32 	%f141, %f140;
	cvt.rzi.ftz.s32.f32 	%r11, %f141;
	neg.ftz.f32 	%f142, %f141;
	mov.f32 	%f143, 0f3F000000;
	fma.rn.ftz.f32 	%f144, %f142, %f143, %f138;
	mul.ftz.f32 	%f145, %f144, 0f34222169;
	mov.f32 	%f146, 0f40490FDA;
	fma.rn.ftz.f32 	%f147, %f144, %f146, %f145;
	mul.rn.ftz.f32 	%f18, %f147, %f147;
	and.b32  	%r12, %r11, 1;
	setp.eq.s32 	%p33, %r12, 0;
	selp.f32 	%f19, %f147, 0f3F800000, %p33;
	mov.f32 	%f414, 0fB94D4153;
	@%p33 bra 	$L__BB1_46;

	mov.f32 	%f148, 0fBAB607ED;
	mov.f32 	%f149, 0f37CBAC00;
	fma.rn.ftz.f32 	%f414, %f149, %f18, %f148;

$L__BB1_46:
	selp.f32 	%f150, 0f3C0885E4, 0f3D2AAABB, %p33;
	fma.rn.ftz.f32 	%f151, %f414, %f18, %f150;
	selp.f32 	%f152, 0fBE2AAAA8, 0fBEFFFFFF, %p33;
	fma.rn.ftz.f32 	%f153, %f151, %f18, %f152;
	fma.rn.ftz.f32 	%f155, %f18, %f19, %f130;
	fma.rn.ftz.f32 	%f416, %f153, %f155, %f19;
	and.b32  	%r85, %r11, 2;
	setp.eq.s32 	%p35, %r85, 0;
	@%p35 bra 	$L__BB1_48;

	mov.f32 	%f157, 0fBF800000;
	fma.rn.ftz.f32 	%f416, %f416, %f157, %f130;

$L__BB1_48:
	cvt.rzi.f32.f32 	%f158, %f138;
	setp.neu.ftz.f32 	%p36, %f158, %f138;
	@%p36 bra 	$L__BB1_50;

	mul.rn.ftz.f32 	%f416, %f138, %f130;

$L__BB1_50:
	mov.f32 	%f393, 0f40490FDA;
	mov.f32 	%f392, 0f3F000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs101, %f416;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f161, %rs85;}

	// end inline asm
	mov.f32 	%f163, 0f40000000;
	div.approx.ftz.f32 	%f27, %f161, %f163;
	add.ftz.f32 	%f164, %f27, %f27;
	cvt.rni.f32.f32 	%f165, %f164;
	cvt.rzi.ftz.s32.f32 	%r13, %f165;
	neg.ftz.f32 	%f166, %f165;
	fma.rn.ftz.f32 	%f168, %f166, %f392, %f27;
	mul.ftz.f32 	%f169, %f168, 0f34222169;
	fma.rn.ftz.f32 	%f171, %f168, %f393, %f169;
	mul.rn.ftz.f32 	%f28, %f171, %f171;
	and.b32  	%r14, %r13, 1;
	setp.eq.s32 	%p37, %r14, 0;
	selp.f32 	%f29, %f171, 0f3F800000, %p37;
	mov.f32 	%f417, 0fB94D4153;
	@%p37 bra 	$L__BB1_52;

	mov.f32 	%f172, 0fBAB607ED;
	mov.f32 	%f173, 0f37CBAC00;
	fma.rn.ftz.f32 	%f417, %f173, %f28, %f172;

$L__BB1_52:
	selp.f32 	%f174, 0f3C0885E4, 0f3D2AAABB, %p37;
	fma.rn.ftz.f32 	%f175, %f417, %f28, %f174;
	selp.f32 	%f176, 0fBE2AAAA8, 0fBEFFFFFF, %p37;
	fma.rn.ftz.f32 	%f177, %f175, %f28, %f176;
	fma.rn.ftz.f32 	%f179, %f28, %f29, %f130;
	fma.rn.ftz.f32 	%f419, %f177, %f179, %f29;
	and.b32  	%r86, %r13, 2;
	setp.eq.s32 	%p39, %r86, 0;
	@%p39 bra 	$L__BB1_54;

	mov.f32 	%f181, 0fBF800000;
	fma.rn.ftz.f32 	%f419, %f419, %f181, %f130;

$L__BB1_54:
	cvt.rzi.f32.f32 	%f182, %f27;
	setp.neu.ftz.f32 	%p40, %f182, %f27;
	@%p40 bra 	$L__BB1_56;

	mul.rn.ftz.f32 	%f419, %f27, %f130;

$L__BB1_56:
	// begin inline asm
	{  cvt.rn.f16.f32 %rs103, %f419;}

	// end inline asm
	// begin inline asm
	{mul.f16 %rs105,%rs104,%rs101;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs108,%rs105,%rs103;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs111,%rs86,%rs86;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs114,%rs111,%rs85;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs117,%rs114,%rs85;
}
	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f185, %rs108;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f186, %rs117;}

	// end inline asm
	// begin inline asm
	{rcp.approx.ftz.f32 %f187, %f186;
}
	// end inline asm
	mul.ftz.f32 	%f189, %f185, %f187;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs345, %f189;}

	// end inline asm
	and.b16  	%rs124, %rs345, 32767;
	mov.u16 	%rs125, 143;
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.lt.f16  __$temp3, %rs124, %rs125;
  selp.u16 %rs123, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p41, %rs123, 0;
	setp.eq.s16 	%p42, %rs124, 0;
	or.pred  	%p43, %p41, %p42;
	@%p43 bra 	$L__BB1_59;

	neg.ftz.f32 	%f191, %f186;
	fma.rn.ftz.f32 	%f192, %f191, %f189, %f185;
	fma.rn.ftz.f32 	%f190, %f187, %f192, %f189;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs345, %f190;}

	// end inline asm

$L__BB1_59:
	mov.f32 	%f390, 0f40490FDB;
	add.ftz.f32 	%f193, %f413, 0f00000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs127, %f193;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs128, %f390;}

	// end inline asm
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.eq.f16  __$temp3, %rs127, %rs87;
  selp.u16 %rs130, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p44, %rs130, 0;
	@%p44 bra 	$L__BB1_61;

	mov.u16 	%rs347, %rs201;
	bra.uni 	$L__BB1_76;

$L__BB1_61:
	// begin inline asm
	{  cvt.f32.f16 %f195, %rs127;}

	// end inline asm
	add.ftz.f32 	%f197, %f195, %f195;
	cvt.rni.f32.f32 	%f198, %f197;
	cvt.rzi.ftz.s32.f32 	%r15, %f198;
	neg.ftz.f32 	%f199, %f198;
	mov.f32 	%f200, 0f3F000000;
	fma.rn.ftz.f32 	%f201, %f199, %f200, %f195;
	mul.ftz.f32 	%f202, %f201, 0f34222169;
	mov.f32 	%f203, 0f40490FDA;
	fma.rn.ftz.f32 	%f204, %f201, %f203, %f202;
	mul.rn.ftz.f32 	%f42, %f204, %f204;
	and.b32  	%r16, %r15, 1;
	setp.eq.s32 	%p45, %r16, 0;
	selp.f32 	%f43, %f204, 0f3F800000, %p45;
	mov.f32 	%f420, 0fB94D4153;
	@%p45 bra 	$L__BB1_63;

	mov.f32 	%f205, 0fBAB607ED;
	mov.f32 	%f206, 0f37CBAC00;
	fma.rn.ftz.f32 	%f420, %f206, %f42, %f205;

$L__BB1_63:
	selp.f32 	%f207, 0f3C0885E4, 0f3D2AAABB, %p45;
	fma.rn.ftz.f32 	%f208, %f420, %f42, %f207;
	selp.f32 	%f209, 0fBE2AAAA8, 0fBEFFFFFF, %p45;
	fma.rn.ftz.f32 	%f210, %f208, %f42, %f209;
	fma.rn.ftz.f32 	%f212, %f42, %f43, %f130;
	fma.rn.ftz.f32 	%f422, %f210, %f212, %f43;
	and.b32  	%r87, %r15, 2;
	setp.eq.s32 	%p47, %r87, 0;
	@%p47 bra 	$L__BB1_65;

	mov.f32 	%f214, 0fBF800000;
	fma.rn.ftz.f32 	%f422, %f422, %f214, %f130;

$L__BB1_65:
	cvt.rzi.f32.f32 	%f215, %f195;
	setp.neu.ftz.f32 	%p48, %f215, %f195;
	@%p48 bra 	$L__BB1_67;

	mul.rn.ftz.f32 	%f422, %f195, %f130;

$L__BB1_67:
	mov.f32 	%f395, 0f40490FDA;
	mov.f32 	%f394, 0f3F000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs135, %f422;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f218, %rs127;}

	// end inline asm
	mov.f32 	%f220, 0f40000000;
	div.approx.ftz.f32 	%f51, %f218, %f220;
	add.ftz.f32 	%f221, %f51, %f51;
	cvt.rni.f32.f32 	%f222, %f221;
	cvt.rzi.ftz.s32.f32 	%r17, %f222;
	neg.ftz.f32 	%f223, %f222;
	fma.rn.ftz.f32 	%f225, %f223, %f394, %f51;
	mul.ftz.f32 	%f226, %f225, 0f34222169;
	fma.rn.ftz.f32 	%f228, %f225, %f395, %f226;
	mul.rn.ftz.f32 	%f52, %f228, %f228;
	and.b32  	%r18, %r17, 1;
	setp.eq.s32 	%p49, %r18, 0;
	selp.f32 	%f53, %f228, 0f3F800000, %p49;
	mov.f32 	%f423, 0fB94D4153;
	@%p49 bra 	$L__BB1_69;

	mov.f32 	%f229, 0fBAB607ED;
	mov.f32 	%f230, 0f37CBAC00;
	fma.rn.ftz.f32 	%f423, %f230, %f52, %f229;

$L__BB1_69:
	selp.f32 	%f231, 0f3C0885E4, 0f3D2AAABB, %p49;
	fma.rn.ftz.f32 	%f232, %f423, %f52, %f231;
	selp.f32 	%f233, 0fBE2AAAA8, 0fBEFFFFFF, %p49;
	fma.rn.ftz.f32 	%f234, %f232, %f52, %f233;
	fma.rn.ftz.f32 	%f236, %f52, %f53, %f130;
	fma.rn.ftz.f32 	%f425, %f234, %f236, %f53;
	and.b32  	%r88, %r17, 2;
	setp.eq.s32 	%p51, %r88, 0;
	@%p51 bra 	$L__BB1_71;

	mov.f32 	%f238, 0fBF800000;
	fma.rn.ftz.f32 	%f425, %f425, %f238, %f130;

$L__BB1_71:
	mov.f32 	%f397, 0f40000000;
	div.approx.ftz.f32 	%f396, %f218, %f397;
	cvt.rzi.f32.f32 	%f239, %f396;
	setp.neu.ftz.f32 	%p52, %f239, %f396;
	@%p52 bra 	$L__BB1_73;

	mov.f32 	%f399, 0f40000000;
	div.approx.ftz.f32 	%f398, %f218, %f399;
	mul.rn.ftz.f32 	%f425, %f398, %f130;

$L__BB1_73:
	// begin inline asm
	{  cvt.rn.f16.f32 %rs137, %f425;}

	// end inline asm
	// begin inline asm
	{mul.f16 %rs139,%rs104,%rs135;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs142,%rs139,%rs137;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs145,%rs128,%rs128;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs148,%rs145,%rs127;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs151,%rs148,%rs127;
}
	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f242, %rs142;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f243, %rs151;}

	// end inline asm
	// begin inline asm
	{rcp.approx.ftz.f32 %f244, %f243;
}
	// end inline asm
	mul.ftz.f32 	%f246, %f242, %f244;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs347, %f246;}

	// end inline asm
	and.b16  	%rs158, %rs347, 32767;
	mov.u16 	%rs159, 143;
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.lt.f16  __$temp3, %rs158, %rs159;
  selp.u16 %rs157, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p53, %rs157, 0;
	setp.eq.s16 	%p54, %rs158, 0;
	or.pred  	%p55, %p53, %p54;
	@%p55 bra 	$L__BB1_76;

	neg.ftz.f32 	%f248, %f243;
	fma.rn.ftz.f32 	%f249, %f248, %f246, %f242;
	fma.rn.ftz.f32 	%f247, %f244, %f249, %f246;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs347, %f247;}

	// end inline asm

$L__BB1_76:
	mov.f32 	%f391, 0f40490FDB;
	add.ftz.f32 	%f250, %f413, 0fBF800000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs161, %f250;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs162, %f391;}

	// end inline asm
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.eq.f16  __$temp3, %rs161, %rs87;
  selp.u16 %rs164, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p56, %rs164, 0;
	@%p56 bra 	$L__BB1_78;

	mov.u16 	%rs349, %rs201;
	bra.uni 	$L__BB1_93;

$L__BB1_78:
	// begin inline asm
	{  cvt.f32.f16 %f252, %rs161;}

	// end inline asm
	add.ftz.f32 	%f254, %f252, %f252;
	cvt.rni.f32.f32 	%f255, %f254;
	cvt.rzi.ftz.s32.f32 	%r19, %f255;
	neg.ftz.f32 	%f256, %f255;
	mov.f32 	%f257, 0f3F000000;
	fma.rn.ftz.f32 	%f258, %f256, %f257, %f252;
	mul.ftz.f32 	%f259, %f258, 0f34222169;
	mov.f32 	%f260, 0f40490FDA;
	fma.rn.ftz.f32 	%f261, %f258, %f260, %f259;
	mul.rn.ftz.f32 	%f66, %f261, %f261;
	and.b32  	%r20, %r19, 1;
	setp.eq.s32 	%p57, %r20, 0;
	selp.f32 	%f67, %f261, 0f3F800000, %p57;
	mov.f32 	%f426, 0fB94D4153;
	@%p57 bra 	$L__BB1_80;

	mov.f32 	%f262, 0fBAB607ED;
	mov.f32 	%f263, 0f37CBAC00;
	fma.rn.ftz.f32 	%f426, %f263, %f66, %f262;

$L__BB1_80:
	selp.f32 	%f264, 0f3C0885E4, 0f3D2AAABB, %p57;
	fma.rn.ftz.f32 	%f265, %f426, %f66, %f264;
	selp.f32 	%f266, 0fBE2AAAA8, 0fBEFFFFFF, %p57;
	fma.rn.ftz.f32 	%f267, %f265, %f66, %f266;
	fma.rn.ftz.f32 	%f269, %f66, %f67, %f130;
	fma.rn.ftz.f32 	%f428, %f267, %f269, %f67;
	and.b32  	%r89, %r19, 2;
	setp.eq.s32 	%p59, %r89, 0;
	@%p59 bra 	$L__BB1_82;

	mov.f32 	%f271, 0fBF800000;
	fma.rn.ftz.f32 	%f428, %f428, %f271, %f130;

$L__BB1_82:
	cvt.rzi.f32.f32 	%f272, %f252;
	setp.neu.ftz.f32 	%p60, %f272, %f252;
	@%p60 bra 	$L__BB1_84;

	mul.rn.ftz.f32 	%f428, %f252, %f130;

$L__BB1_84:
	mov.f32 	%f388, 0f40490FDA;
	mov.f32 	%f387, 0f3F000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs169, %f428;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f275, %rs161;}

	// end inline asm
	mov.f32 	%f277, 0f40000000;
	div.approx.ftz.f32 	%f75, %f275, %f277;
	add.ftz.f32 	%f278, %f75, %f75;
	cvt.rni.f32.f32 	%f279, %f278;
	cvt.rzi.ftz.s32.f32 	%r21, %f279;
	neg.ftz.f32 	%f280, %f279;
	fma.rn.ftz.f32 	%f282, %f280, %f387, %f75;
	mul.ftz.f32 	%f283, %f282, 0f34222169;
	fma.rn.ftz.f32 	%f285, %f282, %f388, %f283;
	mul.rn.ftz.f32 	%f76, %f285, %f285;
	and.b32  	%r22, %r21, 1;
	setp.eq.s32 	%p61, %r22, 0;
	selp.f32 	%f77, %f285, 0f3F800000, %p61;
	mov.f32 	%f429, 0fB94D4153;
	@%p61 bra 	$L__BB1_86;

	mov.f32 	%f286, 0fBAB607ED;
	mov.f32 	%f287, 0f37CBAC00;
	fma.rn.ftz.f32 	%f429, %f287, %f76, %f286;

$L__BB1_86:
	selp.f32 	%f288, 0f3C0885E4, 0f3D2AAABB, %p61;
	fma.rn.ftz.f32 	%f289, %f429, %f76, %f288;
	selp.f32 	%f290, 0fBE2AAAA8, 0fBEFFFFFF, %p61;
	fma.rn.ftz.f32 	%f291, %f289, %f76, %f290;
	fma.rn.ftz.f32 	%f293, %f76, %f77, %f130;
	fma.rn.ftz.f32 	%f431, %f291, %f293, %f77;
	and.b32  	%r90, %r21, 2;
	setp.eq.s32 	%p63, %r90, 0;
	@%p63 bra 	$L__BB1_88;

	mov.f32 	%f295, 0fBF800000;
	fma.rn.ftz.f32 	%f431, %f431, %f295, %f130;

$L__BB1_88:
	mov.f32 	%f401, 0f40000000;
	div.approx.ftz.f32 	%f400, %f275, %f401;
	cvt.rzi.f32.f32 	%f296, %f400;
	setp.neu.ftz.f32 	%p64, %f296, %f400;
	@%p64 bra 	$L__BB1_90;

	mov.f32 	%f403, 0f40000000;
	div.approx.ftz.f32 	%f402, %f275, %f403;
	mul.rn.ftz.f32 	%f431, %f402, %f130;

$L__BB1_90:
	// begin inline asm
	{  cvt.rn.f16.f32 %rs171, %f431;}

	// end inline asm
	// begin inline asm
	{mul.f16 %rs173,%rs104,%rs169;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs176,%rs173,%rs171;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs179,%rs162,%rs162;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs182,%rs179,%rs161;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs185,%rs182,%rs161;
}
	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f299, %rs176;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f300, %rs185;}

	// end inline asm
	// begin inline asm
	{rcp.approx.ftz.f32 %f301, %f300;
}
	// end inline asm
	mul.ftz.f32 	%f303, %f299, %f301;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs349, %f303;}

	// end inline asm
	and.b16  	%rs192, %rs349, 32767;
	mov.u16 	%rs193, 143;
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.lt.f16  __$temp3, %rs192, %rs193;
  selp.u16 %rs191, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p65, %rs191, 0;
	setp.eq.s16 	%p66, %rs192, 0;
	or.pred  	%p67, %p65, %p66;
	@%p67 bra 	$L__BB1_93;

	neg.ftz.f32 	%f305, %f300;
	fma.rn.ftz.f32 	%f306, %f305, %f303, %f299;
	fma.rn.ftz.f32 	%f304, %f301, %f306, %f303;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs349, %f304;}

	// end inline asm

$L__BB1_93:
	mov.f32 	%f389, 0f40490FDB;
	add.ftz.f32 	%f307, %f413, 0fC0000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs195, %f307;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs196, %f389;}

	// end inline asm
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.eq.f16  __$temp3, %rs195, %rs87;
  selp.u16 %rs198, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p68, %rs198, 0;
	@%p68 bra 	$L__BB1_95;

	mov.u16 	%rs351, %rs201;
	bra.uni 	$L__BB1_110;

$L__BB1_95:
	// begin inline asm
	{  cvt.f32.f16 %f309, %rs195;}

	// end inline asm
	add.ftz.f32 	%f311, %f309, %f309;
	cvt.rni.f32.f32 	%f312, %f311;
	cvt.rzi.ftz.s32.f32 	%r23, %f312;
	neg.ftz.f32 	%f313, %f312;
	mov.f32 	%f314, 0f3F000000;
	fma.rn.ftz.f32 	%f315, %f313, %f314, %f309;
	mul.ftz.f32 	%f316, %f315, 0f34222169;
	mov.f32 	%f317, 0f40490FDA;
	fma.rn.ftz.f32 	%f318, %f315, %f317, %f316;
	mul.rn.ftz.f32 	%f90, %f318, %f318;
	and.b32  	%r24, %r23, 1;
	setp.eq.s32 	%p69, %r24, 0;
	selp.f32 	%f91, %f318, 0f3F800000, %p69;
	mov.f32 	%f432, 0fB94D4153;
	@%p69 bra 	$L__BB1_97;

	mov.f32 	%f319, 0fBAB607ED;
	mov.f32 	%f320, 0f37CBAC00;
	fma.rn.ftz.f32 	%f432, %f320, %f90, %f319;

$L__BB1_97:
	selp.f32 	%f321, 0f3C0885E4, 0f3D2AAABB, %p69;
	fma.rn.ftz.f32 	%f322, %f432, %f90, %f321;
	selp.f32 	%f323, 0fBE2AAAA8, 0fBEFFFFFF, %p69;
	fma.rn.ftz.f32 	%f324, %f322, %f90, %f323;
	fma.rn.ftz.f32 	%f326, %f90, %f91, %f130;
	fma.rn.ftz.f32 	%f434, %f324, %f326, %f91;
	and.b32  	%r91, %r23, 2;
	setp.eq.s32 	%p71, %r91, 0;
	@%p71 bra 	$L__BB1_99;

	mov.f32 	%f328, 0fBF800000;
	fma.rn.ftz.f32 	%f434, %f434, %f328, %f130;

$L__BB1_99:
	cvt.rzi.f32.f32 	%f329, %f309;
	setp.neu.ftz.f32 	%p72, %f329, %f309;
	@%p72 bra 	$L__BB1_101;

	mul.rn.ftz.f32 	%f434, %f309, %f130;

$L__BB1_101:
	mov.f32 	%f405, 0f40490FDA;
	mov.f32 	%f404, 0f3F000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs203, %f434;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f332, %rs195;}

	// end inline asm
	mov.f32 	%f334, 0f40000000;
	div.approx.ftz.f32 	%f99, %f332, %f334;
	add.ftz.f32 	%f335, %f99, %f99;
	cvt.rni.f32.f32 	%f336, %f335;
	cvt.rzi.ftz.s32.f32 	%r25, %f336;
	neg.ftz.f32 	%f337, %f336;
	fma.rn.ftz.f32 	%f339, %f337, %f404, %f99;
	mul.ftz.f32 	%f340, %f339, 0f34222169;
	fma.rn.ftz.f32 	%f342, %f339, %f405, %f340;
	mul.rn.ftz.f32 	%f100, %f342, %f342;
	and.b32  	%r26, %r25, 1;
	setp.eq.s32 	%p73, %r26, 0;
	selp.f32 	%f101, %f342, 0f3F800000, %p73;
	mov.f32 	%f435, 0fB94D4153;
	@%p73 bra 	$L__BB1_103;

	mov.f32 	%f343, 0fBAB607ED;
	mov.f32 	%f344, 0f37CBAC00;
	fma.rn.ftz.f32 	%f435, %f344, %f100, %f343;

$L__BB1_103:
	selp.f32 	%f345, 0f3C0885E4, 0f3D2AAABB, %p73;
	fma.rn.ftz.f32 	%f346, %f435, %f100, %f345;
	selp.f32 	%f347, 0fBE2AAAA8, 0fBEFFFFFF, %p73;
	fma.rn.ftz.f32 	%f348, %f346, %f100, %f347;
	fma.rn.ftz.f32 	%f350, %f100, %f101, %f130;
	fma.rn.ftz.f32 	%f437, %f348, %f350, %f101;
	and.b32  	%r92, %r25, 2;
	setp.eq.s32 	%p75, %r92, 0;
	@%p75 bra 	$L__BB1_105;

	mov.f32 	%f352, 0fBF800000;
	fma.rn.ftz.f32 	%f437, %f437, %f352, %f130;

$L__BB1_105:
	mov.f32 	%f407, 0f40000000;
	div.approx.ftz.f32 	%f406, %f332, %f407;
	cvt.rzi.f32.f32 	%f353, %f406;
	setp.neu.ftz.f32 	%p76, %f353, %f406;
	@%p76 bra 	$L__BB1_107;

	mov.f32 	%f409, 0f40000000;
	div.approx.ftz.f32 	%f408, %f332, %f409;
	mul.rn.ftz.f32 	%f437, %f408, %f130;

$L__BB1_107:
	// begin inline asm
	{  cvt.rn.f16.f32 %rs205, %f437;}

	// end inline asm
	// begin inline asm
	{mul.f16 %rs207,%rs104,%rs203;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs210,%rs207,%rs205;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs213,%rs196,%rs196;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs216,%rs213,%rs195;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs219,%rs216,%rs195;
}
	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f356, %rs210;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f357, %rs219;}

	// end inline asm
	// begin inline asm
	{rcp.approx.ftz.f32 %f358, %f357;
}
	// end inline asm
	mul.ftz.f32 	%f360, %f356, %f358;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs351, %f360;}

	// end inline asm
	and.b16  	%rs226, %rs351, 32767;
	mov.u16 	%rs227, 143;
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.lt.f16  __$temp3, %rs226, %rs227;
  selp.u16 %rs225, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p77, %rs225, 0;
	setp.eq.s16 	%p78, %rs226, 0;
	or.pred  	%p79, %p77, %p78;
	@%p79 bra 	$L__BB1_110;

	neg.ftz.f32 	%f362, %f357;
	fma.rn.ftz.f32 	%f363, %f362, %f360, %f356;
	fma.rn.ftz.f32 	%f361, %f358, %f363, %f360;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs351, %f361;}

	// end inline asm

$L__BB1_110:
	mov.b32 	{%rs230, %rs233}, %r81;
	mov.b32 	{%rs236, %rs239}, %r82;
	// begin inline asm
	{mul.f16 %rs232,%rs233,%rs345;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs229,%rs230,%rs345;
}
	// end inline asm
	mov.b32 	%r94, {%rs229, %rs232};
	// begin inline asm
	{mul.f16 %rs238,%rs239,%rs347;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs235,%rs236,%rs347;
}
	// end inline asm
	mov.b32 	%r95, {%rs235, %rs238};
	// begin inline asm
	{add.f16x2 %r93,%r94,%r95;
}
	// end inline asm
	mov.b32 	{%rs242, %rs245}, %r83;
	// begin inline asm
	{mul.f16 %rs244,%rs245,%rs349;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs241,%rs242,%rs349;
}
	// end inline asm
	mov.b32 	%r98, {%rs241, %rs244};
	// begin inline asm
	{add.f16x2 %r96,%r93,%r98;
}
	// end inline asm
	mov.b32 	{%rs248, %rs251}, %r84;
	// begin inline asm
	{mul.f16 %rs250,%rs251,%rs351;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs247,%rs248,%rs351;
}
	// end inline asm
	mov.b32 	%r101, {%rs247, %rs250};
	// begin inline asm
	{add.f16x2 %r144,%r96,%r101;
}
	// end inline asm

$L__BB1_111:
	mov.b32 	{%rs353, %rs352}, %r144;

$L__BB1_133:
	ld.param.u64 	%rd143, [_Z10wsinterpdhP7ushort2PKS_S2_PKtPKmS6_S6_i_param_0];
	mov.b32 	{%rs336, %rs339}, %r58;
	// begin inline asm
	{mul.f16 %rs326,%rs336,%rs353;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs329,%rs339,%rs352;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs335,%rs336,%rs352;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs338,%rs339,%rs353;
}
	// end inline asm
	shl.b64 	%rd142, %rd156, 2;
	add.s64 	%rd141, %rd143, %rd142;
	// begin inline asm
	{add.f16 %rs341,%rs335,%rs338;
}
	// end inline asm
	// begin inline asm
	{sub.f16 %rs332,%rs326,%rs329;
}
	// end inline asm
	mov.b32 	%r142, {%rs332, %rs341};
	// begin inline asm
	{ atom.add.noftz.f16x2 %r141,[%rd141],%r142; }

	// end inline asm
	add.s64 	%rd154, %rd154, 1;
	setp.lt.u64 	%p91, %rd154, %rd8;
	@%p91 bra 	$L__BB1_5;

$L__BB1_134:
	ret;

}
	// .globl	_Z8interpdfP6float2PKS_PKfi
.visible .entry _Z8interpdfP6float2PKS_PKfi(
	.param .u64 _Z8interpdfP6float2PKS_PKfi_param_0,
	.param .u64 _Z8interpdfP6float2PKS_PKfi_param_1,
	.param .u64 _Z8interpdfP6float2PKS_PKfi_param_2,
	.param .u32 _Z8interpdfP6float2PKS_PKfi_param_3
)
{
	.reg .pred 	%p<70>;
	.reg .f32 	%f<468>;
	.reg .b32 	%r<59>;
	.reg .b64 	%rd<67>;


	ld.param.u64 	%rd26, [_Z8interpdfP6float2PKS_PKfi_param_0];
	ld.param.u64 	%rd27, [_Z8interpdfP6float2PKS_PKfi_param_1];
	ld.param.u64 	%rd28, [_Z8interpdfP6float2PKS_PKfi_param_2];
	ld.param.u32 	%r23, [_Z8interpdfP6float2PKS_PKfi_param_3];
	mov.u32 	%r24, %ntid.x;
	mov.u32 	%r25, %ctaid.x;
	mov.u32 	%r26, %tid.x;
	mad.lo.s32 	%r27, %r25, %r24, %r26;
	cvt.u64.u32 	%rd1, %r27;
	mov.u32 	%r28, %ntid.y;
	mov.u32 	%r29, %ctaid.y;
	mov.u32 	%r30, %tid.y;
	mad.lo.s32 	%r31, %r29, %r28, %r30;
	cvt.u64.u32 	%rd2, %r31;
	ld.const.u64 	%rd3, [QUPS_M];
	ld.const.u64 	%rd4, [QUPS_N];
	ld.const.u64 	%rd5, [QUPS_T];
	ld.const.u64 	%rd65, [QUPS_F];
	ld.const.u64 	%rd7, [QUPS_I];
	and.b64  	%rd29, %rd7, -4294967296;
	setp.eq.s64 	%p1, %rd29, 0;
	@%p1 bra 	$L__BB2_2;

	div.u64 	%rd62, %rd1, %rd7;
	mul.lo.s64 	%rd30, %rd62, %rd7;
	sub.s64 	%rd63, %rd1, %rd30;
	bra.uni 	$L__BB2_3;

$L__BB2_2:
	cvt.u32.u64 	%r32, %rd7;
	cvt.u32.u64 	%r33, %rd1;
	div.u32 	%r34, %r33, %r32;
	mul.lo.s32 	%r35, %r34, %r32;
	sub.s32 	%r36, %r33, %r35;
	cvt.u64.u32 	%rd62, %r34;
	cvt.u64.u32 	%rd63, %r36;

$L__BB2_3:
	setp.ge.u64 	%p2, %rd62, %rd3;
	setp.le.u64 	%p3, %rd4, %rd2;
	or.pred  	%p4, %p2, %p3;
	setp.eq.s64 	%p5, %rd65, 0;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB2_93;

	cvta.to.global.u64 	%rd32, %rd28;
	mul.lo.s64 	%rd33, %rd7, %rd2;
	add.s64 	%rd14, %rd63, %rd33;
	mul.lo.s64 	%rd15, %rd4, %rd7;
	mul.lo.s64 	%rd34, %rd15, %rd62;
	add.s64 	%rd35, %rd34, %rd14;
	shl.b64 	%rd36, %rd35, 2;
	add.s64 	%rd37, %rd32, %rd36;
	ld.global.nc.f32 	%f1, [%rd37];
	mov.b32 	%r37, %f1;
	and.b32  	%r1, %r37, -2147483648;
	or.b32  	%r38, %r1, 1056964608;
	mov.b32 	%f2, %r38;
	mov.b32 	%f3, %r1;
	add.ftz.f32 	%f4, %f1, %f1;
	mul.lo.s64 	%rd38, %rd5, %rd2;
	cvta.to.global.u64 	%rd39, %rd27;
	shl.b64 	%rd40, %rd38, 3;
	add.s64 	%rd64, %rd39, %rd40;
	mul.lo.s64 	%rd41, %rd4, %rd5;
	shl.b64 	%rd17, %rd41, 3;
	cvta.to.global.u64 	%rd18, %rd26;
	mov.u64 	%rd66, 0;
	setp.gt.s32 	%p7, %r23, 1;
	setp.eq.s32 	%p11, %r23, 0;
	add.rz.ftz.f32 	%f424, %f1, %f2;
	cvt.rzi.f32.f32 	%f425, %f424;
	cvt.rzi.ftz.s32.f32 	%r22, %f425;
	setp.lt.s32 	%p67, %r22, 0;
	setp.eq.s32 	%p12, %r23, 1;

$L__BB2_5:
	mov.f32 	%f466, 0f00000000;
	@%p7 bra 	$L__BB2_8;
	bra.uni 	$L__BB2_6;

$L__BB2_8:
	setp.eq.s32 	%p8, %r23, 2;
	@%p8 bra 	$L__BB2_78;

	setp.eq.s32 	%p9, %r23, 3;
	@%p9 bra 	$L__BB2_17;

	setp.ne.s32 	%p10, %r23, 4;
	mov.f32 	%f467, %f466;
	@%p10 bra 	$L__BB2_92;

	abs.ftz.f32 	%f5, %f1;
	setp.lt.ftz.f32 	%p13, %f5, 0f7F800000;
	@%p13 bra 	$L__BB2_13;
	bra.uni 	$L__BB2_12;

$L__BB2_13:
	cvt.rzi.f32.f32 	%f430, %f1;
	sub.ftz.f32 	%f147, %f1, %f430;
	mov.b32 	%r39, %f147;
	or.b32  	%r40, %r1, %r39;
	mov.b32 	%f431, %r40;
	bra.uni 	$L__BB2_14;

$L__BB2_6:
	mov.f32 	%f467, %f466;
	@%p11 bra 	$L__BB2_89;

	@%p12 bra 	$L__BB2_83;
	bra.uni 	$L__BB2_92;

$L__BB2_83:
	abs.ftz.f32 	%f132, %f1;
	setp.lt.ftz.f32 	%p63, %f132, 0f7F800000;
	@%p63 bra 	$L__BB2_85;
	bra.uni 	$L__BB2_84;

$L__BB2_85:
	cvt.rzi.f32.f32 	%f464, %f1;
	sub.ftz.f32 	%f407, %f1, %f464;
	mov.b32 	%r56, %f407;
	or.b32  	%r57, %r1, %r56;
	mov.b32 	%f465, %r57;
	bra.uni 	$L__BB2_86;

$L__BB2_78:
	abs.ftz.f32 	%f123, %f1;
	setp.lt.ftz.f32 	%p58, %f123, 0f7F800000;
	@%p58 bra 	$L__BB2_80;
	bra.uni 	$L__BB2_79;

$L__BB2_80:
	cvt.rzi.f32.f32 	%f462, %f1;
	sub.ftz.f32 	%f367, %f1, %f462;
	mov.b32 	%r53, %f367;
	or.b32  	%r54, %r1, %r53;
	mov.b32 	%f463, %r54;
	bra.uni 	$L__BB2_81;

$L__BB2_17:
	abs.ftz.f32 	%f14, %f1;
	setp.lt.ftz.f32 	%p17, %f14, 0f7F800000;
	@%p17 bra 	$L__BB2_19;
	bra.uni 	$L__BB2_18;

$L__BB2_19:
	cvt.rzi.f32.f32 	%f432, %f1;
	sub.ftz.f32 	%f162, %f1, %f432;
	mov.b32 	%r42, %f162;
	or.b32  	%r43, %r1, %r42;
	mov.b32 	%f433, %r43;
	bra.uni 	$L__BB2_20;

$L__BB2_89:
	@%p67 bra 	$L__BB2_92;

	cvt.s64.s32 	%rd22, %r22;
	setp.le.u64 	%p68, %rd5, %rd22;
	mov.f32 	%f467, %f466;
	@%p68 bra 	$L__BB2_92;

	shl.b64 	%rd54, %rd22, 3;
	add.s64 	%rd55, %rd64, %rd54;
	ld.global.nc.v2.f32 	{%f466, %f467}, [%rd55];
	bra.uni 	$L__BB2_92;

$L__BB2_12:
	setp.eq.ftz.f32 	%p14, %f5, 0f7F800000;
	selp.f32 	%f430, %f1, %f4, %p14;
	selp.f32 	%f431, %f3, %f4, %p14;

$L__BB2_14:
	cvt.rzi.ftz.s32.f32 	%r2, %f430;
	setp.lt.s32 	%p15, %r2, 0;
	mov.f32 	%f467, %f466;
	@%p15 bra 	$L__BB2_92;

	add.s32 	%r41, %r2, 1;
	cvt.s64.s32 	%rd42, %r41;
	setp.le.u64 	%p16, %rd5, %rd42;
	mov.f32 	%f467, %f466;
	@%p16 bra 	$L__BB2_92;

	mul.wide.s32 	%rd43, %r2, 8;
	add.s64 	%rd44, %rd64, %rd43;
	ld.global.nc.v2.f32 	{%f152, %f153}, [%rd44];
	ld.global.nc.v2.f32 	{%f156, %f157}, [%rd44+8];
	sub.ftz.f32 	%f160, %f156, %f152;
	sub.ftz.f32 	%f161, %f157, %f153;
	fma.rn.ftz.f32 	%f467, %f431, %f161, %f153;
	fma.rn.ftz.f32 	%f466, %f431, %f160, %f152;
	bra.uni 	$L__BB2_92;

$L__BB2_84:
	setp.eq.ftz.f32 	%p64, %f132, 0f7F800000;
	selp.f32 	%f464, %f1, %f4, %p64;
	selp.f32 	%f465, %f3, %f4, %p64;

$L__BB2_86:
	cvt.rzi.ftz.s32.f32 	%r21, %f464;
	setp.lt.s32 	%p65, %r21, 0;
	mov.f32 	%f467, %f466;
	@%p65 bra 	$L__BB2_92;

	add.s32 	%r58, %r21, 1;
	cvt.s64.s32 	%rd51, %r58;
	setp.le.u64 	%p66, %rd5, %rd51;
	mov.f32 	%f467, %f466;
	@%p66 bra 	$L__BB2_92;

	mul.wide.s32 	%rd52, %r21, 8;
	add.s64 	%rd53, %rd64, %rd52;
	ld.global.nc.v2.f32 	{%f412, %f413}, [%rd53];
	ld.global.nc.v2.f32 	{%f416, %f417}, [%rd53+8];
	sub.ftz.f32 	%f420, %f416, %f412;
	sub.ftz.f32 	%f421, %f417, %f413;
	fma.rn.ftz.f32 	%f467, %f465, %f421, %f413;
	fma.rn.ftz.f32 	%f466, %f465, %f420, %f412;
	bra.uni 	$L__BB2_92;

$L__BB2_79:
	setp.eq.ftz.f32 	%p59, %f123, 0f7F800000;
	selp.f32 	%f462, %f1, %f4, %p59;
	selp.f32 	%f463, %f3, %f4, %p59;

$L__BB2_81:
	cvt.rzi.ftz.s32.f32 	%r20, %f462;
	setp.lt.s32 	%p60, %r20, 1;
	add.s32 	%r55, %r20, 2;
	cvt.s64.s32 	%rd48, %r55;
	setp.le.u64 	%p61, %rd5, %rd48;
	or.pred  	%p62, %p60, %p61;
	mov.f32 	%f467, %f466;
	@%p62 bra 	$L__BB2_92;

	mul.wide.s32 	%rd49, %r20, 8;
	add.s64 	%rd50, %rd64, %rd49;
	ld.global.nc.v2.f32 	{%f370, %f371}, [%rd50+-8];
	ld.global.nc.v2.f32 	{%f374, %f375}, [%rd50];
	ld.global.nc.v2.f32 	{%f378, %f379}, [%rd50+8];
	ld.global.nc.v2.f32 	{%f382, %f383}, [%rd50+16];
	fma.rn.ftz.f32 	%f386, %f463, 0f40000000, 0fBF800000;
	mov.f32 	%f387, 0f3F800000;
	fma.rn.ftz.f32 	%f388, %f463, %f386, 0fBF800000;
	fma.rn.ftz.f32 	%f389, %f463, %f388, 0f00000000;
	fma.rn.ftz.f32 	%f390, %f463, 0fC0A00000, 0f40400000;
	fma.rn.ftz.f32 	%f391, %f463, %f390, 0f00000000;
	fma.rn.ftz.f32 	%f392, %f463, %f391, 0f40000000;
	fma.rn.ftz.f32 	%f393, %f463, 0f40800000, 0fC0400000;
	fma.rn.ftz.f32 	%f394, %f463, %f393, 0f3F800000;
	fma.rn.ftz.f32 	%f395, %f463, %f394, 0f00000000;
	sub.ftz.f32 	%f396, %f387, %f463;
	fma.rn.ftz.f32 	%f397, %f463, %f396, 0f00000000;
	fma.rn.ftz.f32 	%f398, %f463, %f397, 0f00000000;
	mul.ftz.f32 	%f399, %f392, %f374;
	mul.ftz.f32 	%f400, %f392, %f375;
	fma.rn.ftz.f32 	%f401, %f389, %f370, %f399;
	fma.rn.ftz.f32 	%f402, %f389, %f371, %f400;
	fma.rn.ftz.f32 	%f403, %f395, %f378, %f401;
	fma.rn.ftz.f32 	%f404, %f395, %f379, %f402;
	fma.rn.ftz.f32 	%f405, %f398, %f382, %f403;
	fma.rn.ftz.f32 	%f406, %f398, %f383, %f404;
	mul.ftz.f32 	%f467, %f406, 0f3F000000;
	mul.ftz.f32 	%f466, %f405, 0f3F000000;
	bra.uni 	$L__BB2_92;

$L__BB2_18:
	setp.eq.ftz.f32 	%p18, %f14, 0f7F800000;
	selp.f32 	%f432, %f1, %f4, %p18;
	selp.f32 	%f433, %f3, %f4, %p18;

$L__BB2_20:
	cvt.rzi.ftz.s32.f32 	%r3, %f432;
	setp.lt.s32 	%p19, %r3, 1;
	add.s32 	%r44, %r3, 2;
	cvt.s64.s32 	%rd45, %r44;
	setp.le.u64 	%p20, %rd5, %rd45;
	or.pred  	%p21, %p19, %p20;
	mov.f32 	%f467, %f466;
	@%p21 bra 	$L__BB2_92;

	mul.wide.s32 	%rd46, %r3, 8;
	add.s64 	%rd47, %rd64, %rd46;
	ld.global.nc.v2.f32 	{%f166, %f167}, [%rd47+-8];
	ld.global.nc.v2.f32 	{%f168, %f169}, [%rd47];
	ld.global.nc.v2.f32 	{%f170, %f171}, [%rd47+8];
	ld.global.nc.v2.f32 	{%f172, %f173}, [%rd47+16];
	add.ftz.f32 	%f29, %f433, 0f3F800000;
	mov.f32 	%f461, 0f3F800000;
	setp.eq.ftz.f32 	%p22, %f29, 0f00000000;
	mov.f32 	%f440, %f461;
	@%p22 bra 	$L__BB2_35;

	add.ftz.f32 	%f175, %f29, %f29;
	cvt.rni.f32.f32 	%f176, %f175;
	cvt.rzi.ftz.s32.f32 	%r4, %f176;
	neg.ftz.f32 	%f177, %f176;
	mov.f32 	%f178, 0f3F000000;
	fma.rn.ftz.f32 	%f179, %f177, %f178, %f29;
	mul.ftz.f32 	%f180, %f179, 0f34222169;
	mov.f32 	%f181, 0f40490FDA;
	fma.rn.ftz.f32 	%f182, %f179, %f181, %f180;
	mul.rn.ftz.f32 	%f30, %f182, %f182;
	and.b32  	%r5, %r4, 1;
	setp.eq.s32 	%p23, %r5, 0;
	selp.f32 	%f31, %f182, 0f3F800000, %p23;
	mov.f32 	%f434, 0fB94D4153;
	@%p23 bra 	$L__BB2_24;

	mov.f32 	%f183, 0fBAB607ED;
	mov.f32 	%f184, 0f37CBAC00;
	fma.rn.ftz.f32 	%f434, %f184, %f30, %f183;

$L__BB2_24:
	selp.f32 	%f185, 0f3C0885E4, 0f3D2AAABB, %p23;
	fma.rn.ftz.f32 	%f186, %f434, %f30, %f185;
	selp.f32 	%f187, 0fBE2AAAA8, 0fBEFFFFFF, %p23;
	fma.rn.ftz.f32 	%f188, %f186, %f30, %f187;
	mov.f32 	%f189, 0f00000000;
	fma.rn.ftz.f32 	%f190, %f30, %f31, %f189;
	fma.rn.ftz.f32 	%f436, %f188, %f190, %f31;
	and.b32  	%r45, %r4, 2;
	setp.eq.s32 	%p25, %r45, 0;
	@%p25 bra 	$L__BB2_26;

	mov.f32 	%f192, 0fBF800000;
	fma.rn.ftz.f32 	%f436, %f436, %f192, %f189;

$L__BB2_26:
	cvt.rzi.f32.f32 	%f193, %f29;
	setp.neu.ftz.f32 	%p26, %f193, %f29;
	@%p26 bra 	$L__BB2_28;

	mul.rn.ftz.f32 	%f436, %f29, %f189;

$L__BB2_28:
	add.ftz.f32 	%f39, %f436, %f436;
	mov.f32 	%f196, 0f40000000;
	div.approx.ftz.f32 	%f40, %f29, %f196;
	add.ftz.f32 	%f197, %f40, %f40;
	cvt.rni.f32.f32 	%f198, %f197;
	cvt.rzi.ftz.s32.f32 	%r6, %f198;
	neg.ftz.f32 	%f199, %f198;
	fma.rn.ftz.f32 	%f201, %f199, %f178, %f40;
	mul.ftz.f32 	%f202, %f201, 0f34222169;
	fma.rn.ftz.f32 	%f204, %f201, %f181, %f202;
	mul.rn.ftz.f32 	%f41, %f204, %f204;
	and.b32  	%r7, %r6, 1;
	setp.eq.s32 	%p27, %r7, 0;
	selp.f32 	%f42, %f204, 0f3F800000, %p27;
	mov.f32 	%f437, 0fB94D4153;
	@%p27 bra 	$L__BB2_30;

	mov.f32 	%f205, 0fBAB607ED;
	mov.f32 	%f206, 0f37CBAC00;
	fma.rn.ftz.f32 	%f437, %f206, %f41, %f205;

$L__BB2_30:
	selp.f32 	%f207, 0f3C0885E4, 0f3D2AAABB, %p27;
	fma.rn.ftz.f32 	%f208, %f437, %f41, %f207;
	selp.f32 	%f209, 0fBE2AAAA8, 0fBEFFFFFF, %p27;
	fma.rn.ftz.f32 	%f210, %f208, %f41, %f209;
	fma.rn.ftz.f32 	%f212, %f41, %f42, %f189;
	fma.rn.ftz.f32 	%f439, %f210, %f212, %f42;
	and.b32  	%r46, %r6, 2;
	setp.eq.s32 	%p29, %r46, 0;
	@%p29 bra 	$L__BB2_32;

	mov.f32 	%f214, 0fBF800000;
	fma.rn.ftz.f32 	%f439, %f439, %f214, %f189;

$L__BB2_32:
	cvt.rzi.f32.f32 	%f215, %f40;
	setp.neu.ftz.f32 	%p30, %f215, %f40;
	@%p30 bra 	$L__BB2_34;

	mul.rn.ftz.f32 	%f439, %f40, %f189;

$L__BB2_34:
	mul.ftz.f32 	%f217, %f29, 0f411DE9E7;
	mul.ftz.f32 	%f218, %f29, %f217;
	mul.ftz.f32 	%f219, %f39, %f439;
	div.approx.ftz.f32 	%f440, %f219, %f218;

$L__BB2_35:
	add.ftz.f32 	%f52, %f433, 0f00000000;
	setp.eq.ftz.f32 	%p31, %f52, 0f00000000;
	mov.f32 	%f447, %f461;
	@%p31 bra 	$L__BB2_49;

	add.ftz.f32 	%f222, %f52, %f52;
	cvt.rni.f32.f32 	%f223, %f222;
	cvt.rzi.ftz.s32.f32 	%r8, %f223;
	neg.ftz.f32 	%f224, %f223;
	mov.f32 	%f225, 0f3F000000;
	fma.rn.ftz.f32 	%f226, %f224, %f225, %f52;
	mul.ftz.f32 	%f227, %f226, 0f34222169;
	mov.f32 	%f228, 0f40490FDA;
	fma.rn.ftz.f32 	%f229, %f226, %f228, %f227;
	mul.rn.ftz.f32 	%f53, %f229, %f229;
	and.b32  	%r9, %r8, 1;
	setp.eq.s32 	%p32, %r9, 0;
	selp.f32 	%f54, %f229, 0f3F800000, %p32;
	mov.f32 	%f441, 0fB94D4153;
	@%p32 bra 	$L__BB2_38;

	mov.f32 	%f230, 0fBAB607ED;
	mov.f32 	%f231, 0f37CBAC00;
	fma.rn.ftz.f32 	%f441, %f231, %f53, %f230;

$L__BB2_38:
	selp.f32 	%f232, 0f3C0885E4, 0f3D2AAABB, %p32;
	fma.rn.ftz.f32 	%f233, %f441, %f53, %f232;
	selp.f32 	%f234, 0fBE2AAAA8, 0fBEFFFFFF, %p32;
	fma.rn.ftz.f32 	%f235, %f233, %f53, %f234;
	mov.f32 	%f236, 0f00000000;
	fma.rn.ftz.f32 	%f237, %f53, %f54, %f236;
	fma.rn.ftz.f32 	%f443, %f235, %f237, %f54;
	and.b32  	%r47, %r8, 2;
	setp.eq.s32 	%p34, %r47, 0;
	@%p34 bra 	$L__BB2_40;

	mov.f32 	%f239, 0fBF800000;
	fma.rn.ftz.f32 	%f443, %f443, %f239, %f236;

$L__BB2_40:
	cvt.rzi.f32.f32 	%f240, %f52;
	setp.neu.ftz.f32 	%p35, %f240, %f52;
	@%p35 bra 	$L__BB2_42;

	mul.rn.ftz.f32 	%f443, %f52, %f236;

$L__BB2_42:
	add.ftz.f32 	%f62, %f443, %f443;
	mov.f32 	%f243, 0f40000000;
	div.approx.ftz.f32 	%f63, %f52, %f243;
	add.ftz.f32 	%f244, %f63, %f63;
	cvt.rni.f32.f32 	%f245, %f244;
	cvt.rzi.ftz.s32.f32 	%r10, %f245;
	neg.ftz.f32 	%f246, %f245;
	fma.rn.ftz.f32 	%f248, %f246, %f225, %f63;
	mul.ftz.f32 	%f249, %f248, 0f34222169;
	fma.rn.ftz.f32 	%f251, %f248, %f228, %f249;
	mul.rn.ftz.f32 	%f64, %f251, %f251;
	and.b32  	%r11, %r10, 1;
	setp.eq.s32 	%p36, %r11, 0;
	selp.f32 	%f65, %f251, 0f3F800000, %p36;
	mov.f32 	%f444, 0fB94D4153;
	@%p36 bra 	$L__BB2_44;

	mov.f32 	%f252, 0fBAB607ED;
	mov.f32 	%f253, 0f37CBAC00;
	fma.rn.ftz.f32 	%f444, %f253, %f64, %f252;

$L__BB2_44:
	selp.f32 	%f254, 0f3C0885E4, 0f3D2AAABB, %p36;
	fma.rn.ftz.f32 	%f255, %f444, %f64, %f254;
	selp.f32 	%f256, 0fBE2AAAA8, 0fBEFFFFFF, %p36;
	fma.rn.ftz.f32 	%f257, %f255, %f64, %f256;
	fma.rn.ftz.f32 	%f259, %f64, %f65, %f236;
	fma.rn.ftz.f32 	%f446, %f257, %f259, %f65;
	and.b32  	%r48, %r10, 2;
	setp.eq.s32 	%p38, %r48, 0;
	@%p38 bra 	$L__BB2_46;

	mov.f32 	%f261, 0fBF800000;
	fma.rn.ftz.f32 	%f446, %f446, %f261, %f236;

$L__BB2_46:
	cvt.rzi.f32.f32 	%f262, %f63;
	setp.neu.ftz.f32 	%p39, %f262, %f63;
	@%p39 bra 	$L__BB2_48;

	mul.rn.ftz.f32 	%f446, %f63, %f236;

$L__BB2_48:
	mul.ftz.f32 	%f264, %f52, 0f411DE9E7;
	mul.ftz.f32 	%f265, %f52, %f264;
	mul.ftz.f32 	%f266, %f62, %f446;
	div.approx.ftz.f32 	%f447, %f266, %f265;

$L__BB2_49:
	add.ftz.f32 	%f75, %f433, 0fBF800000;
	setp.eq.ftz.f32 	%p40, %f75, 0f00000000;
	mov.f32 	%f454, %f461;
	@%p40 bra 	$L__BB2_63;

	add.ftz.f32 	%f269, %f75, %f75;
	cvt.rni.f32.f32 	%f270, %f269;
	cvt.rzi.ftz.s32.f32 	%r12, %f270;
	neg.ftz.f32 	%f271, %f270;
	mov.f32 	%f272, 0f3F000000;
	fma.rn.ftz.f32 	%f273, %f271, %f272, %f75;
	mul.ftz.f32 	%f274, %f273, 0f34222169;
	mov.f32 	%f275, 0f40490FDA;
	fma.rn.ftz.f32 	%f276, %f273, %f275, %f274;
	mul.rn.ftz.f32 	%f76, %f276, %f276;
	and.b32  	%r13, %r12, 1;
	setp.eq.s32 	%p41, %r13, 0;
	selp.f32 	%f77, %f276, 0f3F800000, %p41;
	mov.f32 	%f448, 0fB94D4153;
	@%p41 bra 	$L__BB2_52;

	mov.f32 	%f277, 0fBAB607ED;
	mov.f32 	%f278, 0f37CBAC00;
	fma.rn.ftz.f32 	%f448, %f278, %f76, %f277;

$L__BB2_52:
	selp.f32 	%f279, 0f3C0885E4, 0f3D2AAABB, %p41;
	fma.rn.ftz.f32 	%f280, %f448, %f76, %f279;
	selp.f32 	%f281, 0fBE2AAAA8, 0fBEFFFFFF, %p41;
	fma.rn.ftz.f32 	%f282, %f280, %f76, %f281;
	mov.f32 	%f283, 0f00000000;
	fma.rn.ftz.f32 	%f284, %f76, %f77, %f283;
	fma.rn.ftz.f32 	%f450, %f282, %f284, %f77;
	and.b32  	%r49, %r12, 2;
	setp.eq.s32 	%p43, %r49, 0;
	@%p43 bra 	$L__BB2_54;

	mov.f32 	%f286, 0fBF800000;
	fma.rn.ftz.f32 	%f450, %f450, %f286, %f283;

$L__BB2_54:
	cvt.rzi.f32.f32 	%f287, %f75;
	setp.neu.ftz.f32 	%p44, %f287, %f75;
	@%p44 bra 	$L__BB2_56;

	mul.rn.ftz.f32 	%f450, %f75, %f283;

$L__BB2_56:
	add.ftz.f32 	%f85, %f450, %f450;
	mov.f32 	%f290, 0f40000000;
	div.approx.ftz.f32 	%f86, %f75, %f290;
	add.ftz.f32 	%f291, %f86, %f86;
	cvt.rni.f32.f32 	%f292, %f291;
	cvt.rzi.ftz.s32.f32 	%r14, %f292;
	neg.ftz.f32 	%f293, %f292;
	fma.rn.ftz.f32 	%f295, %f293, %f272, %f86;
	mul.ftz.f32 	%f296, %f295, 0f34222169;
	fma.rn.ftz.f32 	%f298, %f295, %f275, %f296;
	mul.rn.ftz.f32 	%f87, %f298, %f298;
	and.b32  	%r15, %r14, 1;
	setp.eq.s32 	%p45, %r15, 0;
	selp.f32 	%f88, %f298, 0f3F800000, %p45;
	mov.f32 	%f451, 0fB94D4153;
	@%p45 bra 	$L__BB2_58;

	mov.f32 	%f299, 0fBAB607ED;
	mov.f32 	%f300, 0f37CBAC00;
	fma.rn.ftz.f32 	%f451, %f300, %f87, %f299;

$L__BB2_58:
	selp.f32 	%f301, 0f3C0885E4, 0f3D2AAABB, %p45;
	fma.rn.ftz.f32 	%f302, %f451, %f87, %f301;
	selp.f32 	%f303, 0fBE2AAAA8, 0fBEFFFFFF, %p45;
	fma.rn.ftz.f32 	%f304, %f302, %f87, %f303;
	fma.rn.ftz.f32 	%f306, %f87, %f88, %f283;
	fma.rn.ftz.f32 	%f453, %f304, %f306, %f88;
	and.b32  	%r50, %r14, 2;
	setp.eq.s32 	%p47, %r50, 0;
	@%p47 bra 	$L__BB2_60;

	mov.f32 	%f308, 0fBF800000;
	fma.rn.ftz.f32 	%f453, %f453, %f308, %f283;

$L__BB2_60:
	cvt.rzi.f32.f32 	%f309, %f86;
	setp.neu.ftz.f32 	%p48, %f309, %f86;
	@%p48 bra 	$L__BB2_62;

	mul.rn.ftz.f32 	%f453, %f86, %f283;

$L__BB2_62:
	mul.ftz.f32 	%f311, %f75, 0f411DE9E7;
	mul.ftz.f32 	%f312, %f75, %f311;
	mul.ftz.f32 	%f313, %f85, %f453;
	div.approx.ftz.f32 	%f454, %f313, %f312;

$L__BB2_63:
	add.ftz.f32 	%f98, %f433, 0fC0000000;
	setp.eq.ftz.f32 	%p49, %f98, 0f00000000;
	@%p49 bra 	$L__BB2_77;

	add.ftz.f32 	%f316, %f98, %f98;
	cvt.rni.f32.f32 	%f317, %f316;
	cvt.rzi.ftz.s32.f32 	%r16, %f317;
	neg.ftz.f32 	%f318, %f317;
	mov.f32 	%f319, 0f3F000000;
	fma.rn.ftz.f32 	%f320, %f318, %f319, %f98;
	mul.ftz.f32 	%f321, %f320, 0f34222169;
	mov.f32 	%f322, 0f40490FDA;
	fma.rn.ftz.f32 	%f323, %f320, %f322, %f321;
	mul.rn.ftz.f32 	%f99, %f323, %f323;
	and.b32  	%r17, %r16, 1;
	setp.eq.s32 	%p50, %r17, 0;
	selp.f32 	%f100, %f323, 0f3F800000, %p50;
	mov.f32 	%f455, 0fB94D4153;
	@%p50 bra 	$L__BB2_66;

	mov.f32 	%f324, 0fBAB607ED;
	mov.f32 	%f325, 0f37CBAC00;
	fma.rn.ftz.f32 	%f455, %f325, %f99, %f324;

$L__BB2_66:
	selp.f32 	%f326, 0f3C0885E4, 0f3D2AAABB, %p50;
	fma.rn.ftz.f32 	%f327, %f455, %f99, %f326;
	selp.f32 	%f328, 0fBE2AAAA8, 0fBEFFFFFF, %p50;
	fma.rn.ftz.f32 	%f329, %f327, %f99, %f328;
	mov.f32 	%f330, 0f00000000;
	fma.rn.ftz.f32 	%f331, %f99, %f100, %f330;
	fma.rn.ftz.f32 	%f457, %f329, %f331, %f100;
	and.b32  	%r51, %r16, 2;
	setp.eq.s32 	%p52, %r51, 0;
	@%p52 bra 	$L__BB2_68;

	mov.f32 	%f333, 0fBF800000;
	fma.rn.ftz.f32 	%f457, %f457, %f333, %f330;

$L__BB2_68:
	cvt.rzi.f32.f32 	%f334, %f98;
	setp.neu.ftz.f32 	%p53, %f334, %f98;
	@%p53 bra 	$L__BB2_70;

	mul.rn.ftz.f32 	%f457, %f98, %f330;

$L__BB2_70:
	add.ftz.f32 	%f108, %f457, %f457;
	mov.f32 	%f337, 0f40000000;
	div.approx.ftz.f32 	%f109, %f98, %f337;
	add.ftz.f32 	%f338, %f109, %f109;
	cvt.rni.f32.f32 	%f339, %f338;
	cvt.rzi.ftz.s32.f32 	%r18, %f339;
	neg.ftz.f32 	%f340, %f339;
	fma.rn.ftz.f32 	%f342, %f340, %f319, %f109;
	mul.ftz.f32 	%f343, %f342, 0f34222169;
	fma.rn.ftz.f32 	%f345, %f342, %f322, %f343;
	mul.rn.ftz.f32 	%f110, %f345, %f345;
	and.b32  	%r19, %r18, 1;
	setp.eq.s32 	%p54, %r19, 0;
	selp.f32 	%f111, %f345, 0f3F800000, %p54;
	mov.f32 	%f458, 0fB94D4153;
	@%p54 bra 	$L__BB2_72;

	mov.f32 	%f346, 0fBAB607ED;
	mov.f32 	%f347, 0f37CBAC00;
	fma.rn.ftz.f32 	%f458, %f347, %f110, %f346;

$L__BB2_72:
	selp.f32 	%f348, 0f3C0885E4, 0f3D2AAABB, %p54;
	fma.rn.ftz.f32 	%f349, %f458, %f110, %f348;
	selp.f32 	%f350, 0fBE2AAAA8, 0fBEFFFFFF, %p54;
	fma.rn.ftz.f32 	%f351, %f349, %f110, %f350;
	fma.rn.ftz.f32 	%f353, %f110, %f111, %f330;
	fma.rn.ftz.f32 	%f460, %f351, %f353, %f111;
	and.b32  	%r52, %r18, 2;
	setp.eq.s32 	%p56, %r52, 0;
	@%p56 bra 	$L__BB2_74;

	mov.f32 	%f355, 0fBF800000;
	fma.rn.ftz.f32 	%f460, %f460, %f355, %f330;

$L__BB2_74:
	cvt.rzi.f32.f32 	%f356, %f109;
	setp.neu.ftz.f32 	%p57, %f356, %f109;
	@%p57 bra 	$L__BB2_76;

	mul.rn.ftz.f32 	%f460, %f109, %f330;

$L__BB2_76:
	mul.ftz.f32 	%f358, %f98, 0f411DE9E7;
	mul.ftz.f32 	%f359, %f98, %f358;
	mul.ftz.f32 	%f360, %f108, %f460;
	div.approx.ftz.f32 	%f461, %f360, %f359;

$L__BB2_77:
	mul.ftz.f32 	%f361, %f168, %f447;
	fma.rn.ftz.f32 	%f362, %f166, %f440, %f361;
	mul.ftz.f32 	%f363, %f169, %f447;
	fma.rn.ftz.f32 	%f364, %f167, %f440, %f363;
	fma.rn.ftz.f32 	%f365, %f170, %f454, %f362;
	fma.rn.ftz.f32 	%f366, %f171, %f454, %f364;
	fma.rn.ftz.f32 	%f466, %f172, %f461, %f365;
	fma.rn.ftz.f32 	%f467, %f173, %f461, %f366;

$L__BB2_92:
	mul.lo.s64 	%rd56, %rd66, %rd3;
	add.s64 	%rd57, %rd56, %rd62;
	mul.lo.s64 	%rd58, %rd15, %rd57;
	add.s64 	%rd59, %rd58, %rd14;
	shl.b64 	%rd60, %rd59, 3;
	add.s64 	%rd61, %rd18, %rd60;
	st.global.v2.f32 	[%rd61], {%f466, %f467};
	add.s64 	%rd66, %rd66, 1;
	add.s64 	%rd64, %rd64, %rd17;
	add.s64 	%rd65, %rd65, -1;
	setp.ne.s64 	%p69, %rd65, 0;
	@%p69 bra 	$L__BB2_5;

$L__BB2_93:
	ret;

}
	// .globl	_Z10wsinterpdfP6float2PKS_S2_PKfPKmS6_S6_i
.visible .entry _Z10wsinterpdfP6float2PKS_S2_PKfPKmS6_S6_i(
	.param .u64 _Z10wsinterpdfP6float2PKS_S2_PKfPKmS6_S6_i_param_0,
	.param .u64 _Z10wsinterpdfP6float2PKS_S2_PKfPKmS6_S6_i_param_1,
	.param .u64 _Z10wsinterpdfP6float2PKS_S2_PKfPKmS6_S6_i_param_2,
	.param .u64 _Z10wsinterpdfP6float2PKS_S2_PKfPKmS6_S6_i_param_3,
	.param .u64 _Z10wsinterpdfP6float2PKS_S2_PKfPKmS6_S6_i_param_4,
	.param .u64 _Z10wsinterpdfP6float2PKS_S2_PKfPKmS6_S6_i_param_5,
	.param .u64 _Z10wsinterpdfP6float2PKS_S2_PKfPKmS6_S6_i_param_6,
	.param .u32 _Z10wsinterpdfP6float2PKS_S2_PKfPKmS6_S6_i_param_7
)
{
	.reg .pred 	%p<80>;
	.reg .f32 	%f<542>;
	.reg .b32 	%r<65>;
	.reg .b64 	%rd<170>;


	ld.param.u64 	%rd60, [_Z10wsinterpdfP6float2PKS_S2_PKfPKmS6_S6_i_param_0];
	ld.param.u64 	%rd61, [_Z10wsinterpdfP6float2PKS_S2_PKfPKmS6_S6_i_param_1];
	ld.param.u64 	%rd65, [_Z10wsinterpdfP6float2PKS_S2_PKfPKmS6_S6_i_param_2];
	ld.param.u64 	%rd62, [_Z10wsinterpdfP6float2PKS_S2_PKfPKmS6_S6_i_param_3];
	ld.param.u64 	%rd66, [_Z10wsinterpdfP6float2PKS_S2_PKfPKmS6_S6_i_param_4];
	ld.param.u64 	%rd63, [_Z10wsinterpdfP6float2PKS_S2_PKfPKmS6_S6_i_param_5];
	ld.param.u64 	%rd64, [_Z10wsinterpdfP6float2PKS_S2_PKfPKmS6_S6_i_param_6];
	ld.param.u32 	%r23, [_Z10wsinterpdfP6float2PKS_S2_PKfPKmS6_S6_i_param_7];
	cvta.to.global.u64 	%rd1, %rd66;
	cvta.to.global.u64 	%rd2, %rd65;
	mov.u32 	%r24, %ntid.x;
	mov.u32 	%r25, %ctaid.x;
	mov.u32 	%r26, %tid.x;
	mad.lo.s32 	%r27, %r25, %r24, %r26;
	cvt.u64.u32 	%rd3, %r27;
	mov.u32 	%r28, %ntid.y;
	mov.u32 	%r29, %ctaid.y;
	mov.u32 	%r30, %tid.y;
	mad.lo.s32 	%r31, %r29, %r28, %r30;
	cvt.u64.u32 	%rd4, %r31;
	ld.const.u64 	%rd5, [QUPS_M];
	ld.const.u64 	%rd6, [QUPS_N];
	ld.const.u64 	%rd7, [QUPS_T];
	ld.const.u64 	%rd8, [QUPS_F];
	ld.const.u64 	%rd9, [QUPS_S];
	ld.const.u64 	%rd10, [QUPS_I];
	and.b64  	%rd67, %rd10, -4294967296;
	setp.eq.s64 	%p1, %rd67, 0;
	@%p1 bra 	$L__BB3_2;

	div.u64 	%rd155, %rd3, %rd10;
	mul.lo.s64 	%rd68, %rd155, %rd10;
	sub.s64 	%rd156, %rd3, %rd68;
	bra.uni 	$L__BB3_3;

$L__BB3_2:
	cvt.u32.u64 	%r32, %rd10;
	cvt.u32.u64 	%r33, %rd3;
	div.u32 	%r34, %r33, %r32;
	mul.lo.s32 	%r35, %r34, %r32;
	sub.s32 	%r36, %r33, %r35;
	cvt.u64.u32 	%rd155, %r34;
	cvt.u64.u32 	%rd156, %r36;

$L__BB3_3:
	setp.ge.u64 	%p2, %rd155, %rd5;
	setp.le.u64 	%p3, %rd6, %rd4;
	or.pred  	%p4, %p2, %p3;
	setp.eq.s64 	%p5, %rd8, 0;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB3_109;

	cvta.to.global.u64 	%rd17, %rd60;
	cvta.to.global.u64 	%rd70, %rd62;
	mul.lo.s64 	%rd71, %rd10, %rd4;
	add.s64 	%rd18, %rd156, %rd71;
	mul.lo.s64 	%rd19, %rd155, %rd6;
	mul.lo.s64 	%rd72, %rd19, %rd10;
	add.s64 	%rd73, %rd72, %rd18;
	shl.b64 	%rd74, %rd73, 2;
	add.s64 	%rd75, %rd70, %rd74;
	ld.global.nc.f32 	%f1, [%rd75];
	mov.b32 	%r37, %f1;
	and.b32  	%r1, %r37, -2147483648;
	or.b32  	%r38, %r1, 1056964608;
	mov.b32 	%f2, %r38;
	mov.b32 	%f3, %r1;
	add.ftz.f32 	%f4, %f1, %f1;
	cvta.to.global.u64 	%rd20, %rd64;
	cvta.to.global.u64 	%rd21, %rd63;
	cvta.to.global.u64 	%rd22, %rd61;
	mov.u64 	%rd157, 0;
	setp.eq.s64 	%p7, %rd9, 0;
	setp.gt.s32 	%p17, %r23, 1;
	setp.eq.s32 	%p21, %r23, 0;
	add.rz.ftz.f32 	%f428, %f1, %f2;
	cvt.rzi.f32.f32 	%f429, %f428;
	cvt.rzi.ftz.s32.f32 	%r22, %f429;
	setp.lt.s32 	%p77, %r22, 0;

$L__BB3_5:
	mov.u64 	%rd158, 0;
	ld.const.u64 	%rd148, [QUPS_N];
	ld.const.u64 	%rd147, [QUPS_M];
	ld.const.u64 	%rd146, [QUPS_I];
	mul.lo.s64 	%rd24, %rd157, %rd148;
	mul.lo.s64 	%rd81, %rd24, %rd147;
	add.s64 	%rd82, %rd81, %rd19;
	mul.lo.s64 	%rd83, %rd82, %rd146;
	add.s64 	%rd25, %rd83, %rd18;
	mov.u64 	%rd159, %rd158;
	mov.u64 	%rd160, %rd158;
	@%p7 bra 	$L__BB3_21;

$L__BB3_6:
	setp.eq.s64 	%p8, %rd158, 0;
	mov.u64 	%rd167, 1;
	@%p8 bra 	$L__BB3_14;

	add.s64 	%rd88, %rd158, -1;
	and.b64  	%rd29, %rd158, 3;
	setp.lt.u64 	%p9, %rd88, 3;
	mov.u64 	%rd167, 1;
	mov.u64 	%rd165, 0;
	@%p9 bra 	$L__BB3_10;

	mov.u64 	%rd161, %rd1;

$L__BB3_9:
	and.b64  	%rd152, %rd158, 3;
	sub.s64 	%rd151, %rd152, %rd158;
	ld.global.u64 	%rd91, [%rd161];
	mul.lo.s64 	%rd92, %rd91, %rd167;
	ld.global.u64 	%rd93, [%rd161+8];
	mul.lo.s64 	%rd94, %rd93, %rd92;
	ld.global.u64 	%rd95, [%rd161+16];
	mul.lo.s64 	%rd96, %rd95, %rd94;
	ld.global.u64 	%rd97, [%rd161+24];
	mul.lo.s64 	%rd167, %rd97, %rd96;
	add.s64 	%rd161, %rd161, 32;
	add.s64 	%rd165, %rd165, 4;
	add.s64 	%rd98, %rd151, %rd165;
	setp.ne.s64 	%p10, %rd98, 0;
	@%p10 bra 	$L__BB3_9;

$L__BB3_10:
	setp.eq.s64 	%p11, %rd29, 0;
	@%p11 bra 	$L__BB3_14;

	shl.b64 	%rd99, %rd165, 3;
	add.s64 	%rd40, %rd1, %rd99;
	ld.global.u64 	%rd100, [%rd40];
	mul.lo.s64 	%rd167, %rd100, %rd167;
	setp.eq.s64 	%p12, %rd29, 1;
	@%p12 bra 	$L__BB3_14;

	and.b64  	%rd153, %rd158, 3;
	ld.global.u64 	%rd101, [%rd40+8];
	mul.lo.s64 	%rd167, %rd101, %rd167;
	setp.eq.s64 	%p13, %rd153, 2;
	@%p13 bra 	$L__BB3_14;

	ld.global.u64 	%rd102, [%rd40+16];
	mul.lo.s64 	%rd167, %rd102, %rd167;

$L__BB3_14:
	or.b64  	%rd103, %rd25, %rd167;
	and.b64  	%rd104, %rd103, -4294967296;
	setp.eq.s64 	%p14, %rd104, 0;
	@%p14 bra 	$L__BB3_16;

	div.u64 	%rd168, %rd25, %rd167;
	bra.uni 	$L__BB3_17;

$L__BB3_16:
	cvt.u32.u64 	%r39, %rd167;
	cvt.u32.u64 	%r40, %rd25;
	div.u32 	%r41, %r40, %r39;
	cvt.u64.u32 	%rd168, %r41;

$L__BB3_17:
	shl.b64 	%rd105, %rd158, 3;
	add.s64 	%rd106, %rd1, %rd105;
	ld.global.u64 	%rd48, [%rd106];
	or.b64  	%rd107, %rd168, %rd48;
	and.b64  	%rd108, %rd107, -4294967296;
	setp.eq.s64 	%p15, %rd108, 0;
	@%p15 bra 	$L__BB3_19;

	rem.u64 	%rd169, %rd168, %rd48;
	bra.uni 	$L__BB3_20;

$L__BB3_19:
	cvt.u32.u64 	%r42, %rd48;
	cvt.u32.u64 	%r43, %rd168;
	rem.u32 	%r44, %r43, %r42;
	cvt.u64.u32 	%rd169, %r44;

$L__BB3_20:
	shl.b64 	%rd154, %rd158, 3;
	ld.const.u64 	%rd150, [QUPS_S];
	add.s64 	%rd110, %rd21, %rd154;
	ld.global.u64 	%rd111, [%rd110];
	mul.lo.s64 	%rd112, %rd111, %rd169;
	add.s64 	%rd160, %rd112, %rd160;
	add.s64 	%rd113, %rd20, %rd154;
	ld.global.u64 	%rd114, [%rd113];
	mul.lo.s64 	%rd115, %rd114, %rd169;
	add.s64 	%rd159, %rd115, %rd159;
	add.s64 	%rd158, %rd158, 1;
	setp.lt.u64 	%p16, %rd158, %rd150;
	@%p16 bra 	$L__BB3_6;

$L__BB3_21:
	shl.b64 	%rd116, %rd160, 3;
	add.s64 	%rd117, %rd22, %rd116;
	ld.global.nc.v2.f32 	{%f149, %f150}, [%rd117];
	add.s64 	%rd118, %rd24, %rd4;
	mul.lo.s64 	%rd57, %rd118, %rd7;
	mov.f32 	%f540, 0f00000000;
	@%p17 bra 	$L__BB3_24;
	bra.uni 	$L__BB3_22;

$L__BB3_24:
	setp.eq.s32 	%p18, %r23, 2;
	@%p18 bra 	$L__BB3_94;

	setp.eq.s32 	%p19, %r23, 3;
	@%p19 bra 	$L__BB3_33;

	setp.ne.s32 	%p20, %r23, 4;
	mov.f32 	%f541, %f540;
	@%p20 bra 	$L__BB3_108;

	abs.ftz.f32 	%f7, %f1;
	setp.lt.ftz.f32 	%p23, %f7, 0f7F800000;
	@%p23 bra 	$L__BB3_29;
	bra.uni 	$L__BB3_28;

$L__BB3_29:
	cvt.rzi.f32.f32 	%f504, %f1;
	sub.ftz.f32 	%f151, %f1, %f504;
	mov.b32 	%r45, %f151;
	or.b32  	%r46, %r1, %r45;
	mov.b32 	%f505, %r46;
	bra.uni 	$L__BB3_30;

$L__BB3_22:
	@%p21 bra 	$L__BB3_105;

	setp.eq.s32 	%p22, %r23, 1;
	mov.f32 	%f541, %f540;
	@%p22 bra 	$L__BB3_99;
	bra.uni 	$L__BB3_108;

$L__BB3_99:
	abs.ftz.f32 	%f134, %f1;
	setp.lt.ftz.f32 	%p73, %f134, 0f7F800000;
	@%p73 bra 	$L__BB3_101;
	bra.uni 	$L__BB3_100;

$L__BB3_101:
	cvt.rzi.f32.f32 	%f538, %f1;
	sub.ftz.f32 	%f411, %f1, %f538;
	mov.b32 	%r62, %f411;
	or.b32  	%r63, %r1, %r62;
	mov.b32 	%f539, %r63;
	bra.uni 	$L__BB3_102;

$L__BB3_94:
	abs.ftz.f32 	%f125, %f1;
	setp.lt.ftz.f32 	%p68, %f125, 0f7F800000;
	@%p68 bra 	$L__BB3_96;
	bra.uni 	$L__BB3_95;

$L__BB3_96:
	cvt.rzi.f32.f32 	%f536, %f1;
	sub.ftz.f32 	%f371, %f1, %f536;
	mov.b32 	%r59, %f371;
	or.b32  	%r60, %r1, %r59;
	mov.b32 	%f537, %r60;
	bra.uni 	$L__BB3_97;

$L__BB3_33:
	abs.ftz.f32 	%f16, %f1;
	setp.lt.ftz.f32 	%p27, %f16, 0f7F800000;
	@%p27 bra 	$L__BB3_35;
	bra.uni 	$L__BB3_34;

$L__BB3_35:
	cvt.rzi.f32.f32 	%f506, %f1;
	sub.ftz.f32 	%f166, %f1, %f506;
	mov.b32 	%r48, %f166;
	or.b32  	%r49, %r1, %r48;
	mov.b32 	%f507, %r49;
	bra.uni 	$L__BB3_36;

$L__BB3_105:
	mov.f32 	%f541, %f540;
	@%p77 bra 	$L__BB3_108;

	cvt.s64.s32 	%rd58, %r22;
	setp.le.u64 	%p78, %rd7, %rd58;
	mov.f32 	%f541, %f540;
	@%p78 bra 	$L__BB3_108;

	add.s64 	%rd139, %rd57, %rd58;
	shl.b64 	%rd140, %rd139, 3;
	add.s64 	%rd141, %rd2, %rd140;
	ld.global.nc.v2.f32 	{%f540, %f541}, [%rd141];
	bra.uni 	$L__BB3_108;

$L__BB3_28:
	setp.eq.ftz.f32 	%p24, %f7, 0f7F800000;
	selp.f32 	%f504, %f1, %f4, %p24;
	selp.f32 	%f505, %f3, %f4, %p24;

$L__BB3_30:
	cvt.rzi.ftz.s32.f32 	%r2, %f504;
	setp.lt.s32 	%p25, %r2, 0;
	mov.f32 	%f541, %f540;
	@%p25 bra 	$L__BB3_108;

	add.s32 	%r47, %r2, 1;
	cvt.s64.s32 	%rd119, %r47;
	setp.le.u64 	%p26, %rd7, %rd119;
	mov.f32 	%f541, %f540;
	@%p26 bra 	$L__BB3_108;

	cvt.s64.s32 	%rd120, %r2;
	add.s64 	%rd121, %rd57, %rd120;
	shl.b64 	%rd122, %rd121, 3;
	add.s64 	%rd123, %rd2, %rd122;
	ld.global.nc.v2.f32 	{%f156, %f157}, [%rd123];
	ld.global.nc.v2.f32 	{%f160, %f161}, [%rd123+8];
	sub.ftz.f32 	%f164, %f160, %f156;
	sub.ftz.f32 	%f165, %f161, %f157;
	fma.rn.ftz.f32 	%f541, %f505, %f165, %f157;
	fma.rn.ftz.f32 	%f540, %f505, %f164, %f156;
	bra.uni 	$L__BB3_108;

$L__BB3_100:
	setp.eq.ftz.f32 	%p74, %f134, 0f7F800000;
	selp.f32 	%f538, %f1, %f4, %p74;
	selp.f32 	%f539, %f3, %f4, %p74;

$L__BB3_102:
	cvt.rzi.ftz.s32.f32 	%r21, %f538;
	setp.lt.s32 	%p75, %r21, 0;
	mov.f32 	%f541, %f540;
	@%p75 bra 	$L__BB3_108;

	add.s32 	%r64, %r21, 1;
	cvt.s64.s32 	%rd134, %r64;
	setp.le.u64 	%p76, %rd7, %rd134;
	mov.f32 	%f541, %f540;
	@%p76 bra 	$L__BB3_108;

	cvt.s64.s32 	%rd135, %r21;
	add.s64 	%rd136, %rd57, %rd135;
	shl.b64 	%rd137, %rd136, 3;
	add.s64 	%rd138, %rd2, %rd137;
	ld.global.nc.v2.f32 	{%f416, %f417}, [%rd138];
	ld.global.nc.v2.f32 	{%f420, %f421}, [%rd138+8];
	sub.ftz.f32 	%f424, %f420, %f416;
	sub.ftz.f32 	%f425, %f421, %f417;
	fma.rn.ftz.f32 	%f541, %f539, %f425, %f417;
	fma.rn.ftz.f32 	%f540, %f539, %f424, %f416;
	bra.uni 	$L__BB3_108;

$L__BB3_95:
	setp.eq.ftz.f32 	%p69, %f125, 0f7F800000;
	selp.f32 	%f536, %f1, %f4, %p69;
	selp.f32 	%f537, %f3, %f4, %p69;

$L__BB3_97:
	cvt.rzi.ftz.s32.f32 	%r20, %f536;
	setp.lt.s32 	%p70, %r20, 1;
	add.s32 	%r61, %r20, 2;
	cvt.s64.s32 	%rd129, %r61;
	setp.le.u64 	%p71, %rd7, %rd129;
	or.pred  	%p72, %p70, %p71;
	mov.f32 	%f541, %f540;
	@%p72 bra 	$L__BB3_108;

	cvt.s64.s32 	%rd130, %r20;
	add.s64 	%rd131, %rd57, %rd130;
	shl.b64 	%rd132, %rd131, 3;
	add.s64 	%rd133, %rd2, %rd132;
	ld.global.nc.v2.f32 	{%f374, %f375}, [%rd133+-8];
	ld.global.nc.v2.f32 	{%f378, %f379}, [%rd133];
	ld.global.nc.v2.f32 	{%f382, %f383}, [%rd133+8];
	ld.global.nc.v2.f32 	{%f386, %f387}, [%rd133+16];
	fma.rn.ftz.f32 	%f390, %f537, 0f40000000, 0fBF800000;
	mov.f32 	%f391, 0f3F800000;
	fma.rn.ftz.f32 	%f392, %f537, %f390, 0fBF800000;
	fma.rn.ftz.f32 	%f393, %f537, %f392, 0f00000000;
	fma.rn.ftz.f32 	%f394, %f537, 0fC0A00000, 0f40400000;
	fma.rn.ftz.f32 	%f395, %f537, %f394, 0f00000000;
	fma.rn.ftz.f32 	%f396, %f537, %f395, 0f40000000;
	fma.rn.ftz.f32 	%f397, %f537, 0f40800000, 0fC0400000;
	fma.rn.ftz.f32 	%f398, %f537, %f397, 0f3F800000;
	fma.rn.ftz.f32 	%f399, %f537, %f398, 0f00000000;
	sub.ftz.f32 	%f400, %f391, %f537;
	fma.rn.ftz.f32 	%f401, %f537, %f400, 0f00000000;
	fma.rn.ftz.f32 	%f402, %f537, %f401, 0f00000000;
	mul.ftz.f32 	%f403, %f396, %f378;
	mul.ftz.f32 	%f404, %f396, %f379;
	fma.rn.ftz.f32 	%f405, %f393, %f374, %f403;
	fma.rn.ftz.f32 	%f406, %f393, %f375, %f404;
	fma.rn.ftz.f32 	%f407, %f399, %f382, %f405;
	fma.rn.ftz.f32 	%f408, %f399, %f383, %f406;
	fma.rn.ftz.f32 	%f409, %f402, %f386, %f407;
	fma.rn.ftz.f32 	%f410, %f402, %f387, %f408;
	mul.ftz.f32 	%f541, %f410, 0f3F000000;
	mul.ftz.f32 	%f540, %f409, 0f3F000000;
	bra.uni 	$L__BB3_108;

$L__BB3_34:
	setp.eq.ftz.f32 	%p28, %f16, 0f7F800000;
	selp.f32 	%f506, %f1, %f4, %p28;
	selp.f32 	%f507, %f3, %f4, %p28;

$L__BB3_36:
	cvt.rzi.ftz.s32.f32 	%r3, %f506;
	setp.lt.s32 	%p29, %r3, 1;
	add.s32 	%r50, %r3, 2;
	cvt.s64.s32 	%rd124, %r50;
	setp.le.u64 	%p30, %rd7, %rd124;
	or.pred  	%p31, %p29, %p30;
	mov.f32 	%f541, %f540;
	@%p31 bra 	$L__BB3_108;

	cvt.s64.s32 	%rd125, %r3;
	add.s64 	%rd126, %rd57, %rd125;
	shl.b64 	%rd127, %rd126, 3;
	add.s64 	%rd128, %rd2, %rd127;
	ld.global.nc.v2.f32 	{%f170, %f171}, [%rd128+-8];
	ld.global.nc.v2.f32 	{%f172, %f173}, [%rd128];
	ld.global.nc.v2.f32 	{%f174, %f175}, [%rd128+8];
	ld.global.nc.v2.f32 	{%f176, %f177}, [%rd128+16];
	add.ftz.f32 	%f31, %f507, 0f3F800000;
	mov.f32 	%f514, 0f3F800000;
	setp.eq.ftz.f32 	%p32, %f31, 0f00000000;
	@%p32 bra 	$L__BB3_51;

	add.ftz.f32 	%f460, %f507, 0f3F800000;
	add.ftz.f32 	%f179, %f460, %f460;
	cvt.rni.f32.f32 	%f180, %f179;
	cvt.rzi.ftz.s32.f32 	%r4, %f180;
	neg.ftz.f32 	%f181, %f180;
	mov.f32 	%f182, 0f3F000000;
	fma.rn.ftz.f32 	%f183, %f181, %f182, %f460;
	mul.ftz.f32 	%f184, %f183, 0f34222169;
	mov.f32 	%f185, 0f40490FDA;
	fma.rn.ftz.f32 	%f186, %f183, %f185, %f184;
	mul.rn.ftz.f32 	%f32, %f186, %f186;
	and.b32  	%r5, %r4, 1;
	setp.eq.s32 	%p33, %r5, 0;
	selp.f32 	%f33, %f186, 0f3F800000, %p33;
	mov.f32 	%f508, 0fB94D4153;
	@%p33 bra 	$L__BB3_40;

	mov.f32 	%f187, 0fBAB607ED;
	mov.f32 	%f188, 0f37CBAC00;
	fma.rn.ftz.f32 	%f508, %f188, %f32, %f187;

$L__BB3_40:
	selp.f32 	%f189, 0f3C0885E4, 0f3D2AAABB, %p33;
	fma.rn.ftz.f32 	%f190, %f508, %f32, %f189;
	selp.f32 	%f191, 0fBE2AAAA8, 0fBEFFFFFF, %p33;
	fma.rn.ftz.f32 	%f192, %f190, %f32, %f191;
	mov.f32 	%f193, 0f00000000;
	fma.rn.ftz.f32 	%f194, %f32, %f33, %f193;
	fma.rn.ftz.f32 	%f510, %f192, %f194, %f33;
	and.b32  	%r51, %r4, 2;
	setp.eq.s32 	%p35, %r51, 0;
	@%p35 bra 	$L__BB3_42;

	mov.f32 	%f467, 0f00000000;
	mov.f32 	%f196, 0fBF800000;
	fma.rn.ftz.f32 	%f510, %f510, %f196, %f467;

$L__BB3_42:
	add.ftz.f32 	%f461, %f507, 0f3F800000;
	cvt.rzi.f32.f32 	%f197, %f461;
	setp.neu.ftz.f32 	%p36, %f197, %f461;
	@%p36 bra 	$L__BB3_44;

	mov.f32 	%f471, 0f00000000;
	add.ftz.f32 	%f464, %f507, 0f3F800000;
	mul.rn.ftz.f32 	%f510, %f464, %f471;

$L__BB3_44:
	mov.f32 	%f466, 0f40490FDA;
	mov.f32 	%f465, 0f3F000000;
	add.ftz.f32 	%f462, %f507, 0f3F800000;
	add.ftz.f32 	%f41, %f510, %f510;
	mov.f32 	%f200, 0f40000000;
	div.approx.ftz.f32 	%f42, %f462, %f200;
	add.ftz.f32 	%f201, %f42, %f42;
	cvt.rni.f32.f32 	%f202, %f201;
	cvt.rzi.ftz.s32.f32 	%r6, %f202;
	neg.ftz.f32 	%f203, %f202;
	fma.rn.ftz.f32 	%f205, %f203, %f465, %f42;
	mul.ftz.f32 	%f206, %f205, 0f34222169;
	fma.rn.ftz.f32 	%f208, %f205, %f466, %f206;
	mul.rn.ftz.f32 	%f43, %f208, %f208;
	and.b32  	%r7, %r6, 1;
	setp.eq.s32 	%p37, %r7, 0;
	selp.f32 	%f44, %f208, 0f3F800000, %p37;
	mov.f32 	%f511, 0fB94D4153;
	@%p37 bra 	$L__BB3_46;

	mov.f32 	%f209, 0fBAB607ED;
	mov.f32 	%f210, 0f37CBAC00;
	fma.rn.ftz.f32 	%f511, %f210, %f43, %f209;

$L__BB3_46:
	mov.f32 	%f468, 0f00000000;
	selp.f32 	%f211, 0f3C0885E4, 0f3D2AAABB, %p37;
	fma.rn.ftz.f32 	%f212, %f511, %f43, %f211;
	selp.f32 	%f213, 0fBE2AAAA8, 0fBEFFFFFF, %p37;
	fma.rn.ftz.f32 	%f214, %f212, %f43, %f213;
	fma.rn.ftz.f32 	%f216, %f43, %f44, %f468;
	fma.rn.ftz.f32 	%f513, %f214, %f216, %f44;
	and.b32  	%r52, %r6, 2;
	setp.eq.s32 	%p39, %r52, 0;
	@%p39 bra 	$L__BB3_48;

	mov.f32 	%f469, 0f00000000;
	mov.f32 	%f218, 0fBF800000;
	fma.rn.ftz.f32 	%f513, %f513, %f218, %f469;

$L__BB3_48:
	mov.f32 	%f474, 0f40000000;
	add.ftz.f32 	%f473, %f507, 0f3F800000;
	div.approx.ftz.f32 	%f472, %f473, %f474;
	cvt.rzi.f32.f32 	%f219, %f472;
	setp.neu.ftz.f32 	%p40, %f219, %f472;
	@%p40 bra 	$L__BB3_50;

	mov.f32 	%f477, 0f40000000;
	add.ftz.f32 	%f476, %f507, 0f3F800000;
	div.approx.ftz.f32 	%f475, %f476, %f477;
	mov.f32 	%f470, 0f00000000;
	mul.rn.ftz.f32 	%f513, %f475, %f470;

$L__BB3_50:
	add.ftz.f32 	%f463, %f507, 0f3F800000;
	mul.ftz.f32 	%f221, %f463, 0f411DE9E7;
	mul.ftz.f32 	%f222, %f463, %f221;
	mul.ftz.f32 	%f223, %f41, %f513;
	div.approx.ftz.f32 	%f514, %f223, %f222;

$L__BB3_51:
	mov.f32 	%f521, 0f3F800000;
	add.ftz.f32 	%f54, %f507, 0f00000000;
	setp.eq.ftz.f32 	%p41, %f54, 0f00000000;
	@%p41 bra 	$L__BB3_65;

	add.ftz.f32 	%f226, %f54, %f54;
	cvt.rni.f32.f32 	%f227, %f226;
	cvt.rzi.ftz.s32.f32 	%r8, %f227;
	neg.ftz.f32 	%f228, %f227;
	mov.f32 	%f229, 0f3F000000;
	fma.rn.ftz.f32 	%f230, %f228, %f229, %f54;
	mul.ftz.f32 	%f231, %f230, 0f34222169;
	mov.f32 	%f232, 0f40490FDA;
	fma.rn.ftz.f32 	%f233, %f230, %f232, %f231;
	mul.rn.ftz.f32 	%f55, %f233, %f233;
	and.b32  	%r9, %r8, 1;
	setp.eq.s32 	%p42, %r9, 0;
	selp.f32 	%f56, %f233, 0f3F800000, %p42;
	mov.f32 	%f515, 0fB94D4153;
	@%p42 bra 	$L__BB3_54;

	mov.f32 	%f234, 0fBAB607ED;
	mov.f32 	%f235, 0f37CBAC00;
	fma.rn.ftz.f32 	%f515, %f235, %f55, %f234;

$L__BB3_54:
	selp.f32 	%f236, 0f3C0885E4, 0f3D2AAABB, %p42;
	fma.rn.ftz.f32 	%f237, %f515, %f55, %f236;
	selp.f32 	%f238, 0fBE2AAAA8, 0fBEFFFFFF, %p42;
	fma.rn.ftz.f32 	%f239, %f237, %f55, %f238;
	mov.f32 	%f240, 0f00000000;
	fma.rn.ftz.f32 	%f241, %f55, %f56, %f240;
	fma.rn.ftz.f32 	%f517, %f239, %f241, %f56;
	and.b32  	%r53, %r8, 2;
	setp.eq.s32 	%p44, %r53, 0;
	@%p44 bra 	$L__BB3_56;

	mov.f32 	%f484, 0f00000000;
	mov.f32 	%f243, 0fBF800000;
	fma.rn.ftz.f32 	%f517, %f517, %f243, %f484;

$L__BB3_56:
	add.ftz.f32 	%f478, %f507, 0f00000000;
	cvt.rzi.f32.f32 	%f244, %f478;
	setp.neu.ftz.f32 	%p45, %f244, %f478;
	@%p45 bra 	$L__BB3_58;

	mov.f32 	%f488, 0f00000000;
	add.ftz.f32 	%f483, %f507, 0f00000000;
	mul.rn.ftz.f32 	%f517, %f483, %f488;

$L__BB3_58:
	mov.f32 	%f481, 0f40490FDA;
	mov.f32 	%f480, 0f3F000000;
	add.ftz.f32 	%f479, %f507, 0f00000000;
	add.ftz.f32 	%f64, %f517, %f517;
	mov.f32 	%f247, 0f40000000;
	div.approx.ftz.f32 	%f65, %f479, %f247;
	add.ftz.f32 	%f248, %f65, %f65;
	cvt.rni.f32.f32 	%f249, %f248;
	cvt.rzi.ftz.s32.f32 	%r10, %f249;
	neg.ftz.f32 	%f250, %f249;
	fma.rn.ftz.f32 	%f252, %f250, %f480, %f65;
	mul.ftz.f32 	%f253, %f252, 0f34222169;
	fma.rn.ftz.f32 	%f255, %f252, %f481, %f253;
	mul.rn.ftz.f32 	%f66, %f255, %f255;
	and.b32  	%r11, %r10, 1;
	setp.eq.s32 	%p46, %r11, 0;
	selp.f32 	%f67, %f255, 0f3F800000, %p46;
	mov.f32 	%f518, 0fB94D4153;
	@%p46 bra 	$L__BB3_60;

	mov.f32 	%f256, 0fBAB607ED;
	mov.f32 	%f257, 0f37CBAC00;
	fma.rn.ftz.f32 	%f518, %f257, %f66, %f256;

$L__BB3_60:
	mov.f32 	%f485, 0f00000000;
	selp.f32 	%f258, 0f3C0885E4, 0f3D2AAABB, %p46;
	fma.rn.ftz.f32 	%f259, %f518, %f66, %f258;
	selp.f32 	%f260, 0fBE2AAAA8, 0fBEFFFFFF, %p46;
	fma.rn.ftz.f32 	%f261, %f259, %f66, %f260;
	fma.rn.ftz.f32 	%f263, %f66, %f67, %f485;
	fma.rn.ftz.f32 	%f520, %f261, %f263, %f67;
	and.b32  	%r54, %r10, 2;
	setp.eq.s32 	%p48, %r54, 0;
	@%p48 bra 	$L__BB3_62;

	mov.f32 	%f486, 0f00000000;
	mov.f32 	%f265, 0fBF800000;
	fma.rn.ftz.f32 	%f520, %f520, %f265, %f486;

$L__BB3_62:
	mov.f32 	%f491, 0f40000000;
	add.ftz.f32 	%f490, %f507, 0f00000000;
	div.approx.ftz.f32 	%f489, %f490, %f491;
	cvt.rzi.f32.f32 	%f266, %f489;
	setp.neu.ftz.f32 	%p49, %f266, %f489;
	@%p49 bra 	$L__BB3_64;

	mov.f32 	%f494, 0f40000000;
	add.ftz.f32 	%f493, %f507, 0f00000000;
	div.approx.ftz.f32 	%f492, %f493, %f494;
	mov.f32 	%f487, 0f00000000;
	mul.rn.ftz.f32 	%f520, %f492, %f487;

$L__BB3_64:
	add.ftz.f32 	%f482, %f507, 0f00000000;
	mul.ftz.f32 	%f268, %f482, 0f411DE9E7;
	mul.ftz.f32 	%f269, %f482, %f268;
	mul.ftz.f32 	%f270, %f64, %f520;
	div.approx.ftz.f32 	%f521, %f270, %f269;

$L__BB3_65:
	mov.f32 	%f528, 0f3F800000;
	add.ftz.f32 	%f77, %f507, 0fBF800000;
	setp.eq.ftz.f32 	%p50, %f77, 0f00000000;
	@%p50 bra 	$L__BB3_79;

	add.ftz.f32 	%f450, %f507, 0fBF800000;
	add.ftz.f32 	%f273, %f450, %f450;
	cvt.rni.f32.f32 	%f274, %f273;
	cvt.rzi.ftz.s32.f32 	%r12, %f274;
	neg.ftz.f32 	%f275, %f274;
	mov.f32 	%f276, 0f3F000000;
	fma.rn.ftz.f32 	%f277, %f275, %f276, %f450;
	mul.ftz.f32 	%f278, %f277, 0f34222169;
	mov.f32 	%f279, 0f40490FDA;
	fma.rn.ftz.f32 	%f280, %f277, %f279, %f278;
	mul.rn.ftz.f32 	%f78, %f280, %f280;
	and.b32  	%r13, %r12, 1;
	setp.eq.s32 	%p51, %r13, 0;
	selp.f32 	%f79, %f280, 0f3F800000, %p51;
	mov.f32 	%f522, 0fB94D4153;
	@%p51 bra 	$L__BB3_68;

	mov.f32 	%f281, 0fBAB607ED;
	mov.f32 	%f282, 0f37CBAC00;
	fma.rn.ftz.f32 	%f522, %f282, %f78, %f281;

$L__BB3_68:
	selp.f32 	%f283, 0f3C0885E4, 0f3D2AAABB, %p51;
	fma.rn.ftz.f32 	%f284, %f522, %f78, %f283;
	selp.f32 	%f285, 0fBE2AAAA8, 0fBEFFFFFF, %p51;
	fma.rn.ftz.f32 	%f286, %f284, %f78, %f285;
	mov.f32 	%f287, 0f00000000;
	fma.rn.ftz.f32 	%f288, %f78, %f79, %f287;
	fma.rn.ftz.f32 	%f524, %f286, %f288, %f79;
	and.b32  	%r55, %r12, 2;
	setp.eq.s32 	%p53, %r55, 0;
	@%p53 bra 	$L__BB3_70;

	mov.f32 	%f451, 0f00000000;
	mov.f32 	%f290, 0fBF800000;
	fma.rn.ftz.f32 	%f524, %f524, %f290, %f451;

$L__BB3_70:
	add.ftz.f32 	%f452, %f507, 0fBF800000;
	cvt.rzi.f32.f32 	%f291, %f452;
	setp.neu.ftz.f32 	%p54, %f291, %f452;
	@%p54 bra 	$L__BB3_72;

	mov.f32 	%f455, 0f00000000;
	add.ftz.f32 	%f454, %f507, 0fBF800000;
	mul.rn.ftz.f32 	%f524, %f454, %f455;

$L__BB3_72:
	mov.f32 	%f496, 0f40490FDA;
	mov.f32 	%f495, 0f3F000000;
	add.ftz.f32 	%f453, %f507, 0fBF800000;
	add.ftz.f32 	%f87, %f524, %f524;
	mov.f32 	%f294, 0f40000000;
	div.approx.ftz.f32 	%f88, %f453, %f294;
	add.ftz.f32 	%f295, %f88, %f88;
	cvt.rni.f32.f32 	%f296, %f295;
	cvt.rzi.ftz.s32.f32 	%r14, %f296;
	neg.ftz.f32 	%f297, %f296;
	fma.rn.ftz.f32 	%f299, %f297, %f495, %f88;
	mul.ftz.f32 	%f300, %f299, 0f34222169;
	fma.rn.ftz.f32 	%f302, %f299, %f496, %f300;
	mul.rn.ftz.f32 	%f89, %f302, %f302;
	and.b32  	%r15, %r14, 1;
	setp.eq.s32 	%p55, %r15, 0;
	selp.f32 	%f90, %f302, 0f3F800000, %p55;
	mov.f32 	%f525, 0fB94D4153;
	@%p55 bra 	$L__BB3_74;

	mov.f32 	%f303, 0fBAB607ED;
	mov.f32 	%f304, 0f37CBAC00;
	fma.rn.ftz.f32 	%f525, %f304, %f89, %f303;

$L__BB3_74:
	mov.f32 	%f441, 0f00000000;
	selp.f32 	%f305, 0f3C0885E4, 0f3D2AAABB, %p55;
	fma.rn.ftz.f32 	%f306, %f525, %f89, %f305;
	selp.f32 	%f307, 0fBE2AAAA8, 0fBEFFFFFF, %p55;
	fma.rn.ftz.f32 	%f308, %f306, %f89, %f307;
	fma.rn.ftz.f32 	%f310, %f89, %f90, %f441;
	fma.rn.ftz.f32 	%f527, %f308, %f310, %f90;
	and.b32  	%r56, %r14, 2;
	setp.eq.s32 	%p57, %r56, 0;
	@%p57 bra 	$L__BB3_76;

	mov.f32 	%f442, 0f00000000;
	mov.f32 	%f312, 0fBF800000;
	fma.rn.ftz.f32 	%f527, %f527, %f312, %f442;

$L__BB3_76:
	mov.f32 	%f445, 0f40000000;
	add.ftz.f32 	%f444, %f507, 0fBF800000;
	div.approx.ftz.f32 	%f443, %f444, %f445;
	cvt.rzi.f32.f32 	%f313, %f443;
	setp.neu.ftz.f32 	%p58, %f313, %f443;
	@%p58 bra 	$L__BB3_78;

	mov.f32 	%f459, 0f40000000;
	add.ftz.f32 	%f458, %f507, 0fBF800000;
	div.approx.ftz.f32 	%f457, %f453, %f459;
	mov.f32 	%f456, 0f00000000;
	mul.rn.ftz.f32 	%f527, %f457, %f456;

$L__BB3_78:
	add.ftz.f32 	%f446, %f507, 0fBF800000;
	mul.ftz.f32 	%f315, %f446, 0f411DE9E7;
	mul.ftz.f32 	%f316, %f446, %f315;
	mul.ftz.f32 	%f317, %f87, %f527;
	div.approx.ftz.f32 	%f528, %f317, %f316;

$L__BB3_79:
	mov.f32 	%f535, 0f3F800000;
	add.ftz.f32 	%f100, %f507, 0fC0000000;
	setp.eq.ftz.f32 	%p59, %f100, 0f00000000;
	@%p59 bra 	$L__BB3_93;

	add.ftz.f32 	%f320, %f100, %f100;
	cvt.rni.f32.f32 	%f321, %f320;
	cvt.rzi.ftz.s32.f32 	%r16, %f321;
	neg.ftz.f32 	%f322, %f321;
	mov.f32 	%f323, 0f3F000000;
	fma.rn.ftz.f32 	%f324, %f322, %f323, %f100;
	mul.ftz.f32 	%f325, %f324, 0f34222169;
	mov.f32 	%f326, 0f40490FDA;
	fma.rn.ftz.f32 	%f327, %f324, %f326, %f325;
	mul.rn.ftz.f32 	%f101, %f327, %f327;
	and.b32  	%r17, %r16, 1;
	setp.eq.s32 	%p60, %r17, 0;
	selp.f32 	%f102, %f327, 0f3F800000, %p60;
	mov.f32 	%f529, 0fB94D4153;
	@%p60 bra 	$L__BB3_82;

	mov.f32 	%f328, 0fBAB607ED;
	mov.f32 	%f329, 0f37CBAC00;
	fma.rn.ftz.f32 	%f529, %f329, %f101, %f328;

$L__BB3_82:
	selp.f32 	%f330, 0f3C0885E4, 0f3D2AAABB, %p60;
	fma.rn.ftz.f32 	%f331, %f529, %f101, %f330;
	selp.f32 	%f332, 0fBE2AAAA8, 0fBEFFFFFF, %p60;
	fma.rn.ftz.f32 	%f333, %f331, %f101, %f332;
	mov.f32 	%f334, 0f00000000;
	fma.rn.ftz.f32 	%f335, %f101, %f102, %f334;
	fma.rn.ftz.f32 	%f531, %f333, %f335, %f102;
	and.b32  	%r57, %r16, 2;
	setp.eq.s32 	%p62, %r57, 0;
	@%p62 bra 	$L__BB3_84;

	mov.f32 	%f499, 0f00000000;
	mov.f32 	%f337, 0fBF800000;
	fma.rn.ftz.f32 	%f531, %f531, %f337, %f499;

$L__BB3_84:
	cvt.rzi.f32.f32 	%f338, %f100;
	setp.neu.ftz.f32 	%p63, %f338, %f100;
	@%p63 bra 	$L__BB3_86;

	mov.f32 	%f503, 0f00000000;
	mul.rn.ftz.f32 	%f531, %f100, %f503;

$L__BB3_86:
	mov.f32 	%f498, 0f40490FDA;
	mov.f32 	%f497, 0f3F000000;
	add.ftz.f32 	%f110, %f531, %f531;
	mov.f32 	%f341, 0f40000000;
	div.approx.ftz.f32 	%f111, %f100, %f341;
	add.ftz.f32 	%f342, %f111, %f111;
	cvt.rni.f32.f32 	%f343, %f342;
	cvt.rzi.ftz.s32.f32 	%r18, %f343;
	neg.ftz.f32 	%f344, %f343;
	fma.rn.ftz.f32 	%f346, %f344, %f497, %f111;
	mul.ftz.f32 	%f347, %f346, 0f34222169;
	fma.rn.ftz.f32 	%f349, %f346, %f498, %f347;
	mul.rn.ftz.f32 	%f112, %f349, %f349;
	and.b32  	%r19, %r18, 1;
	setp.eq.s32 	%p64, %r19, 0;
	selp.f32 	%f113, %f349, 0f3F800000, %p64;
	mov.f32 	%f532, 0fB94D4153;
	@%p64 bra 	$L__BB3_88;

	mov.f32 	%f350, 0fBAB607ED;
	mov.f32 	%f351, 0f37CBAC00;
	fma.rn.ftz.f32 	%f532, %f351, %f112, %f350;

$L__BB3_88:
	mov.f32 	%f500, 0f00000000;
	selp.f32 	%f352, 0f3C0885E4, 0f3D2AAABB, %p64;
	fma.rn.ftz.f32 	%f353, %f532, %f112, %f352;
	selp.f32 	%f354, 0fBE2AAAA8, 0fBEFFFFFF, %p64;
	fma.rn.ftz.f32 	%f355, %f353, %f112, %f354;
	fma.rn.ftz.f32 	%f357, %f112, %f113, %f500;
	fma.rn.ftz.f32 	%f534, %f355, %f357, %f113;
	and.b32  	%r58, %r18, 2;
	setp.eq.s32 	%p66, %r58, 0;
	@%p66 bra 	$L__BB3_90;

	mov.f32 	%f501, 0f00000000;
	mov.f32 	%f359, 0fBF800000;
	fma.rn.ftz.f32 	%f534, %f534, %f359, %f501;

$L__BB3_90:
	cvt.rzi.f32.f32 	%f360, %f111;
	setp.neu.ftz.f32 	%p67, %f360, %f111;
	@%p67 bra 	$L__BB3_92;

	mov.f32 	%f502, 0f00000000;
	mul.rn.ftz.f32 	%f534, %f111, %f502;

$L__BB3_92:
	mul.ftz.f32 	%f362, %f100, 0f411DE9E7;
	mul.ftz.f32 	%f363, %f100, %f362;
	mul.ftz.f32 	%f364, %f110, %f534;
	div.approx.ftz.f32 	%f535, %f364, %f363;

$L__BB3_93:
	mul.ftz.f32 	%f365, %f172, %f521;
	fma.rn.ftz.f32 	%f366, %f170, %f514, %f365;
	mul.ftz.f32 	%f367, %f173, %f521;
	fma.rn.ftz.f32 	%f368, %f171, %f514, %f367;
	fma.rn.ftz.f32 	%f369, %f174, %f528, %f366;
	fma.rn.ftz.f32 	%f370, %f175, %f528, %f368;
	fma.rn.ftz.f32 	%f540, %f176, %f535, %f369;
	fma.rn.ftz.f32 	%f541, %f177, %f535, %f370;

$L__BB3_108:
	ld.const.u64 	%rd145, [QUPS_F];
	mul.ftz.f32 	%f434, %f149, %f540;
	mul.ftz.f32 	%f435, %f150, %f541;
	sub.ftz.f32 	%f436, %f434, %f435;
	mul.ftz.f32 	%f437, %f150, %f540;
	fma.rn.ftz.f32 	%f438, %f149, %f541, %f437;
	shl.b64 	%rd142, %rd159, 3;
	add.s64 	%rd143, %rd17, %rd142;
	atom.global.add.f32 	%f439, [%rd143], %f436;
	add.s64 	%rd144, %rd143, 4;
	atom.global.add.f32 	%f440, [%rd144], %f438;
	add.s64 	%rd157, %rd157, 1;
	setp.lt.u64 	%p79, %rd157, %rd145;
	@%p79 bra 	$L__BB3_5;

$L__BB3_109:
	ret;

}
	// .globl	_Z7interpdP7double2PKS_PKdi
.visible .entry _Z7interpdP7double2PKS_PKdi(
	.param .u64 _Z7interpdP7double2PKS_PKdi_param_0,
	.param .u64 _Z7interpdP7double2PKS_PKdi_param_1,
	.param .u64 _Z7interpdP7double2PKS_PKdi_param_2,
	.param .u32 _Z7interpdP7double2PKS_PKdi_param_3
)
{
	.reg .pred 	%p<71>;
	.reg .f32 	%f<301>;
	.reg .b32 	%r<85>;
	.reg .f64 	%fd<192>;
	.reg .b64 	%rd<65>;


	ld.param.u64 	%rd26, [_Z7interpdP7double2PKS_PKdi_param_0];
	ld.param.u64 	%rd27, [_Z7interpdP7double2PKS_PKdi_param_1];
	ld.param.u64 	%rd28, [_Z7interpdP7double2PKS_PKdi_param_2];
	ld.param.u32 	%r24, [_Z7interpdP7double2PKS_PKdi_param_3];
	mov.u32 	%r25, %ntid.x;
	mov.u32 	%r26, %ctaid.x;
	mov.u32 	%r27, %tid.x;
	mad.lo.s32 	%r28, %r26, %r25, %r27;
	cvt.u64.u32 	%rd1, %r28;
	mov.u32 	%r29, %ntid.y;
	mov.u32 	%r30, %ctaid.y;
	mov.u32 	%r31, %tid.y;
	mad.lo.s32 	%r32, %r30, %r29, %r31;
	cvt.u64.u32 	%rd2, %r32;
	ld.const.u64 	%rd3, [QUPS_M];
	ld.const.u64 	%rd4, [QUPS_N];
	ld.const.u64 	%rd5, [QUPS_T];
	ld.const.u64 	%rd63, [QUPS_F];
	ld.const.u64 	%rd7, [QUPS_I];
	and.b64  	%rd29, %rd7, -4294967296;
	setp.eq.s64 	%p1, %rd29, 0;
	@%p1 bra 	$L__BB4_2;

	div.u64 	%rd60, %rd1, %rd7;
	mul.lo.s64 	%rd30, %rd60, %rd7;
	sub.s64 	%rd61, %rd1, %rd30;
	bra.uni 	$L__BB4_3;

$L__BB4_2:
	cvt.u32.u64 	%r33, %rd7;
	cvt.u32.u64 	%r34, %rd1;
	div.u32 	%r35, %r34, %r33;
	mul.lo.s32 	%r36, %r35, %r33;
	sub.s32 	%r37, %r34, %r36;
	cvt.u64.u32 	%rd60, %r35;
	cvt.u64.u32 	%rd61, %r37;

$L__BB4_3:
	setp.ge.u64 	%p2, %rd60, %rd3;
	setp.le.u64 	%p3, %rd4, %rd2;
	or.pred  	%p4, %p2, %p3;
	setp.eq.s64 	%p5, %rd63, 0;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB4_89;

	cvta.to.global.u64 	%rd32, %rd28;
	mul.lo.s64 	%rd33, %rd7, %rd2;
	add.s64 	%rd14, %rd61, %rd33;
	mul.lo.s64 	%rd15, %rd4, %rd7;
	mul.lo.s64 	%rd34, %rd15, %rd60;
	add.s64 	%rd35, %rd34, %rd14;
	shl.b64 	%rd36, %rd35, 3;
	add.s64 	%rd37, %rd32, %rd36;
	ld.global.nc.f64 	%fd1, [%rd37];
	cvt.rn.ftz.f32.f64 	%f1, %fd1;
	mov.b32 	%r38, %f1;
	and.b32  	%r39, %r38, -2147483648;
	or.b32  	%r40, %r39, 1056964608;
	mov.b32 	%f2, %r40;
	add.f64 	%fd2, %fd1, %fd1;
	mul.lo.s64 	%rd38, %rd5, %rd2;
	cvta.to.global.u64 	%rd39, %rd27;
	shl.b64 	%rd40, %rd38, 4;
	add.s64 	%rd62, %rd39, %rd40;
	mul.lo.s64 	%rd41, %rd4, %rd5;
	shl.b64 	%rd17, %rd41, 4;
	cvta.to.global.u64 	%rd18, %rd26;
	mov.u64 	%rd64, 0;
	mov.f64 	%fd53, 0d0000000000000000;
	setp.gt.s32 	%p7, %r24, 1;
	setp.eq.s32 	%p10, %r24, 0;
	add.rz.ftz.f32 	%f251, %f1, %f2;
	cvt.rzi.f32.f32 	%f252, %f251;
	cvt.rzi.ftz.s32.f32 	%r23, %f252;
	setp.lt.s32 	%p68, %r23, 0;
	setp.eq.s32 	%p11, %r24, 1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r21}, %fd1;
	}
	and.b32  	%r73, %r21, 2146435072;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r78, %temp}, %fd1;
	}
	mov.f32 	%f213, 0f3F000000;
	mov.f32 	%f216, 0f40490FDA;

$L__BB4_5:
	@%p7 bra 	$L__BB4_8;

	mov.f64 	%fd190, %fd53;
	mov.f64 	%fd191, %fd53;
	@%p10 bra 	$L__BB4_85;

	@%p11 bra 	$L__BB4_78;
	bra.uni 	$L__BB4_88;

$L__BB4_78:
	setp.eq.s32 	%p62, %r73, 2146435072;
	@%p62 bra 	$L__BB4_80;
	bra.uni 	$L__BB4_79;

$L__BB4_80:
	and.b32  	%r79, %r21, 2147483647;
	setp.ne.s32 	%p63, %r79, 2146435072;
	setp.ne.s32 	%p64, %r78, 0;
	or.pred  	%p65, %p63, %p64;
	mov.f64 	%fd188, %fd2;
	mov.f64 	%fd189, %fd2;
	@%p65 bra 	$L__BB4_82;

	mov.f64 	%fd142, 0d0000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r80, %temp}, %fd142;
	}
	and.b32  	%r81, %r21, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r82}, %fd142;
	}
	or.b32  	%r83, %r82, %r81;
	mov.b64 	%fd189, {%r80, %r83};
	mov.f64 	%fd188, %fd1;
	bra.uni 	$L__BB4_82;

$L__BB4_8:
	setp.eq.s32 	%p8, %r24, 2;
	@%p8 bra 	$L__BB4_72;

	setp.ne.s32 	%p9, %r24, 3;
	mov.f64 	%fd190, %fd53;
	mov.f64 	%fd191, %fd53;
	@%p9 bra 	$L__BB4_88;

	setp.eq.s32 	%p12, %r73, 2146435072;
	@%p12 bra 	$L__BB4_12;
	bra.uni 	$L__BB4_11;

$L__BB4_12:
	and.b32  	%r47, %r21, 2147483647;
	setp.ne.s32 	%p13, %r47, 2146435072;
	setp.ne.s32 	%p14, %r78, 0;
	or.pred  	%p15, %p13, %p14;
	mov.f64 	%fd180, %fd2;
	mov.f64 	%fd181, %fd2;
	@%p15 bra 	$L__BB4_14;

	mov.f64 	%fd55, 0d0000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd55;
	}
	and.b32  	%r49, %r21, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd55;
	}
	or.b32  	%r51, %r50, %r49;
	mov.b64 	%fd181, {%r48, %r51};
	mov.f64 	%fd180, %fd1;
	bra.uni 	$L__BB4_14;

$L__BB4_85:
	@%p68 bra 	$L__BB4_88;

	cvt.s64.s32 	%rd22, %r23;
	setp.le.u64 	%p69, %rd5, %rd22;
	mov.f64 	%fd190, %fd53;
	mov.f64 	%fd191, %fd53;
	@%p69 bra 	$L__BB4_88;

	shl.b64 	%rd51, %rd22, 4;
	add.s64 	%rd52, %rd62, %rd51;
	ld.global.nc.v2.f64 	{%fd190, %fd191}, [%rd52];
	bra.uni 	$L__BB4_88;

$L__BB4_72:
	setp.eq.s32 	%p55, %r73, 2146435072;
	@%p55 bra 	$L__BB4_74;
	bra.uni 	$L__BB4_73;

$L__BB4_74:
	and.b32  	%r67, %r21, 2147483647;
	setp.ne.s32 	%p56, %r67, 2146435072;
	setp.ne.s32 	%p57, %r78, 0;
	or.pred  	%p58, %p56, %p57;
	mov.f64 	%fd186, %fd2;
	mov.f64 	%fd187, %fd2;
	@%p58 bra 	$L__BB4_76;

	mov.f64 	%fd101, 0d0000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r68, %temp}, %fd101;
	}
	and.b32  	%r69, %r21, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r70}, %fd101;
	}
	or.b32  	%r71, %r70, %r69;
	mov.b64 	%fd187, {%r68, %r71};
	mov.f64 	%fd186, %fd1;
	bra.uni 	$L__BB4_76;

$L__BB4_79:
	cvt.rzi.f64.f64 	%fd188, %fd1;
	sub.f64 	%fd141, %fd1, %fd188;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r74, %temp}, %fd141;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r75}, %fd141;
	}
	and.b32  	%r76, %r21, -2147483648;
	or.b32  	%r77, %r75, %r76;
	mov.b64 	%fd189, {%r74, %r77};

$L__BB4_82:
	cvt.rzi.s32.f64 	%r22, %fd188;
	setp.lt.s32 	%p66, %r22, 0;
	mov.f64 	%fd190, %fd53;
	mov.f64 	%fd191, %fd53;
	@%p66 bra 	$L__BB4_88;

	add.s32 	%r84, %r22, 1;
	cvt.s64.s32 	%rd48, %r84;
	setp.le.u64 	%p67, %rd5, %rd48;
	mov.f64 	%fd190, %fd53;
	mov.f64 	%fd191, %fd53;
	@%p67 bra 	$L__BB4_88;

	mul.wide.s32 	%rd49, %r22, 16;
	add.s64 	%rd50, %rd62, %rd49;
	ld.global.nc.v2.f64 	{%fd147, %fd148}, [%rd50];
	ld.global.nc.v2.f64 	{%fd151, %fd152}, [%rd50+16];
	sub.f64 	%fd155, %fd151, %fd147;
	sub.f64 	%fd156, %fd152, %fd148;
	fma.rn.f64 	%fd191, %fd189, %fd156, %fd148;
	fma.rn.f64 	%fd190, %fd189, %fd155, %fd147;
	bra.uni 	$L__BB4_88;

$L__BB4_11:
	cvt.rzi.f64.f64 	%fd180, %fd1;
	sub.f64 	%fd54, %fd1, %fd180;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r42, %temp}, %fd54;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r43}, %fd54;
	}
	and.b32  	%r44, %r21, -2147483648;
	or.b32  	%r45, %r43, %r44;
	mov.b64 	%fd181, {%r42, %r45};

$L__BB4_14:
	cvt.rzi.s32.f64 	%r2, %fd180;
	setp.lt.s32 	%p16, %r2, 1;
	add.s32 	%r52, %r2, 2;
	cvt.s64.s32 	%rd42, %r52;
	setp.le.u64 	%p17, %rd5, %rd42;
	or.pred  	%p18, %p16, %p17;
	mov.f64 	%fd190, %fd53;
	mov.f64 	%fd191, %fd53;
	@%p18 bra 	$L__BB4_88;

	mul.wide.s32 	%rd43, %r2, 16;
	add.s64 	%rd44, %rd62, %rd43;
	ld.global.nc.v2.f64 	{%fd59, %fd60}, [%rd44+-16];
	ld.global.nc.v2.f64 	{%fd61, %fd62}, [%rd44];
	ld.global.nc.v2.f64 	{%fd63, %fd64}, [%rd44+16];
	ld.global.nc.v2.f64 	{%fd65, %fd66}, [%rd44+32];
	add.f64 	%fd16, %fd181, 0d3FF0000000000000;
	mov.f64 	%fd182, 0d3FF0000000000000;
	setp.eq.f64 	%p19, %fd16, 0d0000000000000000;
	@%p19 bra 	$L__BB4_29;

	cvt.rn.ftz.f32.f64 	%f3, %fd16;
	add.ftz.f32 	%f84, %f3, %f3;
	cvt.rni.f32.f32 	%f85, %f84;
	cvt.rzi.ftz.s32.f32 	%r3, %f85;
	neg.ftz.f32 	%f86, %f85;
	fma.rn.ftz.f32 	%f88, %f86, %f213, %f3;
	mul.ftz.f32 	%f89, %f88, 0f34222169;
	fma.rn.ftz.f32 	%f91, %f88, %f216, %f89;
	mul.rn.ftz.f32 	%f4, %f91, %f91;
	and.b32  	%r4, %r3, 1;
	setp.eq.s32 	%p20, %r4, 0;
	selp.f32 	%f5, %f91, 0f3F800000, %p20;
	mov.f32 	%f277, 0fB94D4153;
	@%p20 bra 	$L__BB4_18;

	mov.f32 	%f92, 0fBAB607ED;
	mov.f32 	%f93, 0f37CBAC00;
	fma.rn.ftz.f32 	%f277, %f93, %f4, %f92;

$L__BB4_18:
	selp.f32 	%f94, 0f3C0885E4, 0f3D2AAABB, %p20;
	fma.rn.ftz.f32 	%f95, %f277, %f4, %f94;
	selp.f32 	%f96, 0fBE2AAAA8, 0fBEFFFFFF, %p20;
	fma.rn.ftz.f32 	%f97, %f95, %f4, %f96;
	mov.f32 	%f98, 0f00000000;
	fma.rn.ftz.f32 	%f99, %f4, %f5, %f98;
	fma.rn.ftz.f32 	%f279, %f97, %f99, %f5;
	and.b32  	%r53, %r3, 2;
	setp.eq.s32 	%p22, %r53, 0;
	@%p22 bra 	$L__BB4_20;

	mov.f32 	%f101, 0fBF800000;
	fma.rn.ftz.f32 	%f279, %f279, %f101, %f98;

$L__BB4_20:
	add.f64 	%fd169, %fd181, 0d3FF0000000000000;
	cvt.rn.ftz.f32.f64 	%f258, %fd169;
	cvt.rzi.f32.f32 	%f102, %f258;
	setp.neu.ftz.f32 	%p23, %f102, %f258;
	@%p23 bra 	$L__BB4_22;

	add.f64 	%fd172, %fd181, 0d3FF0000000000000;
	cvt.rn.ftz.f32.f64 	%f259, %fd172;
	mul.rn.ftz.f32 	%f279, %f259, %f98;

$L__BB4_22:
	add.f64 	%fd170, %fd181, 0d3FF0000000000000;
	cvt.ftz.f64.f32 	%fd67, %f279;
	add.f64 	%fd17, %fd67, %fd67;
	mul.f64 	%fd68, %fd170, 0d3FE0000000000000;
	cvt.rn.ftz.f32.f64 	%f13, %fd68;
	add.ftz.f32 	%f105, %f13, %f13;
	cvt.rni.f32.f32 	%f106, %f105;
	cvt.rzi.ftz.s32.f32 	%r5, %f106;
	neg.ftz.f32 	%f107, %f106;
	fma.rn.ftz.f32 	%f109, %f107, %f213, %f13;
	mul.ftz.f32 	%f110, %f109, 0f34222169;
	fma.rn.ftz.f32 	%f112, %f109, %f216, %f110;
	mul.rn.ftz.f32 	%f14, %f112, %f112;
	and.b32  	%r6, %r5, 1;
	setp.eq.s32 	%p24, %r6, 0;
	selp.f32 	%f15, %f112, 0f3F800000, %p24;
	mov.f32 	%f280, 0fB94D4153;
	@%p24 bra 	$L__BB4_24;

	mov.f32 	%f113, 0fBAB607ED;
	mov.f32 	%f114, 0f37CBAC00;
	fma.rn.ftz.f32 	%f280, %f114, %f14, %f113;

$L__BB4_24:
	mov.f32 	%f260, 0f00000000;
	selp.f32 	%f115, 0f3C0885E4, 0f3D2AAABB, %p24;
	fma.rn.ftz.f32 	%f116, %f280, %f14, %f115;
	selp.f32 	%f117, 0fBE2AAAA8, 0fBEFFFFFF, %p24;
	fma.rn.ftz.f32 	%f118, %f116, %f14, %f117;
	fma.rn.ftz.f32 	%f120, %f14, %f15, %f260;
	fma.rn.ftz.f32 	%f282, %f118, %f120, %f15;
	and.b32  	%r54, %r5, 2;
	setp.eq.s32 	%p26, %r54, 0;
	@%p26 bra 	$L__BB4_26;

	mov.f32 	%f261, 0f00000000;
	mov.f32 	%f122, 0fBF800000;
	fma.rn.ftz.f32 	%f282, %f282, %f122, %f261;

$L__BB4_26:
	cvt.rzi.f32.f32 	%f123, %f13;
	setp.neu.ftz.f32 	%p27, %f123, %f13;
	@%p27 bra 	$L__BB4_28;

	mov.f32 	%f262, 0f00000000;
	mul.rn.ftz.f32 	%f282, %f13, %f262;

$L__BB4_28:
	add.f64 	%fd171, %fd181, 0d3FF0000000000000;
	cvt.ftz.f64.f32 	%fd69, %f282;
	mul.f64 	%fd70, %fd17, %fd69;
	mul.f64 	%fd71, %fd171, 0d4023BD3CDC2CAB20;
	mul.f64 	%fd72, %fd171, %fd71;
	div.rn.f64 	%fd182, %fd70, %fd72;

$L__BB4_29:
	mov.f64 	%fd183, 0d3FF0000000000000;
	add.f64 	%fd20, %fd181, 0d0000000000000000;
	setp.eq.f64 	%p28, %fd20, 0d0000000000000000;
	@%p28 bra 	$L__BB4_43;

	cvt.rn.ftz.f32.f64 	%f23, %fd20;
	add.ftz.f32 	%f126, %f23, %f23;
	cvt.rni.f32.f32 	%f127, %f126;
	cvt.rzi.ftz.s32.f32 	%r7, %f127;
	neg.ftz.f32 	%f128, %f127;
	fma.rn.ftz.f32 	%f130, %f128, %f213, %f23;
	mul.ftz.f32 	%f131, %f130, 0f34222169;
	fma.rn.ftz.f32 	%f133, %f130, %f216, %f131;
	mul.rn.ftz.f32 	%f24, %f133, %f133;
	and.b32  	%r8, %r7, 1;
	setp.eq.s32 	%p29, %r8, 0;
	selp.f32 	%f25, %f133, 0f3F800000, %p29;
	mov.f32 	%f283, 0fB94D4153;
	@%p29 bra 	$L__BB4_32;

	mov.f32 	%f134, 0fBAB607ED;
	mov.f32 	%f135, 0f37CBAC00;
	fma.rn.ftz.f32 	%f283, %f135, %f24, %f134;

$L__BB4_32:
	selp.f32 	%f136, 0f3C0885E4, 0f3D2AAABB, %p29;
	fma.rn.ftz.f32 	%f137, %f283, %f24, %f136;
	selp.f32 	%f138, 0fBE2AAAA8, 0fBEFFFFFF, %p29;
	fma.rn.ftz.f32 	%f139, %f137, %f24, %f138;
	mov.f32 	%f140, 0f00000000;
	fma.rn.ftz.f32 	%f141, %f24, %f25, %f140;
	fma.rn.ftz.f32 	%f285, %f139, %f141, %f25;
	and.b32  	%r55, %r7, 2;
	setp.eq.s32 	%p31, %r55, 0;
	@%p31 bra 	$L__BB4_34;

	mov.f32 	%f265, 0f00000000;
	mov.f32 	%f143, 0fBF800000;
	fma.rn.ftz.f32 	%f285, %f285, %f143, %f265;

$L__BB4_34:
	add.f64 	%fd173, %fd181, 0d0000000000000000;
	cvt.rn.ftz.f32.f64 	%f263, %fd173;
	cvt.rzi.f32.f32 	%f144, %f263;
	setp.neu.ftz.f32 	%p32, %f144, %f263;
	@%p32 bra 	$L__BB4_36;

	mov.f32 	%f269, 0f00000000;
	add.f64 	%fd176, %fd181, 0d0000000000000000;
	cvt.rn.ftz.f32.f64 	%f264, %fd176;
	mul.rn.ftz.f32 	%f285, %f264, %f269;

$L__BB4_36:
	add.f64 	%fd174, %fd181, 0d0000000000000000;
	cvt.ftz.f64.f32 	%fd74, %f285;
	add.f64 	%fd21, %fd74, %fd74;
	mul.f64 	%fd75, %fd174, 0d3FE0000000000000;
	cvt.rn.ftz.f32.f64 	%f33, %fd75;
	add.ftz.f32 	%f147, %f33, %f33;
	cvt.rni.f32.f32 	%f148, %f147;
	cvt.rzi.ftz.s32.f32 	%r9, %f148;
	neg.ftz.f32 	%f149, %f148;
	fma.rn.ftz.f32 	%f151, %f149, %f213, %f33;
	mul.ftz.f32 	%f152, %f151, 0f34222169;
	fma.rn.ftz.f32 	%f154, %f151, %f216, %f152;
	mul.rn.ftz.f32 	%f34, %f154, %f154;
	and.b32  	%r10, %r9, 1;
	setp.eq.s32 	%p33, %r10, 0;
	selp.f32 	%f35, %f154, 0f3F800000, %p33;
	mov.f32 	%f286, 0fB94D4153;
	@%p33 bra 	$L__BB4_38;

	mov.f32 	%f155, 0fBAB607ED;
	mov.f32 	%f156, 0f37CBAC00;
	fma.rn.ftz.f32 	%f286, %f156, %f34, %f155;

$L__BB4_38:
	mov.f32 	%f266, 0f00000000;
	selp.f32 	%f157, 0f3C0885E4, 0f3D2AAABB, %p33;
	fma.rn.ftz.f32 	%f158, %f286, %f34, %f157;
	selp.f32 	%f159, 0fBE2AAAA8, 0fBEFFFFFF, %p33;
	fma.rn.ftz.f32 	%f160, %f158, %f34, %f159;
	fma.rn.ftz.f32 	%f162, %f34, %f35, %f266;
	fma.rn.ftz.f32 	%f288, %f160, %f162, %f35;
	and.b32  	%r56, %r9, 2;
	setp.eq.s32 	%p35, %r56, 0;
	@%p35 bra 	$L__BB4_40;

	mov.f32 	%f267, 0f00000000;
	mov.f32 	%f164, 0fBF800000;
	fma.rn.ftz.f32 	%f288, %f288, %f164, %f267;

$L__BB4_40:
	cvt.rzi.f32.f32 	%f165, %f33;
	setp.neu.ftz.f32 	%p36, %f165, %f33;
	@%p36 bra 	$L__BB4_42;

	mov.f32 	%f268, 0f00000000;
	mul.rn.ftz.f32 	%f288, %f33, %f268;

$L__BB4_42:
	add.f64 	%fd175, %fd181, 0d0000000000000000;
	cvt.ftz.f64.f32 	%fd76, %f288;
	mul.f64 	%fd77, %fd21, %fd76;
	mul.f64 	%fd78, %fd175, 0d4023BD3CDC2CAB20;
	mul.f64 	%fd79, %fd175, %fd78;
	div.rn.f64 	%fd183, %fd77, %fd79;

$L__BB4_43:
	mov.f64 	%fd184, 0d3FF0000000000000;
	add.f64 	%fd24, %fd181, 0dBFF0000000000000;
	setp.eq.f64 	%p37, %fd24, 0d0000000000000000;
	@%p37 bra 	$L__BB4_57;

	add.f64 	%fd167, %fd181, 0dBFF0000000000000;
	cvt.rn.ftz.f32.f64 	%f43, %fd167;
	add.ftz.f32 	%f168, %f43, %f43;
	cvt.rni.f32.f32 	%f169, %f168;
	cvt.rzi.ftz.s32.f32 	%r11, %f169;
	neg.ftz.f32 	%f170, %f169;
	fma.rn.ftz.f32 	%f172, %f170, %f213, %f43;
	mul.ftz.f32 	%f173, %f172, 0f34222169;
	fma.rn.ftz.f32 	%f175, %f172, %f216, %f173;
	mul.rn.ftz.f32 	%f44, %f175, %f175;
	and.b32  	%r12, %r11, 1;
	setp.eq.s32 	%p38, %r12, 0;
	selp.f32 	%f45, %f175, 0f3F800000, %p38;
	mov.f32 	%f289, 0fB94D4153;
	@%p38 bra 	$L__BB4_46;

	mov.f32 	%f176, 0fBAB607ED;
	mov.f32 	%f177, 0f37CBAC00;
	fma.rn.ftz.f32 	%f289, %f177, %f44, %f176;

$L__BB4_46:
	selp.f32 	%f178, 0f3C0885E4, 0f3D2AAABB, %p38;
	fma.rn.ftz.f32 	%f179, %f289, %f44, %f178;
	selp.f32 	%f180, 0fBE2AAAA8, 0fBEFFFFFF, %p38;
	fma.rn.ftz.f32 	%f181, %f179, %f44, %f180;
	mov.f32 	%f182, 0f00000000;
	fma.rn.ftz.f32 	%f183, %f44, %f45, %f182;
	fma.rn.ftz.f32 	%f291, %f181, %f183, %f45;
	and.b32  	%r57, %r11, 2;
	setp.eq.s32 	%p40, %r57, 0;
	@%p40 bra 	$L__BB4_48;

	mov.f32 	%f255, 0f00000000;
	mov.f32 	%f185, 0fBF800000;
	fma.rn.ftz.f32 	%f291, %f291, %f185, %f255;

$L__BB4_48:
	add.f64 	%fd177, %fd181, 0dBFF0000000000000;
	cvt.rn.ftz.f32.f64 	%f270, %fd177;
	cvt.rzi.f32.f32 	%f186, %f270;
	setp.neu.ftz.f32 	%p41, %f186, %f270;
	@%p41 bra 	$L__BB4_50;

	add.f64 	%fd178, %fd181, 0dBFF0000000000000;
	cvt.rn.ftz.f32.f64 	%f271, %fd178;
	mov.f32 	%f256, 0f00000000;
	mul.rn.ftz.f32 	%f291, %f271, %f256;

$L__BB4_50:
	add.f64 	%fd168, %fd181, 0dBFF0000000000000;
	cvt.ftz.f64.f32 	%fd81, %f291;
	add.f64 	%fd25, %fd81, %fd81;
	mul.f64 	%fd82, %fd168, 0d3FE0000000000000;
	cvt.rn.ftz.f32.f64 	%f53, %fd82;
	add.ftz.f32 	%f189, %f53, %f53;
	cvt.rni.f32.f32 	%f190, %f189;
	cvt.rzi.ftz.s32.f32 	%r13, %f190;
	neg.ftz.f32 	%f191, %f190;
	fma.rn.ftz.f32 	%f193, %f191, %f213, %f53;
	mul.ftz.f32 	%f194, %f193, 0f34222169;
	fma.rn.ftz.f32 	%f196, %f193, %f216, %f194;
	mul.rn.ftz.f32 	%f54, %f196, %f196;
	and.b32  	%r14, %r13, 1;
	setp.eq.s32 	%p42, %r14, 0;
	selp.f32 	%f55, %f196, 0f3F800000, %p42;
	mov.f32 	%f292, 0fB94D4153;
	@%p42 bra 	$L__BB4_52;

	mov.f32 	%f197, 0fBAB607ED;
	mov.f32 	%f198, 0f37CBAC00;
	fma.rn.ftz.f32 	%f292, %f198, %f54, %f197;

$L__BB4_52:
	mov.f32 	%f253, 0f00000000;
	selp.f32 	%f199, 0f3C0885E4, 0f3D2AAABB, %p42;
	fma.rn.ftz.f32 	%f200, %f292, %f54, %f199;
	selp.f32 	%f201, 0fBE2AAAA8, 0fBEFFFFFF, %p42;
	fma.rn.ftz.f32 	%f202, %f200, %f54, %f201;
	fma.rn.ftz.f32 	%f204, %f54, %f55, %f253;
	fma.rn.ftz.f32 	%f294, %f202, %f204, %f55;
	and.b32  	%r58, %r13, 2;
	setp.eq.s32 	%p44, %r58, 0;
	@%p44 bra 	$L__BB4_54;

	mov.f32 	%f254, 0f00000000;
	mov.f32 	%f206, 0fBF800000;
	fma.rn.ftz.f32 	%f294, %f294, %f206, %f254;

$L__BB4_54:
	cvt.rzi.f32.f32 	%f207, %f53;
	setp.neu.ftz.f32 	%p45, %f207, %f53;
	@%p45 bra 	$L__BB4_56;

	mov.f32 	%f257, 0f00000000;
	mul.rn.ftz.f32 	%f294, %f53, %f257;

$L__BB4_56:
	add.f64 	%fd163, %fd181, 0dBFF0000000000000;
	cvt.ftz.f64.f32 	%fd83, %f294;
	mul.f64 	%fd84, %fd25, %fd83;
	mul.f64 	%fd85, %fd163, 0d4023BD3CDC2CAB20;
	mul.f64 	%fd86, %fd163, %fd85;
	div.rn.f64 	%fd184, %fd84, %fd86;

$L__BB4_57:
	mov.f64 	%fd185, 0d3FF0000000000000;
	add.f64 	%fd28, %fd181, 0dC000000000000000;
	setp.eq.f64 	%p46, %fd28, 0d0000000000000000;
	@%p46 bra 	$L__BB4_71;

	cvt.rn.ftz.f32.f64 	%f63, %fd28;
	add.ftz.f32 	%f210, %f63, %f63;
	cvt.rni.f32.f32 	%f211, %f210;
	cvt.rzi.ftz.s32.f32 	%r15, %f211;
	neg.ftz.f32 	%f212, %f211;
	fma.rn.ftz.f32 	%f214, %f212, %f213, %f63;
	mul.ftz.f32 	%f215, %f214, 0f34222169;
	fma.rn.ftz.f32 	%f217, %f214, %f216, %f215;
	mul.rn.ftz.f32 	%f64, %f217, %f217;
	and.b32  	%r16, %r15, 1;
	setp.eq.s32 	%p47, %r16, 0;
	selp.f32 	%f65, %f217, 0f3F800000, %p47;
	mov.f32 	%f295, 0fB94D4153;
	@%p47 bra 	$L__BB4_60;

	mov.f32 	%f218, 0fBAB607ED;
	mov.f32 	%f219, 0f37CBAC00;
	fma.rn.ftz.f32 	%f295, %f219, %f64, %f218;

$L__BB4_60:
	selp.f32 	%f220, 0f3C0885E4, 0f3D2AAABB, %p47;
	fma.rn.ftz.f32 	%f221, %f295, %f64, %f220;
	selp.f32 	%f222, 0fBE2AAAA8, 0fBEFFFFFF, %p47;
	fma.rn.ftz.f32 	%f223, %f221, %f64, %f222;
	mov.f32 	%f224, 0f00000000;
	fma.rn.ftz.f32 	%f225, %f64, %f65, %f224;
	fma.rn.ftz.f32 	%f297, %f223, %f225, %f65;
	and.b32  	%r59, %r15, 2;
	setp.eq.s32 	%p49, %r59, 0;
	@%p49 bra 	$L__BB4_62;

	mov.f32 	%f272, 0f00000000;
	mov.f32 	%f227, 0fBF800000;
	fma.rn.ftz.f32 	%f297, %f297, %f227, %f272;

$L__BB4_62:
	cvt.rzi.f32.f32 	%f228, %f63;
	setp.neu.ftz.f32 	%p50, %f228, %f63;
	@%p50 bra 	$L__BB4_64;

	mov.f32 	%f276, 0f00000000;
	mul.rn.ftz.f32 	%f297, %f63, %f276;

$L__BB4_64:
	cvt.ftz.f64.f32 	%fd88, %f297;
	add.f64 	%fd29, %fd88, %fd88;
	mul.f64 	%fd89, %fd28, 0d3FE0000000000000;
	cvt.rn.ftz.f32.f64 	%f73, %fd89;
	add.ftz.f32 	%f231, %f73, %f73;
	cvt.rni.f32.f32 	%f232, %f231;
	cvt.rzi.ftz.s32.f32 	%r17, %f232;
	neg.ftz.f32 	%f233, %f232;
	fma.rn.ftz.f32 	%f235, %f233, %f213, %f73;
	mul.ftz.f32 	%f236, %f235, 0f34222169;
	fma.rn.ftz.f32 	%f238, %f235, %f216, %f236;
	mul.rn.ftz.f32 	%f74, %f238, %f238;
	and.b32  	%r18, %r17, 1;
	setp.eq.s32 	%p51, %r18, 0;
	selp.f32 	%f75, %f238, 0f3F800000, %p51;
	mov.f32 	%f298, 0fB94D4153;
	@%p51 bra 	$L__BB4_66;

	mov.f32 	%f239, 0fBAB607ED;
	mov.f32 	%f240, 0f37CBAC00;
	fma.rn.ftz.f32 	%f298, %f240, %f74, %f239;

$L__BB4_66:
	mov.f32 	%f273, 0f00000000;
	selp.f32 	%f241, 0f3C0885E4, 0f3D2AAABB, %p51;
	fma.rn.ftz.f32 	%f242, %f298, %f74, %f241;
	selp.f32 	%f243, 0fBE2AAAA8, 0fBEFFFFFF, %p51;
	fma.rn.ftz.f32 	%f244, %f242, %f74, %f243;
	fma.rn.ftz.f32 	%f246, %f74, %f75, %f273;
	fma.rn.ftz.f32 	%f300, %f244, %f246, %f75;
	and.b32  	%r60, %r17, 2;
	setp.eq.s32 	%p53, %r60, 0;
	@%p53 bra 	$L__BB4_68;

	mov.f32 	%f274, 0f00000000;
	mov.f32 	%f248, 0fBF800000;
	fma.rn.ftz.f32 	%f300, %f300, %f248, %f274;

$L__BB4_68:
	cvt.rzi.f32.f32 	%f249, %f73;
	setp.neu.ftz.f32 	%p54, %f249, %f73;
	@%p54 bra 	$L__BB4_70;

	mov.f32 	%f275, 0f00000000;
	mul.rn.ftz.f32 	%f300, %f73, %f275;

$L__BB4_70:
	add.f64 	%fd179, %fd181, 0dC000000000000000;
	cvt.ftz.f64.f32 	%fd90, %f300;
	mul.f64 	%fd91, %fd29, %fd90;
	mul.f64 	%fd92, %fd179, 0d4023BD3CDC2CAB20;
	mul.f64 	%fd93, %fd179, %fd92;
	div.rn.f64 	%fd185, %fd91, %fd93;

$L__BB4_71:
	mul.f64 	%fd94, %fd61, %fd183;
	fma.rn.f64 	%fd95, %fd59, %fd182, %fd94;
	mul.f64 	%fd96, %fd62, %fd183;
	fma.rn.f64 	%fd97, %fd60, %fd182, %fd96;
	fma.rn.f64 	%fd98, %fd63, %fd184, %fd95;
	fma.rn.f64 	%fd99, %fd64, %fd184, %fd97;
	fma.rn.f64 	%fd190, %fd65, %fd185, %fd98;
	fma.rn.f64 	%fd191, %fd66, %fd185, %fd99;
	bra.uni 	$L__BB4_88;

$L__BB4_73:
	cvt.rzi.f64.f64 	%fd186, %fd1;
	sub.f64 	%fd100, %fd1, %fd186;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r62, %temp}, %fd100;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r63}, %fd100;
	}
	and.b32  	%r64, %r21, -2147483648;
	or.b32  	%r65, %r63, %r64;
	mov.b64 	%fd187, {%r62, %r65};

$L__BB4_76:
	cvt.rzi.s32.f64 	%r20, %fd186;
	setp.lt.s32 	%p59, %r20, 1;
	add.s32 	%r72, %r20, 2;
	cvt.s64.s32 	%rd45, %r72;
	setp.le.u64 	%p60, %rd5, %rd45;
	or.pred  	%p61, %p59, %p60;
	mov.f64 	%fd190, %fd53;
	mov.f64 	%fd191, %fd53;
	@%p61 bra 	$L__BB4_88;

	mul.wide.s32 	%rd46, %r20, 16;
	add.s64 	%rd47, %rd62, %rd46;
	ld.global.nc.v2.f64 	{%fd104, %fd105}, [%rd47+-16];
	ld.global.nc.v2.f64 	{%fd108, %fd109}, [%rd47];
	ld.global.nc.v2.f64 	{%fd112, %fd113}, [%rd47+16];
	ld.global.nc.v2.f64 	{%fd116, %fd117}, [%rd47+32];
	fma.rn.f64 	%fd120, %fd187, 0d4000000000000000, 0dBFF0000000000000;
	mov.f64 	%fd121, 0d3FF0000000000000;
	fma.rn.f64 	%fd122, %fd187, %fd120, 0dBFF0000000000000;
	fma.rn.f64 	%fd123, %fd187, %fd122, 0d0000000000000000;
	fma.rn.f64 	%fd124, %fd187, 0dC014000000000000, 0d4008000000000000;
	fma.rn.f64 	%fd125, %fd187, %fd124, 0d0000000000000000;
	fma.rn.f64 	%fd126, %fd187, %fd125, 0d4000000000000000;
	fma.rn.f64 	%fd127, %fd187, 0d4010000000000000, 0dC008000000000000;
	fma.rn.f64 	%fd128, %fd187, %fd127, 0d3FF0000000000000;
	fma.rn.f64 	%fd129, %fd187, %fd128, 0d0000000000000000;
	sub.f64 	%fd130, %fd121, %fd187;
	fma.rn.f64 	%fd131, %fd187, %fd130, 0d0000000000000000;
	fma.rn.f64 	%fd132, %fd187, %fd131, 0d0000000000000000;
	mul.f64 	%fd133, %fd126, %fd108;
	mul.f64 	%fd134, %fd126, %fd109;
	fma.rn.f64 	%fd135, %fd123, %fd104, %fd133;
	fma.rn.f64 	%fd136, %fd123, %fd105, %fd134;
	fma.rn.f64 	%fd137, %fd129, %fd112, %fd135;
	fma.rn.f64 	%fd138, %fd129, %fd113, %fd136;
	fma.rn.f64 	%fd139, %fd132, %fd116, %fd137;
	fma.rn.f64 	%fd140, %fd132, %fd117, %fd138;
	mul.f64 	%fd191, %fd140, 0d3FE0000000000000;
	mul.f64 	%fd190, %fd139, 0d3FE0000000000000;

$L__BB4_88:
	ld.const.u64 	%rd59, [QUPS_M];
	mul.lo.s64 	%rd53, %rd64, %rd59;
	add.s64 	%rd54, %rd53, %rd60;
	mul.lo.s64 	%rd55, %rd15, %rd54;
	add.s64 	%rd56, %rd55, %rd14;
	shl.b64 	%rd57, %rd56, 4;
	add.s64 	%rd58, %rd18, %rd57;
	st.global.v2.f64 	[%rd58], {%fd190, %fd191};
	add.s64 	%rd64, %rd64, 1;
	add.s64 	%rd62, %rd62, %rd17;
	add.s64 	%rd63, %rd63, -1;
	setp.ne.s64 	%p70, %rd63, 0;
	@%p70 bra 	$L__BB4_5;

$L__BB4_89:
	ret;

}
	// .globl	_Z9wsinterpdP7double2PKS_S2_PKdPKmS6_S6_i
.visible .entry _Z9wsinterpdP7double2PKS_S2_PKdPKmS6_S6_i(
	.param .u64 _Z9wsinterpdP7double2PKS_S2_PKdPKmS6_S6_i_param_0,
	.param .u64 _Z9wsinterpdP7double2PKS_S2_PKdPKmS6_S6_i_param_1,
	.param .u64 _Z9wsinterpdP7double2PKS_S2_PKdPKmS6_S6_i_param_2,
	.param .u64 _Z9wsinterpdP7double2PKS_S2_PKdPKmS6_S6_i_param_3,
	.param .u64 _Z9wsinterpdP7double2PKS_S2_PKdPKmS6_S6_i_param_4,
	.param .u64 _Z9wsinterpdP7double2PKS_S2_PKdPKmS6_S6_i_param_5,
	.param .u64 _Z9wsinterpdP7double2PKS_S2_PKdPKmS6_S6_i_param_6,
	.param .u32 _Z9wsinterpdP7double2PKS_S2_PKdPKmS6_S6_i_param_7
)
{
	.reg .pred 	%p<81>;
	.reg .f32 	%f<303>;
	.reg .b32 	%r<91>;
	.reg .f64 	%fd<206>;
	.reg .b64 	%rd<161>;


	ld.param.u64 	%rd60, [_Z9wsinterpdP7double2PKS_S2_PKdPKmS6_S6_i_param_0];
	ld.param.u64 	%rd61, [_Z9wsinterpdP7double2PKS_S2_PKdPKmS6_S6_i_param_1];
	ld.param.u64 	%rd65, [_Z9wsinterpdP7double2PKS_S2_PKdPKmS6_S6_i_param_2];
	ld.param.u64 	%rd62, [_Z9wsinterpdP7double2PKS_S2_PKdPKmS6_S6_i_param_3];
	ld.param.u64 	%rd66, [_Z9wsinterpdP7double2PKS_S2_PKdPKmS6_S6_i_param_4];
	ld.param.u64 	%rd63, [_Z9wsinterpdP7double2PKS_S2_PKdPKmS6_S6_i_param_5];
	ld.param.u64 	%rd64, [_Z9wsinterpdP7double2PKS_S2_PKdPKmS6_S6_i_param_6];
	ld.param.u32 	%r24, [_Z9wsinterpdP7double2PKS_S2_PKdPKmS6_S6_i_param_7];
	cvta.to.global.u64 	%rd1, %rd66;
	cvta.to.global.u64 	%rd2, %rd65;
	mov.u32 	%r25, %ntid.x;
	mov.u32 	%r26, %ctaid.x;
	mov.u32 	%r27, %tid.x;
	mad.lo.s32 	%r28, %r26, %r25, %r27;
	cvt.u64.u32 	%rd3, %r28;
	mov.u32 	%r29, %ntid.y;
	mov.u32 	%r30, %ctaid.y;
	mov.u32 	%r31, %tid.y;
	mad.lo.s32 	%r32, %r30, %r29, %r31;
	cvt.u64.u32 	%rd4, %r32;
	ld.const.u64 	%rd5, [QUPS_M];
	ld.const.u64 	%rd6, [QUPS_N];
	ld.const.u64 	%rd7, [QUPS_T];
	ld.const.u64 	%rd8, [QUPS_F];
	ld.const.u64 	%rd9, [QUPS_S];
	ld.const.u64 	%rd10, [QUPS_I];
	and.b64  	%rd67, %rd10, -4294967296;
	setp.eq.s64 	%p1, %rd67, 0;
	@%p1 bra 	$L__BB5_2;

	div.u64 	%rd146, %rd3, %rd10;
	mul.lo.s64 	%rd68, %rd146, %rd10;
	sub.s64 	%rd147, %rd3, %rd68;
	bra.uni 	$L__BB5_3;

$L__BB5_2:
	cvt.u32.u64 	%r33, %rd10;
	cvt.u32.u64 	%r34, %rd3;
	div.u32 	%r35, %r34, %r33;
	mul.lo.s32 	%r36, %r35, %r33;
	sub.s32 	%r37, %r34, %r36;
	cvt.u64.u32 	%rd146, %r35;
	cvt.u64.u32 	%rd147, %r37;

$L__BB5_3:
	setp.ge.u64 	%p2, %rd146, %rd5;
	setp.le.u64 	%p3, %rd6, %rd4;
	or.pred  	%p4, %p2, %p3;
	setp.eq.s64 	%p5, %rd8, 0;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB5_105;

	cvta.to.global.u64 	%rd17, %rd60;
	cvta.to.global.u64 	%rd70, %rd62;
	mul.lo.s64 	%rd71, %rd10, %rd4;
	add.s64 	%rd18, %rd147, %rd71;
	mul.lo.s64 	%rd19, %rd146, %rd6;
	mul.lo.s64 	%rd72, %rd19, %rd10;
	add.s64 	%rd73, %rd72, %rd18;
	shl.b64 	%rd74, %rd73, 3;
	add.s64 	%rd75, %rd70, %rd74;
	ld.global.nc.f64 	%fd1, [%rd75];
	cvt.rn.ftz.f32.f64 	%f1, %fd1;
	mov.b32 	%r38, %f1;
	and.b32  	%r39, %r38, -2147483648;
	or.b32  	%r40, %r39, 1056964608;
	mov.b32 	%f2, %r40;
	add.f64 	%fd2, %fd1, %fd1;
	cvta.to.global.u64 	%rd20, %rd64;
	cvta.to.global.u64 	%rd21, %rd63;
	cvta.to.global.u64 	%rd22, %rd61;
	mov.u64 	%rd148, 0;
	setp.eq.s64 	%p7, %rd9, 0;
	mov.f64 	%fd55, 0d0000000000000000;
	setp.gt.s32 	%p17, %r24, 1;
	setp.eq.s32 	%p20, %r24, 0;
	add.rz.ftz.f32 	%f251, %f1, %f2;
	cvt.rzi.f32.f32 	%f252, %f251;
	cvt.rzi.ftz.s32.f32 	%r23, %f252;
	setp.lt.s32 	%p78, %r23, 0;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r21}, %fd1;
	}
	and.b32  	%r79, %r21, 2146435072;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r84, %temp}, %fd1;
	}
	mov.f32 	%f213, 0f3F000000;
	mov.f32 	%f216, 0f40490FDA;

$L__BB5_5:
	mov.u64 	%rd149, 0;
	ld.const.u64 	%rd143, [QUPS_N];
	ld.const.u64 	%rd142, [QUPS_M];
	ld.const.u64 	%rd141, [QUPS_I];
	mul.lo.s64 	%rd24, %rd148, %rd143;
	mul.lo.s64 	%rd81, %rd24, %rd142;
	add.s64 	%rd82, %rd81, %rd19;
	mul.lo.s64 	%rd83, %rd82, %rd141;
	add.s64 	%rd25, %rd83, %rd18;
	mov.u64 	%rd150, %rd149;
	mov.u64 	%rd151, %rd149;
	@%p7 bra 	$L__BB5_21;

$L__BB5_6:
	setp.eq.s64 	%p8, %rd149, 0;
	mov.u64 	%rd158, 1;
	@%p8 bra 	$L__BB5_14;

	add.s64 	%rd88, %rd149, -1;
	and.b64  	%rd29, %rd149, 3;
	setp.lt.u64 	%p9, %rd88, 3;
	mov.u64 	%rd158, 1;
	mov.u64 	%rd156, 0;
	@%p9 bra 	$L__BB5_10;

	sub.s64 	%rd30, %rd29, %rd149;
	mov.u64 	%rd152, %rd1;

$L__BB5_9:
	ld.global.u64 	%rd91, [%rd152];
	mul.lo.s64 	%rd92, %rd91, %rd158;
	ld.global.u64 	%rd93, [%rd152+8];
	mul.lo.s64 	%rd94, %rd93, %rd92;
	ld.global.u64 	%rd95, [%rd152+16];
	mul.lo.s64 	%rd96, %rd95, %rd94;
	ld.global.u64 	%rd97, [%rd152+24];
	mul.lo.s64 	%rd158, %rd97, %rd96;
	add.s64 	%rd152, %rd152, 32;
	add.s64 	%rd156, %rd156, 4;
	add.s64 	%rd98, %rd30, %rd156;
	setp.ne.s64 	%p10, %rd98, 0;
	@%p10 bra 	$L__BB5_9;

$L__BB5_10:
	setp.eq.s64 	%p11, %rd29, 0;
	@%p11 bra 	$L__BB5_14;

	shl.b64 	%rd99, %rd156, 3;
	add.s64 	%rd40, %rd1, %rd99;
	ld.global.u64 	%rd100, [%rd40];
	mul.lo.s64 	%rd158, %rd100, %rd158;
	setp.eq.s64 	%p12, %rd29, 1;
	@%p12 bra 	$L__BB5_14;

	ld.global.u64 	%rd101, [%rd40+8];
	mul.lo.s64 	%rd158, %rd101, %rd158;
	setp.eq.s64 	%p13, %rd29, 2;
	@%p13 bra 	$L__BB5_14;

	ld.global.u64 	%rd102, [%rd40+16];
	mul.lo.s64 	%rd158, %rd102, %rd158;

$L__BB5_14:
	or.b64  	%rd103, %rd25, %rd158;
	and.b64  	%rd104, %rd103, -4294967296;
	setp.eq.s64 	%p14, %rd104, 0;
	@%p14 bra 	$L__BB5_16;

	div.u64 	%rd159, %rd25, %rd158;
	bra.uni 	$L__BB5_17;

$L__BB5_16:
	cvt.u32.u64 	%r41, %rd158;
	cvt.u32.u64 	%r42, %rd25;
	div.u32 	%r43, %r42, %r41;
	cvt.u64.u32 	%rd159, %r43;

$L__BB5_17:
	shl.b64 	%rd105, %rd149, 3;
	add.s64 	%rd106, %rd1, %rd105;
	ld.global.u64 	%rd48, [%rd106];
	or.b64  	%rd107, %rd159, %rd48;
	and.b64  	%rd108, %rd107, -4294967296;
	setp.eq.s64 	%p15, %rd108, 0;
	@%p15 bra 	$L__BB5_19;

	rem.u64 	%rd160, %rd159, %rd48;
	bra.uni 	$L__BB5_20;

$L__BB5_19:
	cvt.u32.u64 	%r44, %rd48;
	cvt.u32.u64 	%r45, %rd159;
	rem.u32 	%r46, %r45, %r44;
	cvt.u64.u32 	%rd160, %r46;

$L__BB5_20:
	ld.const.u64 	%rd145, [QUPS_S];
	add.s64 	%rd110, %rd21, %rd105;
	ld.global.u64 	%rd111, [%rd110];
	mul.lo.s64 	%rd112, %rd111, %rd160;
	add.s64 	%rd151, %rd112, %rd151;
	add.s64 	%rd113, %rd20, %rd105;
	ld.global.u64 	%rd114, [%rd113];
	mul.lo.s64 	%rd115, %rd114, %rd160;
	add.s64 	%rd150, %rd115, %rd150;
	add.s64 	%rd149, %rd149, 1;
	setp.lt.u64 	%p16, %rd149, %rd145;
	@%p16 bra 	$L__BB5_6;

$L__BB5_21:
	shl.b64 	%rd116, %rd151, 4;
	add.s64 	%rd117, %rd22, %rd116;
	ld.global.nc.v2.f64 	{%fd56, %fd57}, [%rd117];
	add.s64 	%rd118, %rd24, %rd4;
	mul.lo.s64 	%rd57, %rd118, %rd7;
	@%p17 bra 	$L__BB5_24;

	@%p20 bra 	$L__BB5_101;

	setp.eq.s32 	%p21, %r24, 1;
	mov.f64 	%fd204, %fd55;
	mov.f64 	%fd205, %fd55;
	@%p21 bra 	$L__BB5_94;
	bra.uni 	$L__BB5_104;

$L__BB5_94:
	setp.eq.s32 	%p72, %r79, 2146435072;
	@%p72 bra 	$L__BB5_96;
	bra.uni 	$L__BB5_95;

$L__BB5_96:
	and.b32  	%r85, %r21, 2147483647;
	setp.ne.s32 	%p73, %r85, 2146435072;
	setp.ne.s32 	%p74, %r84, 0;
	or.pred  	%p75, %p73, %p74;
	mov.f64 	%fd202, %fd2;
	mov.f64 	%fd203, %fd2;
	@%p75 bra 	$L__BB5_98;

	mov.f64 	%fd146, 0d0000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r86, %temp}, %fd146;
	}
	and.b32  	%r87, %r21, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r88}, %fd146;
	}
	or.b32  	%r89, %r88, %r87;
	mov.b64 	%fd203, {%r86, %r89};
	mov.f64 	%fd202, %fd1;
	bra.uni 	$L__BB5_98;

$L__BB5_24:
	setp.eq.s32 	%p18, %r24, 2;
	@%p18 bra 	$L__BB5_88;

	setp.ne.s32 	%p19, %r24, 3;
	mov.f64 	%fd204, %fd55;
	mov.f64 	%fd205, %fd55;
	@%p19 bra 	$L__BB5_104;

	setp.eq.s32 	%p22, %r79, 2146435072;
	@%p22 bra 	$L__BB5_28;
	bra.uni 	$L__BB5_27;

$L__BB5_28:
	and.b32  	%r53, %r21, 2147483647;
	setp.ne.s32 	%p23, %r53, 2146435072;
	setp.ne.s32 	%p24, %r84, 0;
	or.pred  	%p25, %p23, %p24;
	mov.f64 	%fd194, %fd2;
	mov.f64 	%fd195, %fd2;
	@%p25 bra 	$L__BB5_30;

	mov.f64 	%fd59, 0d0000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r54, %temp}, %fd59;
	}
	and.b32  	%r55, %r21, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r56}, %fd59;
	}
	or.b32  	%r57, %r56, %r55;
	mov.b64 	%fd195, {%r54, %r57};
	mov.f64 	%fd194, %fd1;
	bra.uni 	$L__BB5_30;

$L__BB5_101:
	mov.f64 	%fd204, %fd55;
	mov.f64 	%fd205, %fd55;
	@%p78 bra 	$L__BB5_104;

	cvt.s64.s32 	%rd58, %r23;
	setp.le.u64 	%p79, %rd7, %rd58;
	mov.f64 	%fd204, %fd55;
	mov.f64 	%fd205, %fd55;
	@%p79 bra 	$L__BB5_104;

	add.s64 	%rd134, %rd57, %rd58;
	shl.b64 	%rd135, %rd134, 4;
	add.s64 	%rd136, %rd2, %rd135;
	ld.global.nc.v2.f64 	{%fd204, %fd205}, [%rd136];
	bra.uni 	$L__BB5_104;

$L__BB5_88:
	setp.eq.s32 	%p65, %r79, 2146435072;
	@%p65 bra 	$L__BB5_90;
	bra.uni 	$L__BB5_89;

$L__BB5_90:
	and.b32  	%r73, %r21, 2147483647;
	setp.ne.s32 	%p66, %r73, 2146435072;
	setp.ne.s32 	%p67, %r84, 0;
	or.pred  	%p68, %p66, %p67;
	mov.f64 	%fd200, %fd2;
	mov.f64 	%fd201, %fd2;
	@%p68 bra 	$L__BB5_92;

	mov.f64 	%fd105, 0d0000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r74, %temp}, %fd105;
	}
	and.b32  	%r75, %r21, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r76}, %fd105;
	}
	or.b32  	%r77, %r76, %r75;
	mov.b64 	%fd201, {%r74, %r77};
	mov.f64 	%fd200, %fd1;
	bra.uni 	$L__BB5_92;

$L__BB5_95:
	cvt.rzi.f64.f64 	%fd202, %fd1;
	sub.f64 	%fd145, %fd1, %fd202;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r80, %temp}, %fd145;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r81}, %fd145;
	}
	and.b32  	%r82, %r21, -2147483648;
	or.b32  	%r83, %r81, %r82;
	mov.b64 	%fd203, {%r80, %r83};

$L__BB5_98:
	cvt.rzi.s32.f64 	%r22, %fd202;
	setp.lt.s32 	%p76, %r22, 0;
	mov.f64 	%fd204, %fd55;
	mov.f64 	%fd205, %fd55;
	@%p76 bra 	$L__BB5_104;

	add.s32 	%r90, %r22, 1;
	cvt.s64.s32 	%rd129, %r90;
	setp.le.u64 	%p77, %rd7, %rd129;
	mov.f64 	%fd204, %fd55;
	mov.f64 	%fd205, %fd55;
	@%p77 bra 	$L__BB5_104;

	cvt.s64.s32 	%rd130, %r22;
	add.s64 	%rd131, %rd57, %rd130;
	shl.b64 	%rd132, %rd131, 4;
	add.s64 	%rd133, %rd2, %rd132;
	ld.global.nc.v2.f64 	{%fd151, %fd152}, [%rd133];
	ld.global.nc.v2.f64 	{%fd155, %fd156}, [%rd133+16];
	sub.f64 	%fd159, %fd155, %fd151;
	sub.f64 	%fd160, %fd156, %fd152;
	fma.rn.f64 	%fd205, %fd203, %fd160, %fd152;
	fma.rn.f64 	%fd204, %fd203, %fd159, %fd151;
	bra.uni 	$L__BB5_104;

$L__BB5_27:
	cvt.rzi.f64.f64 	%fd194, %fd1;
	sub.f64 	%fd58, %fd1, %fd194;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd58;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r49}, %fd58;
	}
	and.b32  	%r50, %r21, -2147483648;
	or.b32  	%r51, %r49, %r50;
	mov.b64 	%fd195, {%r48, %r51};

$L__BB5_30:
	cvt.rzi.s32.f64 	%r2, %fd194;
	setp.lt.s32 	%p26, %r2, 1;
	add.s32 	%r58, %r2, 2;
	cvt.s64.s32 	%rd119, %r58;
	setp.le.u64 	%p27, %rd7, %rd119;
	or.pred  	%p28, %p26, %p27;
	mov.f64 	%fd204, %fd55;
	mov.f64 	%fd205, %fd55;
	@%p28 bra 	$L__BB5_104;

	cvt.s64.s32 	%rd120, %r2;
	add.s64 	%rd121, %rd57, %rd120;
	shl.b64 	%rd122, %rd121, 4;
	add.s64 	%rd123, %rd2, %rd122;
	ld.global.nc.v2.f64 	{%fd63, %fd64}, [%rd123+-16];
	ld.global.nc.v2.f64 	{%fd65, %fd66}, [%rd123];
	ld.global.nc.v2.f64 	{%fd67, %fd68}, [%rd123+16];
	ld.global.nc.v2.f64 	{%fd69, %fd70}, [%rd123+32];
	add.f64 	%fd18, %fd195, 0d3FF0000000000000;
	mov.f64 	%fd196, 0d3FF0000000000000;
	setp.eq.f64 	%p29, %fd18, 0d0000000000000000;
	@%p29 bra 	$L__BB5_45;

	cvt.rn.ftz.f32.f64 	%f3, %fd18;
	add.ftz.f32 	%f84, %f3, %f3;
	cvt.rni.f32.f32 	%f85, %f84;
	cvt.rzi.ftz.s32.f32 	%r3, %f85;
	neg.ftz.f32 	%f86, %f85;
	fma.rn.ftz.f32 	%f88, %f86, %f213, %f3;
	mul.ftz.f32 	%f89, %f88, 0f34222169;
	fma.rn.ftz.f32 	%f91, %f88, %f216, %f89;
	mul.rn.ftz.f32 	%f4, %f91, %f91;
	and.b32  	%r4, %r3, 1;
	setp.eq.s32 	%p30, %r4, 0;
	selp.f32 	%f5, %f91, 0f3F800000, %p30;
	mov.f32 	%f279, 0fB94D4153;
	@%p30 bra 	$L__BB5_34;

	mov.f32 	%f92, 0fBAB607ED;
	mov.f32 	%f93, 0f37CBAC00;
	fma.rn.ftz.f32 	%f279, %f93, %f4, %f92;

$L__BB5_34:
	selp.f32 	%f94, 0f3C0885E4, 0f3D2AAABB, %p30;
	fma.rn.ftz.f32 	%f95, %f279, %f4, %f94;
	selp.f32 	%f96, 0fBE2AAAA8, 0fBEFFFFFF, %p30;
	fma.rn.ftz.f32 	%f97, %f95, %f4, %f96;
	mov.f32 	%f98, 0f00000000;
	fma.rn.ftz.f32 	%f99, %f4, %f5, %f98;
	fma.rn.ftz.f32 	%f281, %f97, %f99, %f5;
	and.b32  	%r59, %r3, 2;
	setp.eq.s32 	%p32, %r59, 0;
	@%p32 bra 	$L__BB5_36;

	mov.f32 	%f101, 0fBF800000;
	fma.rn.ftz.f32 	%f281, %f281, %f101, %f98;

$L__BB5_36:
	add.f64 	%fd180, %fd195, 0d3FF0000000000000;
	cvt.rn.ftz.f32.f64 	%f258, %fd180;
	cvt.rzi.f32.f32 	%f102, %f258;
	setp.neu.ftz.f32 	%p33, %f102, %f258;
	@%p33 bra 	$L__BB5_38;

	add.f64 	%fd183, %fd195, 0d3FF0000000000000;
	cvt.rn.ftz.f32.f64 	%f259, %fd183;
	mul.rn.ftz.f32 	%f281, %f259, %f98;

$L__BB5_38:
	add.f64 	%fd181, %fd195, 0d3FF0000000000000;
	cvt.ftz.f64.f32 	%fd71, %f281;
	add.f64 	%fd19, %fd71, %fd71;
	mul.f64 	%fd72, %fd181, 0d3FE0000000000000;
	cvt.rn.ftz.f32.f64 	%f13, %fd72;
	add.ftz.f32 	%f105, %f13, %f13;
	cvt.rni.f32.f32 	%f106, %f105;
	cvt.rzi.ftz.s32.f32 	%r5, %f106;
	neg.ftz.f32 	%f107, %f106;
	fma.rn.ftz.f32 	%f109, %f107, %f213, %f13;
	mul.ftz.f32 	%f110, %f109, 0f34222169;
	fma.rn.ftz.f32 	%f112, %f109, %f216, %f110;
	mul.rn.ftz.f32 	%f14, %f112, %f112;
	and.b32  	%r6, %r5, 1;
	setp.eq.s32 	%p34, %r6, 0;
	selp.f32 	%f15, %f112, 0f3F800000, %p34;
	mov.f32 	%f282, 0fB94D4153;
	@%p34 bra 	$L__BB5_40;

	mov.f32 	%f113, 0fBAB607ED;
	mov.f32 	%f114, 0f37CBAC00;
	fma.rn.ftz.f32 	%f282, %f114, %f14, %f113;

$L__BB5_40:
	mov.f32 	%f260, 0f00000000;
	selp.f32 	%f115, 0f3C0885E4, 0f3D2AAABB, %p34;
	fma.rn.ftz.f32 	%f116, %f282, %f14, %f115;
	selp.f32 	%f117, 0fBE2AAAA8, 0fBEFFFFFF, %p34;
	fma.rn.ftz.f32 	%f118, %f116, %f14, %f117;
	fma.rn.ftz.f32 	%f120, %f14, %f15, %f260;
	fma.rn.ftz.f32 	%f284, %f118, %f120, %f15;
	and.b32  	%r60, %r5, 2;
	setp.eq.s32 	%p36, %r60, 0;
	@%p36 bra 	$L__BB5_42;

	mov.f32 	%f261, 0f00000000;
	mov.f32 	%f122, 0fBF800000;
	fma.rn.ftz.f32 	%f284, %f284, %f122, %f261;

$L__BB5_42:
	cvt.rzi.f32.f32 	%f123, %f13;
	setp.neu.ftz.f32 	%p37, %f123, %f13;
	@%p37 bra 	$L__BB5_44;

	mov.f32 	%f262, 0f00000000;
	mul.rn.ftz.f32 	%f284, %f13, %f262;

$L__BB5_44:
	add.f64 	%fd182, %fd195, 0d3FF0000000000000;
	cvt.ftz.f64.f32 	%fd73, %f284;
	mul.f64 	%fd74, %fd19, %fd73;
	mul.f64 	%fd75, %fd182, 0d4023BD3CDC2CAB20;
	mul.f64 	%fd76, %fd182, %fd75;
	div.rn.f64 	%fd196, %fd74, %fd76;

$L__BB5_45:
	mov.f64 	%fd197, 0d3FF0000000000000;
	add.f64 	%fd22, %fd195, 0d0000000000000000;
	setp.eq.f64 	%p38, %fd22, 0d0000000000000000;
	@%p38 bra 	$L__BB5_59;

	cvt.rn.ftz.f32.f64 	%f23, %fd22;
	add.ftz.f32 	%f126, %f23, %f23;
	cvt.rni.f32.f32 	%f127, %f126;
	cvt.rzi.ftz.s32.f32 	%r7, %f127;
	neg.ftz.f32 	%f128, %f127;
	fma.rn.ftz.f32 	%f130, %f128, %f213, %f23;
	mul.ftz.f32 	%f131, %f130, 0f34222169;
	fma.rn.ftz.f32 	%f133, %f130, %f216, %f131;
	mul.rn.ftz.f32 	%f24, %f133, %f133;
	and.b32  	%r8, %r7, 1;
	setp.eq.s32 	%p39, %r8, 0;
	selp.f32 	%f25, %f133, 0f3F800000, %p39;
	mov.f32 	%f285, 0fB94D4153;
	@%p39 bra 	$L__BB5_48;

	mov.f32 	%f134, 0fBAB607ED;
	mov.f32 	%f135, 0f37CBAC00;
	fma.rn.ftz.f32 	%f285, %f135, %f24, %f134;

$L__BB5_48:
	selp.f32 	%f136, 0f3C0885E4, 0f3D2AAABB, %p39;
	fma.rn.ftz.f32 	%f137, %f285, %f24, %f136;
	selp.f32 	%f138, 0fBE2AAAA8, 0fBEFFFFFF, %p39;
	fma.rn.ftz.f32 	%f139, %f137, %f24, %f138;
	mov.f32 	%f140, 0f00000000;
	fma.rn.ftz.f32 	%f141, %f24, %f25, %f140;
	fma.rn.ftz.f32 	%f287, %f139, %f141, %f25;
	and.b32  	%r61, %r7, 2;
	setp.eq.s32 	%p41, %r61, 0;
	@%p41 bra 	$L__BB5_50;

	mov.f32 	%f265, 0f00000000;
	mov.f32 	%f143, 0fBF800000;
	fma.rn.ftz.f32 	%f287, %f287, %f143, %f265;

$L__BB5_50:
	add.f64 	%fd184, %fd195, 0d0000000000000000;
	cvt.rn.ftz.f32.f64 	%f263, %fd184;
	cvt.rzi.f32.f32 	%f144, %f263;
	setp.neu.ftz.f32 	%p42, %f144, %f263;
	@%p42 bra 	$L__BB5_52;

	mov.f32 	%f269, 0f00000000;
	add.f64 	%fd187, %fd195, 0d0000000000000000;
	cvt.rn.ftz.f32.f64 	%f264, %fd187;
	mul.rn.ftz.f32 	%f287, %f264, %f269;

$L__BB5_52:
	add.f64 	%fd185, %fd195, 0d0000000000000000;
	cvt.ftz.f64.f32 	%fd78, %f287;
	add.f64 	%fd23, %fd78, %fd78;
	mul.f64 	%fd79, %fd185, 0d3FE0000000000000;
	cvt.rn.ftz.f32.f64 	%f33, %fd79;
	add.ftz.f32 	%f147, %f33, %f33;
	cvt.rni.f32.f32 	%f148, %f147;
	cvt.rzi.ftz.s32.f32 	%r9, %f148;
	neg.ftz.f32 	%f149, %f148;
	fma.rn.ftz.f32 	%f151, %f149, %f213, %f33;
	mul.ftz.f32 	%f152, %f151, 0f34222169;
	fma.rn.ftz.f32 	%f154, %f151, %f216, %f152;
	mul.rn.ftz.f32 	%f34, %f154, %f154;
	and.b32  	%r10, %r9, 1;
	setp.eq.s32 	%p43, %r10, 0;
	selp.f32 	%f35, %f154, 0f3F800000, %p43;
	mov.f32 	%f288, 0fB94D4153;
	@%p43 bra 	$L__BB5_54;

	mov.f32 	%f155, 0fBAB607ED;
	mov.f32 	%f156, 0f37CBAC00;
	fma.rn.ftz.f32 	%f288, %f156, %f34, %f155;

$L__BB5_54:
	mov.f32 	%f266, 0f00000000;
	selp.f32 	%f157, 0f3C0885E4, 0f3D2AAABB, %p43;
	fma.rn.ftz.f32 	%f158, %f288, %f34, %f157;
	selp.f32 	%f159, 0fBE2AAAA8, 0fBEFFFFFF, %p43;
	fma.rn.ftz.f32 	%f160, %f158, %f34, %f159;
	fma.rn.ftz.f32 	%f162, %f34, %f35, %f266;
	fma.rn.ftz.f32 	%f290, %f160, %f162, %f35;
	and.b32  	%r62, %r9, 2;
	setp.eq.s32 	%p45, %r62, 0;
	@%p45 bra 	$L__BB5_56;

	mov.f32 	%f267, 0f00000000;
	mov.f32 	%f164, 0fBF800000;
	fma.rn.ftz.f32 	%f290, %f290, %f164, %f267;

$L__BB5_56:
	cvt.rzi.f32.f32 	%f165, %f33;
	setp.neu.ftz.f32 	%p46, %f165, %f33;
	@%p46 bra 	$L__BB5_58;

	mov.f32 	%f268, 0f00000000;
	mul.rn.ftz.f32 	%f290, %f33, %f268;

$L__BB5_58:
	add.f64 	%fd186, %fd195, 0d0000000000000000;
	cvt.ftz.f64.f32 	%fd80, %f290;
	mul.f64 	%fd81, %fd23, %fd80;
	mul.f64 	%fd82, %fd186, 0d4023BD3CDC2CAB20;
	mul.f64 	%fd83, %fd186, %fd82;
	div.rn.f64 	%fd197, %fd81, %fd83;

$L__BB5_59:
	mov.f64 	%fd198, 0d3FF0000000000000;
	add.f64 	%fd26, %fd195, 0dBFF0000000000000;
	setp.eq.f64 	%p47, %fd26, 0d0000000000000000;
	@%p47 bra 	$L__BB5_73;

	add.f64 	%fd178, %fd195, 0dBFF0000000000000;
	cvt.rn.ftz.f32.f64 	%f43, %fd178;
	add.ftz.f32 	%f168, %f43, %f43;
	cvt.rni.f32.f32 	%f169, %f168;
	cvt.rzi.ftz.s32.f32 	%r11, %f169;
	neg.ftz.f32 	%f170, %f169;
	fma.rn.ftz.f32 	%f172, %f170, %f213, %f43;
	mul.ftz.f32 	%f173, %f172, 0f34222169;
	fma.rn.ftz.f32 	%f175, %f172, %f216, %f173;
	mul.rn.ftz.f32 	%f44, %f175, %f175;
	and.b32  	%r12, %r11, 1;
	setp.eq.s32 	%p48, %r12, 0;
	selp.f32 	%f45, %f175, 0f3F800000, %p48;
	mov.f32 	%f291, 0fB94D4153;
	@%p48 bra 	$L__BB5_62;

	mov.f32 	%f176, 0fBAB607ED;
	mov.f32 	%f177, 0f37CBAC00;
	fma.rn.ftz.f32 	%f291, %f177, %f44, %f176;

$L__BB5_62:
	selp.f32 	%f178, 0f3C0885E4, 0f3D2AAABB, %p48;
	fma.rn.ftz.f32 	%f179, %f291, %f44, %f178;
	selp.f32 	%f180, 0fBE2AAAA8, 0fBEFFFFFF, %p48;
	fma.rn.ftz.f32 	%f181, %f179, %f44, %f180;
	mov.f32 	%f182, 0f00000000;
	fma.rn.ftz.f32 	%f183, %f44, %f45, %f182;
	fma.rn.ftz.f32 	%f293, %f181, %f183, %f45;
	and.b32  	%r63, %r11, 2;
	setp.eq.s32 	%p50, %r63, 0;
	@%p50 bra 	$L__BB5_64;

	mov.f32 	%f255, 0f00000000;
	mov.f32 	%f185, 0fBF800000;
	fma.rn.ftz.f32 	%f293, %f293, %f185, %f255;

$L__BB5_64:
	add.f64 	%fd188, %fd195, 0dBFF0000000000000;
	cvt.rn.ftz.f32.f64 	%f270, %fd188;
	cvt.rzi.f32.f32 	%f186, %f270;
	setp.neu.ftz.f32 	%p51, %f186, %f270;
	@%p51 bra 	$L__BB5_66;

	add.f64 	%fd189, %fd195, 0dBFF0000000000000;
	cvt.rn.ftz.f32.f64 	%f271, %fd189;
	mov.f32 	%f256, 0f00000000;
	mul.rn.ftz.f32 	%f293, %f271, %f256;

$L__BB5_66:
	add.f64 	%fd179, %fd195, 0dBFF0000000000000;
	cvt.ftz.f64.f32 	%fd85, %f293;
	add.f64 	%fd27, %fd85, %fd85;
	mul.f64 	%fd86, %fd179, 0d3FE0000000000000;
	cvt.rn.ftz.f32.f64 	%f53, %fd86;
	add.ftz.f32 	%f189, %f53, %f53;
	cvt.rni.f32.f32 	%f190, %f189;
	cvt.rzi.ftz.s32.f32 	%r13, %f190;
	neg.ftz.f32 	%f191, %f190;
	fma.rn.ftz.f32 	%f193, %f191, %f213, %f53;
	mul.ftz.f32 	%f194, %f193, 0f34222169;
	fma.rn.ftz.f32 	%f196, %f193, %f216, %f194;
	mul.rn.ftz.f32 	%f54, %f196, %f196;
	and.b32  	%r14, %r13, 1;
	setp.eq.s32 	%p52, %r14, 0;
	selp.f32 	%f55, %f196, 0f3F800000, %p52;
	mov.f32 	%f294, 0fB94D4153;
	@%p52 bra 	$L__BB5_68;

	mov.f32 	%f197, 0fBAB607ED;
	mov.f32 	%f198, 0f37CBAC00;
	fma.rn.ftz.f32 	%f294, %f198, %f54, %f197;

$L__BB5_68:
	mov.f32 	%f253, 0f00000000;
	selp.f32 	%f199, 0f3C0885E4, 0f3D2AAABB, %p52;
	fma.rn.ftz.f32 	%f200, %f294, %f54, %f199;
	selp.f32 	%f201, 0fBE2AAAA8, 0fBEFFFFFF, %p52;
	fma.rn.ftz.f32 	%f202, %f200, %f54, %f201;
	fma.rn.ftz.f32 	%f204, %f54, %f55, %f253;
	fma.rn.ftz.f32 	%f296, %f202, %f204, %f55;
	and.b32  	%r64, %r13, 2;
	setp.eq.s32 	%p54, %r64, 0;
	@%p54 bra 	$L__BB5_70;

	mov.f32 	%f254, 0f00000000;
	mov.f32 	%f206, 0fBF800000;
	fma.rn.ftz.f32 	%f296, %f296, %f206, %f254;

$L__BB5_70:
	cvt.rzi.f32.f32 	%f207, %f53;
	setp.neu.ftz.f32 	%p55, %f207, %f53;
	@%p55 bra 	$L__BB5_72;

	mov.f32 	%f257, 0f00000000;
	mul.rn.ftz.f32 	%f296, %f53, %f257;

$L__BB5_72:
	add.f64 	%fd174, %fd195, 0dBFF0000000000000;
	cvt.ftz.f64.f32 	%fd87, %f296;
	mul.f64 	%fd88, %fd27, %fd87;
	mul.f64 	%fd89, %fd174, 0d4023BD3CDC2CAB20;
	mul.f64 	%fd90, %fd174, %fd89;
	div.rn.f64 	%fd198, %fd88, %fd90;

$L__BB5_73:
	mov.f64 	%fd199, 0d3FF0000000000000;
	add.f64 	%fd30, %fd195, 0dC000000000000000;
	setp.eq.f64 	%p56, %fd30, 0d0000000000000000;
	@%p56 bra 	$L__BB5_87;

	cvt.rn.ftz.f32.f64 	%f63, %fd30;
	add.ftz.f32 	%f210, %f63, %f63;
	cvt.rni.f32.f32 	%f211, %f210;
	cvt.rzi.ftz.s32.f32 	%r15, %f211;
	neg.ftz.f32 	%f212, %f211;
	fma.rn.ftz.f32 	%f214, %f212, %f213, %f63;
	mul.ftz.f32 	%f215, %f214, 0f34222169;
	fma.rn.ftz.f32 	%f217, %f214, %f216, %f215;
	mul.rn.ftz.f32 	%f64, %f217, %f217;
	and.b32  	%r16, %r15, 1;
	setp.eq.s32 	%p57, %r16, 0;
	selp.f32 	%f65, %f217, 0f3F800000, %p57;
	mov.f32 	%f297, 0fB94D4153;
	@%p57 bra 	$L__BB5_76;

	mov.f32 	%f218, 0fBAB607ED;
	mov.f32 	%f219, 0f37CBAC00;
	fma.rn.ftz.f32 	%f297, %f219, %f64, %f218;

$L__BB5_76:
	selp.f32 	%f220, 0f3C0885E4, 0f3D2AAABB, %p57;
	fma.rn.ftz.f32 	%f221, %f297, %f64, %f220;
	selp.f32 	%f222, 0fBE2AAAA8, 0fBEFFFFFF, %p57;
	fma.rn.ftz.f32 	%f223, %f221, %f64, %f222;
	mov.f32 	%f224, 0f00000000;
	fma.rn.ftz.f32 	%f225, %f64, %f65, %f224;
	fma.rn.ftz.f32 	%f299, %f223, %f225, %f65;
	and.b32  	%r65, %r15, 2;
	setp.eq.s32 	%p59, %r65, 0;
	@%p59 bra 	$L__BB5_78;

	mov.f32 	%f274, 0f00000000;
	mov.f32 	%f227, 0fBF800000;
	fma.rn.ftz.f32 	%f299, %f299, %f227, %f274;

$L__BB5_78:
	add.f64 	%fd190, %fd195, 0dC000000000000000;
	cvt.rn.ftz.f32.f64 	%f272, %fd190;
	cvt.rzi.f32.f32 	%f228, %f272;
	setp.neu.ftz.f32 	%p60, %f228, %f272;
	@%p60 bra 	$L__BB5_80;

	mov.f32 	%f278, 0f00000000;
	add.f64 	%fd193, %fd195, 0dC000000000000000;
	cvt.rn.ftz.f32.f64 	%f273, %fd193;
	mul.rn.ftz.f32 	%f299, %f273, %f278;

$L__BB5_80:
	add.f64 	%fd191, %fd195, 0dC000000000000000;
	cvt.ftz.f64.f32 	%fd92, %f299;
	add.f64 	%fd31, %fd92, %fd92;
	mul.f64 	%fd93, %fd191, 0d3FE0000000000000;
	cvt.rn.ftz.f32.f64 	%f73, %fd93;
	add.ftz.f32 	%f231, %f73, %f73;
	cvt.rni.f32.f32 	%f232, %f231;
	cvt.rzi.ftz.s32.f32 	%r17, %f232;
	neg.ftz.f32 	%f233, %f232;
	fma.rn.ftz.f32 	%f235, %f233, %f213, %f73;
	mul.ftz.f32 	%f236, %f235, 0f34222169;
	fma.rn.ftz.f32 	%f238, %f235, %f216, %f236;
	mul.rn.ftz.f32 	%f74, %f238, %f238;
	and.b32  	%r18, %r17, 1;
	setp.eq.s32 	%p61, %r18, 0;
	selp.f32 	%f75, %f238, 0f3F800000, %p61;
	mov.f32 	%f300, 0fB94D4153;
	@%p61 bra 	$L__BB5_82;

	mov.f32 	%f239, 0fBAB607ED;
	mov.f32 	%f240, 0f37CBAC00;
	fma.rn.ftz.f32 	%f300, %f240, %f74, %f239;

$L__BB5_82:
	mov.f32 	%f275, 0f00000000;
	selp.f32 	%f241, 0f3C0885E4, 0f3D2AAABB, %p61;
	fma.rn.ftz.f32 	%f242, %f300, %f74, %f241;
	selp.f32 	%f243, 0fBE2AAAA8, 0fBEFFFFFF, %p61;
	fma.rn.ftz.f32 	%f244, %f242, %f74, %f243;
	fma.rn.ftz.f32 	%f246, %f74, %f75, %f275;
	fma.rn.ftz.f32 	%f302, %f244, %f246, %f75;
	and.b32  	%r66, %r17, 2;
	setp.eq.s32 	%p63, %r66, 0;
	@%p63 bra 	$L__BB5_84;

	mov.f32 	%f276, 0f00000000;
	mov.f32 	%f248, 0fBF800000;
	fma.rn.ftz.f32 	%f302, %f302, %f248, %f276;

$L__BB5_84:
	cvt.rzi.f32.f32 	%f249, %f73;
	setp.neu.ftz.f32 	%p64, %f249, %f73;
	@%p64 bra 	$L__BB5_86;

	mov.f32 	%f277, 0f00000000;
	mul.rn.ftz.f32 	%f302, %f73, %f277;

$L__BB5_86:
	add.f64 	%fd192, %fd195, 0dC000000000000000;
	cvt.ftz.f64.f32 	%fd94, %f302;
	mul.f64 	%fd95, %fd31, %fd94;
	mul.f64 	%fd96, %fd192, 0d4023BD3CDC2CAB20;
	mul.f64 	%fd97, %fd192, %fd96;
	div.rn.f64 	%fd199, %fd95, %fd97;

$L__BB5_87:
	mul.f64 	%fd98, %fd65, %fd197;
	fma.rn.f64 	%fd99, %fd63, %fd196, %fd98;
	mul.f64 	%fd100, %fd66, %fd197;
	fma.rn.f64 	%fd101, %fd64, %fd196, %fd100;
	fma.rn.f64 	%fd102, %fd67, %fd198, %fd99;
	fma.rn.f64 	%fd103, %fd68, %fd198, %fd101;
	fma.rn.f64 	%fd204, %fd69, %fd199, %fd102;
	fma.rn.f64 	%fd205, %fd70, %fd199, %fd103;
	bra.uni 	$L__BB5_104;

$L__BB5_89:
	cvt.rzi.f64.f64 	%fd200, %fd1;
	sub.f64 	%fd104, %fd1, %fd200;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r68, %temp}, %fd104;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r69}, %fd104;
	}
	and.b32  	%r70, %r21, -2147483648;
	or.b32  	%r71, %r69, %r70;
	mov.b64 	%fd201, {%r68, %r71};

$L__BB5_92:
	cvt.rzi.s32.f64 	%r20, %fd200;
	setp.lt.s32 	%p69, %r20, 1;
	add.s32 	%r78, %r20, 2;
	cvt.s64.s32 	%rd124, %r78;
	setp.le.u64 	%p70, %rd7, %rd124;
	or.pred  	%p71, %p69, %p70;
	mov.f64 	%fd204, %fd55;
	mov.f64 	%fd205, %fd55;
	@%p71 bra 	$L__BB5_104;

	cvt.s64.s32 	%rd125, %r20;
	add.s64 	%rd126, %rd57, %rd125;
	shl.b64 	%rd127, %rd126, 4;
	add.s64 	%rd128, %rd2, %rd127;
	ld.global.nc.v2.f64 	{%fd108, %fd109}, [%rd128+-16];
	ld.global.nc.v2.f64 	{%fd112, %fd113}, [%rd128];
	ld.global.nc.v2.f64 	{%fd116, %fd117}, [%rd128+16];
	ld.global.nc.v2.f64 	{%fd120, %fd121}, [%rd128+32];
	fma.rn.f64 	%fd124, %fd201, 0d4000000000000000, 0dBFF0000000000000;
	mov.f64 	%fd125, 0d3FF0000000000000;
	fma.rn.f64 	%fd126, %fd201, %fd124, 0dBFF0000000000000;
	fma.rn.f64 	%fd127, %fd201, %fd126, 0d0000000000000000;
	fma.rn.f64 	%fd128, %fd201, 0dC014000000000000, 0d4008000000000000;
	fma.rn.f64 	%fd129, %fd201, %fd128, 0d0000000000000000;
	fma.rn.f64 	%fd130, %fd201, %fd129, 0d4000000000000000;
	fma.rn.f64 	%fd131, %fd201, 0d4010000000000000, 0dC008000000000000;
	fma.rn.f64 	%fd132, %fd201, %fd131, 0d3FF0000000000000;
	fma.rn.f64 	%fd133, %fd201, %fd132, 0d0000000000000000;
	sub.f64 	%fd134, %fd125, %fd201;
	fma.rn.f64 	%fd135, %fd201, %fd134, 0d0000000000000000;
	fma.rn.f64 	%fd136, %fd201, %fd135, 0d0000000000000000;
	mul.f64 	%fd137, %fd130, %fd112;
	mul.f64 	%fd138, %fd130, %fd113;
	fma.rn.f64 	%fd139, %fd127, %fd108, %fd137;
	fma.rn.f64 	%fd140, %fd127, %fd109, %fd138;
	fma.rn.f64 	%fd141, %fd133, %fd116, %fd139;
	fma.rn.f64 	%fd142, %fd133, %fd117, %fd140;
	fma.rn.f64 	%fd143, %fd136, %fd120, %fd141;
	fma.rn.f64 	%fd144, %fd136, %fd121, %fd142;
	mul.f64 	%fd205, %fd144, 0d3FE0000000000000;
	mul.f64 	%fd204, %fd143, 0d3FE0000000000000;

$L__BB5_104:
	ld.const.u64 	%rd140, [QUPS_F];
	mul.f64 	%fd167, %fd56, %fd204;
	mul.f64 	%fd168, %fd57, %fd205;
	sub.f64 	%fd169, %fd167, %fd168;
	mul.f64 	%fd170, %fd57, %fd204;
	fma.rn.f64 	%fd171, %fd56, %fd205, %fd170;
	shl.b64 	%rd137, %rd150, 4;
	add.s64 	%rd138, %rd17, %rd137;
	atom.global.add.f64 	%fd172, [%rd138], %fd169;
	add.s64 	%rd139, %rd138, 8;
	atom.global.add.f64 	%fd173, [%rd139], %fd171;
	add.s64 	%rd148, %rd148, 1;
	setp.lt.u64 	%p80, %rd148, %rd140;
	@%p80 bra 	$L__BB5_5;

$L__BB5_105:
	ret;

}
	// .globl	_Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii
.visible .entry _Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii(
	.param .u64 _Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_0,
	.param .u64 _Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_1,
	.param .u64 _Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_2,
	.param .u64 _Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_3,
	.param .u64 _Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_4,
	.param .u64 _Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_5,
	.param .f32 _Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_6,
	.param .f32 _Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_7,
	.param .f32 _Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_8,
	.param .f32 _Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_9,
	.param .u64 _Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_10,
	.param .u32 _Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_11
)
{
	.reg .pred 	%p<70>;
	.reg .f32 	%f<607>;
	.reg .b32 	%r<82>;
	.reg .b64 	%rd<87>;


	ld.param.u64 	%rd32, [_Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_3];
	ld.param.u64 	%rd33, [_Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_4];
	ld.param.u64 	%rd35, [_Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_5];
	ld.param.u64 	%rd34, [_Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_10];
	ld.param.u32 	%r22, [_Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_11];
	cvta.to.global.u64 	%rd1, %rd35;
	mov.u32 	%r23, %ntid.x;
	mov.u32 	%r24, %ctaid.x;
	mov.u32 	%r25, %tid.x;
	mad.lo.s32 	%r26, %r24, %r23, %r25;
	cvt.u64.u32 	%rd2, %r26;
	mov.u32 	%r27, %ntid.y;
	mov.u32 	%r28, %ctaid.y;
	mov.u32 	%r29, %tid.y;
	mad.lo.s32 	%r30, %r28, %r27, %r29;
	cvt.u64.u32 	%rd3, %r30;
	mov.u32 	%r31, %ntid.z;
	mov.u32 	%r32, %ctaid.z;
	mov.u32 	%r33, %tid.z;
	mad.lo.s32 	%r34, %r32, %r31, %r33;
	cvt.u64.u32 	%rd4, %r34;
	ld.const.u64 	%rd5, [QUPS_N];
	ld.const.u64 	%rd6, [QUPS_I];
	ld.const.u64 	%rd7, [QUPS_S];
	setp.le.u64 	%p1, %rd7, %rd2;
	@%p1 bra 	$L__BB6_106;

	setp.eq.s64 	%p2, %rd6, 0;
	mov.f32 	%f601, 0f00000000;
	mov.f32 	%f602, %f601;
	@%p2 bra 	$L__BB6_105;

	mov.u64 	%rd83, 0;
	cvta.to.global.u64 	%rd9, %rd34;
	ld.const.u64 	%rd10, [QUPS_T];
	ld.global.nc.u32 	%r35, [%rd9+4];
	cvt.s64.s32 	%rd11, %r35;
	cvta.to.global.u64 	%rd37, %rd32;
	mul.lo.s64 	%rd38, %rd3, 12;
	add.s64 	%rd39, %rd37, %rd38;
	add.s64 	%rd12, %rd39, 8;
	mul.lo.s64 	%rd13, %rd5, 12;
	cvta.to.global.u64 	%rd15, %rd33;
	cvt.u32.u64 	%r36, %rd11;
	setp.eq.s32 	%p3, %r36, 0;
	setp.gt.s32 	%p5, %r22, 1;
	setp.eq.s32 	%p9, %r22, 0;
	setp.eq.s32 	%p10, %r22, 1;

$L__BB6_3:
	@%p3 bra 	$L__BB6_104;

	ld.global.nc.u32 	%r37, [%rd9];
	cvt.s64.s32 	%rd20, %r37;
	mov.u64 	%rd84, 0;

$L__BB6_5:
	cvt.u32.u64 	%r38, %rd20;
	setp.eq.s32 	%p4, %r38, 0;
	@%p4 bra 	$L__BB6_103;

	ld.param.u64 	%rd82, [_Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_2];
	shl.b64 	%rd81, %rd83, 2;
	cvta.to.global.u64 	%rd80, %rd82;
	add.s64 	%rd79, %rd80, %rd81;
	ld.param.u64 	%rd78, [_Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_1];
	mul.lo.s64 	%rd77, %rd83, 12;
	cvta.to.global.u64 	%rd76, %rd78;
	add.s64 	%rd75, %rd76, %rd77;
	ld.const.u64 	%rd74, [QUPS_M];
	mul.lo.s64 	%rd44, %rd84, %rd74;
	add.s64 	%rd45, %rd44, %rd4;
	mul.lo.s64 	%rd46, %rd45, 12;
	add.s64 	%rd47, %rd15, %rd46;
	ld.global.nc.f32 	%f170, [%rd47];
	ld.global.nc.f32 	%f5, [%rd75];
	sub.ftz.f32 	%f171, %f5, %f170;
	ld.global.nc.f32 	%f172, [%rd47+4];
	ld.global.nc.f32 	%f6, [%rd75+4];
	sub.ftz.f32 	%f173, %f6, %f172;
	ld.global.nc.f32 	%f174, [%rd47+8];
	ld.global.nc.f32 	%f7, [%rd75+8];
	sub.ftz.f32 	%f175, %f7, %f174;
	mul.ftz.f32 	%f176, %f173, %f173;
	fma.rn.ftz.f32 	%f177, %f171, %f171, %f176;
	fma.rn.ftz.f32 	%f178, %f175, %f175, %f177;
	sqrt.approx.ftz.f32 	%f8, %f178;
	ld.global.nc.f32 	%f10, [%rd79];
	mov.u64 	%rd86, 0;
	mov.u64 	%rd85, %rd12;

$L__BB6_7:
	cvt.rn.f32.u64 	%f490, %rd2;
	ld.param.f32 	%f489, [_Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_8];
	ld.param.f32 	%f488, [_Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_7];
	ld.param.f32 	%f487, [_Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_6];
	ld.param.f32 	%f486, [_Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_9];
	ld.global.nc.f32 	%f181, [%rd85+-8];
	sub.ftz.f32 	%f182, %f5, %f181;
	ld.global.nc.f32 	%f183, [%rd85+-4];
	sub.ftz.f32 	%f184, %f6, %f183;
	ld.global.nc.f32 	%f185, [%rd85];
	sub.ftz.f32 	%f186, %f7, %f185;
	mul.ftz.f32 	%f187, %f184, %f184;
	fma.rn.ftz.f32 	%f188, %f182, %f182, %f187;
	fma.rn.ftz.f32 	%f189, %f186, %f186, %f188;
	sqrt.approx.ftz.f32 	%f190, %f189;
	add.ftz.f32 	%f191, %f190, %f8;
	mul.ftz.f32 	%f192, %f191, %f486;
	sub.ftz.f32 	%f193, %f487, %f192;
	sub.ftz.f32 	%f194, %f193, %f488;
	fma.rn.ftz.f32 	%f13, %f194, %f489, %f490;
	mov.f32 	%f599, 0f00000000;
	@%p5 bra 	$L__BB6_10;
	bra.uni 	$L__BB6_8;

$L__BB6_10:
	setp.eq.s32 	%p6, %r22, 2;
	@%p6 bra 	$L__BB6_84;

	setp.eq.s32 	%p7, %r22, 3;
	@%p7 bra 	$L__BB6_21;

	setp.ne.s32 	%p8, %r22, 4;
	mov.f32 	%f600, %f599;
	@%p8 bra 	$L__BB6_102;

	abs.ftz.f32 	%f14, %f13;
	setp.lt.ftz.f32 	%p11, %f14, 0f7F800000;
	@%p11 bra 	$L__BB6_17;
	bra.uni 	$L__BB6_14;

$L__BB6_17:
	cvt.rzi.f32.f32 	%f17, %f13;
	sub.ftz.f32 	%f195, %f13, %f17;
	mov.b32 	%r41, %f195;
	mov.b32 	%r42, %f13;
	and.b32  	%r43, %r42, -2147483648;
	or.b32  	%r44, %r43, %r41;
	mov.b32 	%f564, %r44;
	mov.f32 	%f13, %f17;
	bra.uni 	$L__BB6_18;

$L__BB6_8:
	@%p9 bra 	$L__BB6_99;

	mov.f32 	%f600, %f599;
	@%p10 bra 	$L__BB6_91;
	bra.uni 	$L__BB6_102;

$L__BB6_91:
	abs.ftz.f32 	%f141, %f13;
	setp.lt.ftz.f32 	%p61, %f141, 0f7F800000;
	@%p61 bra 	$L__BB6_95;
	bra.uni 	$L__BB6_92;

$L__BB6_95:
	cvt.rzi.f32.f32 	%f144, %f13;
	sub.ftz.f32 	%f455, %f13, %f144;
	mov.b32 	%r70, %f455;
	mov.b32 	%r71, %f13;
	and.b32  	%r72, %r71, -2147483648;
	or.b32  	%r73, %r72, %r70;
	mov.b32 	%f598, %r73;
	mov.f32 	%f13, %f144;
	bra.uni 	$L__BB6_96;

$L__BB6_84:
	abs.ftz.f32 	%f132, %f13;
	setp.lt.ftz.f32 	%p56, %f132, 0f7F800000;
	@%p56 bra 	$L__BB6_88;
	bra.uni 	$L__BB6_85;

$L__BB6_88:
	cvt.rzi.f32.f32 	%f135, %f13;
	sub.ftz.f32 	%f415, %f13, %f135;
	mov.b32 	%r63, %f415;
	mov.b32 	%r64, %f13;
	and.b32  	%r65, %r64, -2147483648;
	or.b32  	%r66, %r65, %r63;
	mov.b32 	%f596, %r66;
	mov.f32 	%f13, %f135;
	bra.uni 	$L__BB6_89;

$L__BB6_21:
	abs.ftz.f32 	%f23, %f13;
	setp.lt.ftz.f32 	%p15, %f23, 0f7F800000;
	@%p15 bra 	$L__BB6_25;
	bra.uni 	$L__BB6_22;

$L__BB6_25:
	cvt.rzi.f32.f32 	%f26, %f13;
	sub.ftz.f32 	%f210, %f13, %f26;
	mov.b32 	%r48, %f210;
	mov.b32 	%r49, %f13;
	and.b32  	%r50, %r49, -2147483648;
	or.b32  	%r51, %r50, %r48;
	mov.b32 	%f566, %r51;
	mov.f32 	%f13, %f26;
	bra.uni 	$L__BB6_26;

$L__BB6_99:
	mov.b32 	%r75, %f13;
	and.b32  	%r76, %r75, -2147483648;
	or.b32  	%r77, %r76, 1056964608;
	mov.b32 	%f472, %r77;
	add.rz.ftz.f32 	%f473, %f13, %f472;
	cvt.rzi.f32.f32 	%f474, %f473;
	cvt.rzi.ftz.s32.f32 	%r21, %f474;
	setp.lt.s32 	%p65, %r21, 0;
	mov.f32 	%f600, %f599;
	@%p65 bra 	$L__BB6_102;

	cvt.s64.s32 	%rd24, %r21;
	setp.le.u64 	%p66, %rd10, %rd24;
	mov.f32 	%f600, %f599;
	@%p66 bra 	$L__BB6_102;

	shl.b64 	%rd60, %rd24, 3;
	add.s64 	%rd61, %rd1, %rd60;
	ld.global.nc.v2.f32 	{%f599, %f600}, [%rd61];
	bra.uni 	$L__BB6_102;

$L__BB6_14:
	setp.eq.ftz.f32 	%p12, %f14, 0f7F800000;
	@%p12 bra 	$L__BB6_16;
	bra.uni 	$L__BB6_15;

$L__BB6_16:
	mov.b32 	%r39, %f13;
	and.b32  	%r40, %r39, -2147483648;
	mov.b32 	%f564, %r40;
	bra.uni 	$L__BB6_18;

$L__BB6_92:
	setp.eq.ftz.f32 	%p62, %f141, 0f7F800000;
	@%p62 bra 	$L__BB6_94;
	bra.uni 	$L__BB6_93;

$L__BB6_94:
	mov.b32 	%r68, %f13;
	and.b32  	%r69, %r68, -2147483648;
	mov.b32 	%f598, %r69;
	bra.uni 	$L__BB6_96;

$L__BB6_85:
	setp.eq.ftz.f32 	%p57, %f132, 0f7F800000;
	@%p57 bra 	$L__BB6_87;
	bra.uni 	$L__BB6_86;

$L__BB6_87:
	mov.b32 	%r61, %f13;
	and.b32  	%r62, %r61, -2147483648;
	mov.b32 	%f596, %r62;
	bra.uni 	$L__BB6_89;

$L__BB6_22:
	setp.eq.ftz.f32 	%p16, %f23, 0f7F800000;
	@%p16 bra 	$L__BB6_24;
	bra.uni 	$L__BB6_23;

$L__BB6_24:
	mov.b32 	%r46, %f13;
	and.b32  	%r47, %r46, -2147483648;
	mov.b32 	%f566, %r47;
	bra.uni 	$L__BB6_26;

$L__BB6_15:
	add.ftz.f32 	%f13, %f13, %f13;
	mov.f32 	%f564, %f13;

$L__BB6_18:
	cvt.rzi.ftz.s32.f32 	%r1, %f13;
	setp.lt.s32 	%p13, %r1, 0;
	mov.f32 	%f600, %f599;
	@%p13 bra 	$L__BB6_102;

	add.s32 	%r45, %r1, 1;
	cvt.s64.s32 	%rd48, %r45;
	setp.le.u64 	%p14, %rd10, %rd48;
	mov.f32 	%f600, %f599;
	@%p14 bra 	$L__BB6_102;

	mul.wide.s32 	%rd49, %r1, 8;
	add.s64 	%rd50, %rd1, %rd49;
	ld.global.nc.v2.f32 	{%f200, %f201}, [%rd50];
	ld.global.nc.v2.f32 	{%f204, %f205}, [%rd50+8];
	sub.ftz.f32 	%f208, %f204, %f200;
	sub.ftz.f32 	%f209, %f205, %f201;
	fma.rn.ftz.f32 	%f600, %f564, %f209, %f201;
	fma.rn.ftz.f32 	%f599, %f564, %f208, %f200;
	bra.uni 	$L__BB6_102;

$L__BB6_93:
	add.ftz.f32 	%f13, %f13, %f13;
	mov.f32 	%f598, %f13;

$L__BB6_96:
	cvt.rzi.ftz.s32.f32 	%r20, %f13;
	setp.lt.s32 	%p63, %r20, 0;
	mov.f32 	%f600, %f599;
	@%p63 bra 	$L__BB6_102;

	add.s32 	%r74, %r20, 1;
	cvt.s64.s32 	%rd57, %r74;
	setp.le.u64 	%p64, %rd10, %rd57;
	mov.f32 	%f600, %f599;
	@%p64 bra 	$L__BB6_102;

	mul.wide.s32 	%rd58, %r20, 8;
	add.s64 	%rd59, %rd1, %rd58;
	ld.global.nc.v2.f32 	{%f460, %f461}, [%rd59];
	ld.global.nc.v2.f32 	{%f464, %f465}, [%rd59+8];
	sub.ftz.f32 	%f468, %f464, %f460;
	sub.ftz.f32 	%f469, %f465, %f461;
	fma.rn.ftz.f32 	%f600, %f598, %f469, %f461;
	fma.rn.ftz.f32 	%f599, %f598, %f468, %f460;
	bra.uni 	$L__BB6_102;

$L__BB6_86:
	add.ftz.f32 	%f13, %f13, %f13;
	mov.f32 	%f596, %f13;

$L__BB6_89:
	cvt.rzi.ftz.s32.f32 	%r19, %f13;
	setp.lt.s32 	%p58, %r19, 1;
	add.s32 	%r67, %r19, 2;
	cvt.s64.s32 	%rd54, %r67;
	setp.le.u64 	%p59, %rd10, %rd54;
	or.pred  	%p60, %p58, %p59;
	mov.f32 	%f600, %f599;
	@%p60 bra 	$L__BB6_102;

	mul.wide.s32 	%rd55, %r19, 8;
	add.s64 	%rd56, %rd1, %rd55;
	ld.global.nc.v2.f32 	{%f418, %f419}, [%rd56+-8];
	ld.global.nc.v2.f32 	{%f422, %f423}, [%rd56];
	ld.global.nc.v2.f32 	{%f426, %f427}, [%rd56+8];
	ld.global.nc.v2.f32 	{%f430, %f431}, [%rd56+16];
	fma.rn.ftz.f32 	%f434, %f596, 0f40000000, 0fBF800000;
	mov.f32 	%f435, 0f3F800000;
	fma.rn.ftz.f32 	%f436, %f596, %f434, 0fBF800000;
	fma.rn.ftz.f32 	%f437, %f596, %f436, 0f00000000;
	fma.rn.ftz.f32 	%f438, %f596, 0fC0A00000, 0f40400000;
	fma.rn.ftz.f32 	%f439, %f596, %f438, 0f00000000;
	fma.rn.ftz.f32 	%f440, %f596, %f439, 0f40000000;
	fma.rn.ftz.f32 	%f441, %f596, 0f40800000, 0fC0400000;
	fma.rn.ftz.f32 	%f442, %f596, %f441, 0f3F800000;
	fma.rn.ftz.f32 	%f443, %f596, %f442, 0f00000000;
	sub.ftz.f32 	%f444, %f435, %f596;
	fma.rn.ftz.f32 	%f445, %f596, %f444, 0f00000000;
	fma.rn.ftz.f32 	%f446, %f596, %f445, 0f00000000;
	mul.ftz.f32 	%f447, %f440, %f422;
	mul.ftz.f32 	%f448, %f440, %f423;
	fma.rn.ftz.f32 	%f449, %f437, %f418, %f447;
	fma.rn.ftz.f32 	%f450, %f437, %f419, %f448;
	fma.rn.ftz.f32 	%f451, %f443, %f426, %f449;
	fma.rn.ftz.f32 	%f452, %f443, %f427, %f450;
	fma.rn.ftz.f32 	%f453, %f446, %f430, %f451;
	fma.rn.ftz.f32 	%f454, %f446, %f431, %f452;
	mul.ftz.f32 	%f600, %f454, 0f3F000000;
	mul.ftz.f32 	%f599, %f453, 0f3F000000;
	bra.uni 	$L__BB6_102;

$L__BB6_23:
	add.ftz.f32 	%f13, %f13, %f13;
	mov.f32 	%f566, %f13;

$L__BB6_26:
	cvt.rzi.ftz.s32.f32 	%r2, %f13;
	setp.lt.s32 	%p17, %r2, 1;
	add.s32 	%r52, %r2, 2;
	cvt.s64.s32 	%rd51, %r52;
	setp.le.u64 	%p18, %rd10, %rd51;
	or.pred  	%p19, %p17, %p18;
	mov.f32 	%f600, %f599;
	@%p19 bra 	$L__BB6_102;

	mul.wide.s32 	%rd52, %r2, 8;
	add.s64 	%rd53, %rd1, %rd52;
	ld.global.nc.v2.f32 	{%f214, %f215}, [%rd53+-8];
	ld.global.nc.v2.f32 	{%f216, %f217}, [%rd53];
	ld.global.nc.v2.f32 	{%f218, %f219}, [%rd53+8];
	ld.global.nc.v2.f32 	{%f220, %f221}, [%rd53+16];
	add.ftz.f32 	%f38, %f566, 0f3F800000;
	mov.f32 	%f573, 0f3F800000;
	setp.eq.ftz.f32 	%p20, %f38, 0f00000000;
	@%p20 bra 	$L__BB6_41;

	add.ftz.f32 	%f503, %f566, 0f3F800000;
	add.ftz.f32 	%f223, %f503, %f503;
	cvt.rni.f32.f32 	%f224, %f223;
	cvt.rzi.ftz.s32.f32 	%r3, %f224;
	neg.ftz.f32 	%f225, %f224;
	mov.f32 	%f226, 0f3F000000;
	fma.rn.ftz.f32 	%f227, %f225, %f226, %f503;
	mul.ftz.f32 	%f228, %f227, 0f34222169;
	mov.f32 	%f229, 0f40490FDA;
	fma.rn.ftz.f32 	%f230, %f227, %f229, %f228;
	mul.rn.ftz.f32 	%f39, %f230, %f230;
	and.b32  	%r4, %r3, 1;
	setp.eq.s32 	%p21, %r4, 0;
	selp.f32 	%f40, %f230, 0f3F800000, %p21;
	mov.f32 	%f567, 0fB94D4153;
	@%p21 bra 	$L__BB6_30;

	mov.f32 	%f231, 0fBAB607ED;
	mov.f32 	%f232, 0f37CBAC00;
	fma.rn.ftz.f32 	%f567, %f232, %f39, %f231;

$L__BB6_30:
	selp.f32 	%f233, 0f3C0885E4, 0f3D2AAABB, %p21;
	fma.rn.ftz.f32 	%f234, %f567, %f39, %f233;
	selp.f32 	%f235, 0fBE2AAAA8, 0fBEFFFFFF, %p21;
	fma.rn.ftz.f32 	%f236, %f234, %f39, %f235;
	mov.f32 	%f237, 0f00000000;
	fma.rn.ftz.f32 	%f238, %f39, %f40, %f237;
	fma.rn.ftz.f32 	%f569, %f236, %f238, %f40;
	and.b32  	%r53, %r3, 2;
	setp.eq.s32 	%p23, %r53, 0;
	@%p23 bra 	$L__BB6_32;

	mov.f32 	%f510, 0f00000000;
	mov.f32 	%f240, 0fBF800000;
	fma.rn.ftz.f32 	%f569, %f569, %f240, %f510;

$L__BB6_32:
	add.ftz.f32 	%f504, %f566, 0f3F800000;
	cvt.rzi.f32.f32 	%f241, %f504;
	setp.neu.ftz.f32 	%p24, %f241, %f504;
	@%p24 bra 	$L__BB6_34;

	mov.f32 	%f514, 0f00000000;
	add.ftz.f32 	%f507, %f566, 0f3F800000;
	mul.rn.ftz.f32 	%f569, %f507, %f514;

$L__BB6_34:
	mov.f32 	%f509, 0f40490FDA;
	mov.f32 	%f508, 0f3F000000;
	add.ftz.f32 	%f505, %f566, 0f3F800000;
	add.ftz.f32 	%f48, %f569, %f569;
	mov.f32 	%f244, 0f40000000;
	div.approx.ftz.f32 	%f49, %f505, %f244;
	add.ftz.f32 	%f245, %f49, %f49;
	cvt.rni.f32.f32 	%f246, %f245;
	cvt.rzi.ftz.s32.f32 	%r5, %f246;
	neg.ftz.f32 	%f247, %f246;
	fma.rn.ftz.f32 	%f249, %f247, %f508, %f49;
	mul.ftz.f32 	%f250, %f249, 0f34222169;
	fma.rn.ftz.f32 	%f252, %f249, %f509, %f250;
	mul.rn.ftz.f32 	%f50, %f252, %f252;
	and.b32  	%r6, %r5, 1;
	setp.eq.s32 	%p25, %r6, 0;
	selp.f32 	%f51, %f252, 0f3F800000, %p25;
	mov.f32 	%f570, 0fB94D4153;
	@%p25 bra 	$L__BB6_36;

	mov.f32 	%f253, 0fBAB607ED;
	mov.f32 	%f254, 0f37CBAC00;
	fma.rn.ftz.f32 	%f570, %f254, %f50, %f253;

$L__BB6_36:
	mov.f32 	%f511, 0f00000000;
	selp.f32 	%f255, 0f3C0885E4, 0f3D2AAABB, %p25;
	fma.rn.ftz.f32 	%f256, %f570, %f50, %f255;
	selp.f32 	%f257, 0fBE2AAAA8, 0fBEFFFFFF, %p25;
	fma.rn.ftz.f32 	%f258, %f256, %f50, %f257;
	fma.rn.ftz.f32 	%f260, %f50, %f51, %f511;
	fma.rn.ftz.f32 	%f572, %f258, %f260, %f51;
	and.b32  	%r54, %r5, 2;
	setp.eq.s32 	%p27, %r54, 0;
	@%p27 bra 	$L__BB6_38;

	mov.f32 	%f512, 0f00000000;
	mov.f32 	%f262, 0fBF800000;
	fma.rn.ftz.f32 	%f572, %f572, %f262, %f512;

$L__BB6_38:
	mov.f32 	%f517, 0f40000000;
	add.ftz.f32 	%f516, %f566, 0f3F800000;
	div.approx.ftz.f32 	%f515, %f516, %f517;
	cvt.rzi.f32.f32 	%f263, %f515;
	setp.neu.ftz.f32 	%p28, %f263, %f515;
	@%p28 bra 	$L__BB6_40;

	mov.f32 	%f520, 0f40000000;
	add.ftz.f32 	%f519, %f566, 0f3F800000;
	div.approx.ftz.f32 	%f518, %f519, %f520;
	mov.f32 	%f513, 0f00000000;
	mul.rn.ftz.f32 	%f572, %f518, %f513;

$L__BB6_40:
	add.ftz.f32 	%f506, %f566, 0f3F800000;
	mul.ftz.f32 	%f265, %f506, 0f411DE9E7;
	mul.ftz.f32 	%f266, %f506, %f265;
	mul.ftz.f32 	%f267, %f48, %f572;
	div.approx.ftz.f32 	%f573, %f267, %f266;

$L__BB6_41:
	mov.f32 	%f580, 0f3F800000;
	add.ftz.f32 	%f61, %f566, 0f00000000;
	setp.eq.ftz.f32 	%p29, %f61, 0f00000000;
	@%p29 bra 	$L__BB6_55;

	add.ftz.f32 	%f270, %f61, %f61;
	cvt.rni.f32.f32 	%f271, %f270;
	cvt.rzi.ftz.s32.f32 	%r7, %f271;
	neg.ftz.f32 	%f272, %f271;
	mov.f32 	%f273, 0f3F000000;
	fma.rn.ftz.f32 	%f274, %f272, %f273, %f61;
	mul.ftz.f32 	%f275, %f274, 0f34222169;
	mov.f32 	%f276, 0f40490FDA;
	fma.rn.ftz.f32 	%f277, %f274, %f276, %f275;
	mul.rn.ftz.f32 	%f62, %f277, %f277;
	and.b32  	%r8, %r7, 1;
	setp.eq.s32 	%p30, %r8, 0;
	selp.f32 	%f63, %f277, 0f3F800000, %p30;
	mov.f32 	%f574, 0fB94D4153;
	@%p30 bra 	$L__BB6_44;

	mov.f32 	%f278, 0fBAB607ED;
	mov.f32 	%f279, 0f37CBAC00;
	fma.rn.ftz.f32 	%f574, %f279, %f62, %f278;

$L__BB6_44:
	selp.f32 	%f280, 0f3C0885E4, 0f3D2AAABB, %p30;
	fma.rn.ftz.f32 	%f281, %f574, %f62, %f280;
	selp.f32 	%f282, 0fBE2AAAA8, 0fBEFFFFFF, %p30;
	fma.rn.ftz.f32 	%f283, %f281, %f62, %f282;
	mov.f32 	%f284, 0f00000000;
	fma.rn.ftz.f32 	%f285, %f62, %f63, %f284;
	fma.rn.ftz.f32 	%f576, %f283, %f285, %f63;
	and.b32  	%r55, %r7, 2;
	setp.eq.s32 	%p32, %r55, 0;
	@%p32 bra 	$L__BB6_46;

	mov.f32 	%f527, 0f00000000;
	mov.f32 	%f287, 0fBF800000;
	fma.rn.ftz.f32 	%f576, %f576, %f287, %f527;

$L__BB6_46:
	add.ftz.f32 	%f521, %f566, 0f00000000;
	cvt.rzi.f32.f32 	%f288, %f521;
	setp.neu.ftz.f32 	%p33, %f288, %f521;
	@%p33 bra 	$L__BB6_48;

	mov.f32 	%f531, 0f00000000;
	add.ftz.f32 	%f526, %f566, 0f00000000;
	mul.rn.ftz.f32 	%f576, %f526, %f531;

$L__BB6_48:
	mov.f32 	%f524, 0f40490FDA;
	mov.f32 	%f523, 0f3F000000;
	add.ftz.f32 	%f522, %f566, 0f00000000;
	add.ftz.f32 	%f71, %f576, %f576;
	mov.f32 	%f291, 0f40000000;
	div.approx.ftz.f32 	%f72, %f522, %f291;
	add.ftz.f32 	%f292, %f72, %f72;
	cvt.rni.f32.f32 	%f293, %f292;
	cvt.rzi.ftz.s32.f32 	%r9, %f293;
	neg.ftz.f32 	%f294, %f293;
	fma.rn.ftz.f32 	%f296, %f294, %f523, %f72;
	mul.ftz.f32 	%f297, %f296, 0f34222169;
	fma.rn.ftz.f32 	%f299, %f296, %f524, %f297;
	mul.rn.ftz.f32 	%f73, %f299, %f299;
	and.b32  	%r10, %r9, 1;
	setp.eq.s32 	%p34, %r10, 0;
	selp.f32 	%f74, %f299, 0f3F800000, %p34;
	mov.f32 	%f577, 0fB94D4153;
	@%p34 bra 	$L__BB6_50;

	mov.f32 	%f300, 0fBAB607ED;
	mov.f32 	%f301, 0f37CBAC00;
	fma.rn.ftz.f32 	%f577, %f301, %f73, %f300;

$L__BB6_50:
	mov.f32 	%f528, 0f00000000;
	selp.f32 	%f302, 0f3C0885E4, 0f3D2AAABB, %p34;
	fma.rn.ftz.f32 	%f303, %f577, %f73, %f302;
	selp.f32 	%f304, 0fBE2AAAA8, 0fBEFFFFFF, %p34;
	fma.rn.ftz.f32 	%f305, %f303, %f73, %f304;
	fma.rn.ftz.f32 	%f307, %f73, %f74, %f528;
	fma.rn.ftz.f32 	%f579, %f305, %f307, %f74;
	and.b32  	%r56, %r9, 2;
	setp.eq.s32 	%p36, %r56, 0;
	@%p36 bra 	$L__BB6_52;

	mov.f32 	%f529, 0f00000000;
	mov.f32 	%f309, 0fBF800000;
	fma.rn.ftz.f32 	%f579, %f579, %f309, %f529;

$L__BB6_52:
	mov.f32 	%f534, 0f40000000;
	add.ftz.f32 	%f533, %f566, 0f00000000;
	div.approx.ftz.f32 	%f532, %f533, %f534;
	cvt.rzi.f32.f32 	%f310, %f532;
	setp.neu.ftz.f32 	%p37, %f310, %f532;
	@%p37 bra 	$L__BB6_54;

	mov.f32 	%f537, 0f40000000;
	add.ftz.f32 	%f536, %f566, 0f00000000;
	div.approx.ftz.f32 	%f535, %f536, %f537;
	mov.f32 	%f530, 0f00000000;
	mul.rn.ftz.f32 	%f579, %f535, %f530;

$L__BB6_54:
	add.ftz.f32 	%f525, %f566, 0f00000000;
	mul.ftz.f32 	%f312, %f525, 0f411DE9E7;
	mul.ftz.f32 	%f313, %f525, %f312;
	mul.ftz.f32 	%f314, %f71, %f579;
	div.approx.ftz.f32 	%f580, %f314, %f313;

$L__BB6_55:
	mov.f32 	%f587, 0f3F800000;
	add.ftz.f32 	%f84, %f566, 0fBF800000;
	setp.eq.ftz.f32 	%p38, %f84, 0f00000000;
	@%p38 bra 	$L__BB6_69;

	add.ftz.f32 	%f493, %f566, 0fBF800000;
	add.ftz.f32 	%f317, %f493, %f493;
	cvt.rni.f32.f32 	%f318, %f317;
	cvt.rzi.ftz.s32.f32 	%r11, %f318;
	neg.ftz.f32 	%f319, %f318;
	mov.f32 	%f320, 0f3F000000;
	fma.rn.ftz.f32 	%f321, %f319, %f320, %f493;
	mul.ftz.f32 	%f322, %f321, 0f34222169;
	mov.f32 	%f323, 0f40490FDA;
	fma.rn.ftz.f32 	%f324, %f321, %f323, %f322;
	mul.rn.ftz.f32 	%f85, %f324, %f324;
	and.b32  	%r12, %r11, 1;
	setp.eq.s32 	%p39, %r12, 0;
	selp.f32 	%f86, %f324, 0f3F800000, %p39;
	mov.f32 	%f581, 0fB94D4153;
	@%p39 bra 	$L__BB6_58;

	mov.f32 	%f325, 0fBAB607ED;
	mov.f32 	%f326, 0f37CBAC00;
	fma.rn.ftz.f32 	%f581, %f326, %f85, %f325;

$L__BB6_58:
	selp.f32 	%f327, 0f3C0885E4, 0f3D2AAABB, %p39;
	fma.rn.ftz.f32 	%f328, %f581, %f85, %f327;
	selp.f32 	%f329, 0fBE2AAAA8, 0fBEFFFFFF, %p39;
	fma.rn.ftz.f32 	%f330, %f328, %f85, %f329;
	mov.f32 	%f331, 0f00000000;
	fma.rn.ftz.f32 	%f332, %f85, %f86, %f331;
	fma.rn.ftz.f32 	%f583, %f330, %f332, %f86;
	and.b32  	%r57, %r11, 2;
	setp.eq.s32 	%p41, %r57, 0;
	@%p41 bra 	$L__BB6_60;

	mov.f32 	%f494, 0f00000000;
	mov.f32 	%f334, 0fBF800000;
	fma.rn.ftz.f32 	%f583, %f583, %f334, %f494;

$L__BB6_60:
	add.ftz.f32 	%f495, %f566, 0fBF800000;
	cvt.rzi.f32.f32 	%f335, %f495;
	setp.neu.ftz.f32 	%p42, %f335, %f495;
	@%p42 bra 	$L__BB6_62;

	mov.f32 	%f498, 0f00000000;
	add.ftz.f32 	%f497, %f566, 0fBF800000;
	mul.rn.ftz.f32 	%f583, %f497, %f498;

$L__BB6_62:
	mov.f32 	%f539, 0f40490FDA;
	mov.f32 	%f538, 0f3F000000;
	add.ftz.f32 	%f496, %f566, 0fBF800000;
	add.ftz.f32 	%f94, %f583, %f583;
	mov.f32 	%f338, 0f40000000;
	div.approx.ftz.f32 	%f95, %f496, %f338;
	add.ftz.f32 	%f339, %f95, %f95;
	cvt.rni.f32.f32 	%f340, %f339;
	cvt.rzi.ftz.s32.f32 	%r13, %f340;
	neg.ftz.f32 	%f341, %f340;
	fma.rn.ftz.f32 	%f343, %f341, %f538, %f95;
	mul.ftz.f32 	%f344, %f343, 0f34222169;
	fma.rn.ftz.f32 	%f346, %f343, %f539, %f344;
	mul.rn.ftz.f32 	%f96, %f346, %f346;
	and.b32  	%r14, %r13, 1;
	setp.eq.s32 	%p43, %r14, 0;
	selp.f32 	%f97, %f346, 0f3F800000, %p43;
	mov.f32 	%f584, 0fB94D4153;
	@%p43 bra 	$L__BB6_64;

	mov.f32 	%f347, 0fBAB607ED;
	mov.f32 	%f348, 0f37CBAC00;
	fma.rn.ftz.f32 	%f584, %f348, %f96, %f347;

$L__BB6_64:
	mov.f32 	%f479, 0f00000000;
	selp.f32 	%f349, 0f3C0885E4, 0f3D2AAABB, %p43;
	fma.rn.ftz.f32 	%f350, %f584, %f96, %f349;
	selp.f32 	%f351, 0fBE2AAAA8, 0fBEFFFFFF, %p43;
	fma.rn.ftz.f32 	%f352, %f350, %f96, %f351;
	fma.rn.ftz.f32 	%f354, %f96, %f97, %f479;
	fma.rn.ftz.f32 	%f586, %f352, %f354, %f97;
	and.b32  	%r58, %r13, 2;
	setp.eq.s32 	%p45, %r58, 0;
	@%p45 bra 	$L__BB6_66;

	mov.f32 	%f480, 0f00000000;
	mov.f32 	%f356, 0fBF800000;
	fma.rn.ftz.f32 	%f586, %f586, %f356, %f480;

$L__BB6_66:
	mov.f32 	%f483, 0f40000000;
	add.ftz.f32 	%f482, %f566, 0fBF800000;
	div.approx.ftz.f32 	%f481, %f482, %f483;
	cvt.rzi.f32.f32 	%f357, %f481;
	setp.neu.ftz.f32 	%p46, %f357, %f481;
	@%p46 bra 	$L__BB6_68;

	mov.f32 	%f502, 0f40000000;
	add.ftz.f32 	%f501, %f566, 0fBF800000;
	div.approx.ftz.f32 	%f500, %f496, %f502;
	mov.f32 	%f499, 0f00000000;
	mul.rn.ftz.f32 	%f586, %f500, %f499;

$L__BB6_68:
	add.ftz.f32 	%f484, %f566, 0fBF800000;
	mul.ftz.f32 	%f359, %f484, 0f411DE9E7;
	mul.ftz.f32 	%f360, %f484, %f359;
	mul.ftz.f32 	%f361, %f94, %f586;
	div.approx.ftz.f32 	%f587, %f361, %f360;

$L__BB6_69:
	mov.f32 	%f594, 0f3F800000;
	add.ftz.f32 	%f107, %f566, 0fC0000000;
	setp.eq.ftz.f32 	%p47, %f107, 0f00000000;
	@%p47 bra 	$L__BB6_83;

	add.ftz.f32 	%f364, %f107, %f107;
	cvt.rni.f32.f32 	%f365, %f364;
	cvt.rzi.ftz.s32.f32 	%r15, %f365;
	neg.ftz.f32 	%f366, %f365;
	mov.f32 	%f367, 0f3F000000;
	fma.rn.ftz.f32 	%f368, %f366, %f367, %f107;
	mul.ftz.f32 	%f369, %f368, 0f34222169;
	mov.f32 	%f370, 0f40490FDA;
	fma.rn.ftz.f32 	%f371, %f368, %f370, %f369;
	mul.rn.ftz.f32 	%f108, %f371, %f371;
	and.b32  	%r16, %r15, 1;
	setp.eq.s32 	%p48, %r16, 0;
	selp.f32 	%f109, %f371, 0f3F800000, %p48;
	mov.f32 	%f588, 0fB94D4153;
	@%p48 bra 	$L__BB6_72;

	mov.f32 	%f372, 0fBAB607ED;
	mov.f32 	%f373, 0f37CBAC00;
	fma.rn.ftz.f32 	%f588, %f373, %f108, %f372;

$L__BB6_72:
	selp.f32 	%f374, 0f3C0885E4, 0f3D2AAABB, %p48;
	fma.rn.ftz.f32 	%f375, %f588, %f108, %f374;
	selp.f32 	%f376, 0fBE2AAAA8, 0fBEFFFFFF, %p48;
	fma.rn.ftz.f32 	%f377, %f375, %f108, %f376;
	mov.f32 	%f378, 0f00000000;
	fma.rn.ftz.f32 	%f379, %f108, %f109, %f378;
	fma.rn.ftz.f32 	%f590, %f377, %f379, %f109;
	and.b32  	%r59, %r15, 2;
	setp.eq.s32 	%p50, %r59, 0;
	@%p50 bra 	$L__BB6_74;

	mov.f32 	%f546, 0f00000000;
	mov.f32 	%f381, 0fBF800000;
	fma.rn.ftz.f32 	%f590, %f590, %f381, %f546;

$L__BB6_74:
	add.ftz.f32 	%f540, %f566, 0fC0000000;
	cvt.rzi.f32.f32 	%f382, %f540;
	setp.neu.ftz.f32 	%p51, %f382, %f540;
	@%p51 bra 	$L__BB6_76;

	mov.f32 	%f550, 0f00000000;
	add.ftz.f32 	%f545, %f566, 0fC0000000;
	mul.rn.ftz.f32 	%f590, %f545, %f550;

$L__BB6_76:
	add.ftz.f32 	%f543, %f566, 0fC0000000;
	mov.f32 	%f542, 0f40490FDA;
	mov.f32 	%f541, 0f3F000000;
	add.ftz.f32 	%f117, %f590, %f590;
	mov.f32 	%f385, 0f40000000;
	div.approx.ftz.f32 	%f118, %f543, %f385;
	add.ftz.f32 	%f386, %f118, %f118;
	cvt.rni.f32.f32 	%f387, %f386;
	cvt.rzi.ftz.s32.f32 	%r17, %f387;
	neg.ftz.f32 	%f388, %f387;
	fma.rn.ftz.f32 	%f390, %f388, %f541, %f118;
	mul.ftz.f32 	%f391, %f390, 0f34222169;
	fma.rn.ftz.f32 	%f393, %f390, %f542, %f391;
	mul.rn.ftz.f32 	%f119, %f393, %f393;
	and.b32  	%r18, %r17, 1;
	setp.eq.s32 	%p52, %r18, 0;
	selp.f32 	%f120, %f393, 0f3F800000, %p52;
	mov.f32 	%f591, 0fB94D4153;
	@%p52 bra 	$L__BB6_78;

	mov.f32 	%f394, 0fBAB607ED;
	mov.f32 	%f395, 0f37CBAC00;
	fma.rn.ftz.f32 	%f591, %f395, %f119, %f394;

$L__BB6_78:
	mov.f32 	%f547, 0f00000000;
	selp.f32 	%f396, 0f3C0885E4, 0f3D2AAABB, %p52;
	fma.rn.ftz.f32 	%f397, %f591, %f119, %f396;
	selp.f32 	%f398, 0fBE2AAAA8, 0fBEFFFFFF, %p52;
	fma.rn.ftz.f32 	%f399, %f397, %f119, %f398;
	fma.rn.ftz.f32 	%f401, %f119, %f120, %f547;
	fma.rn.ftz.f32 	%f593, %f399, %f401, %f120;
	and.b32  	%r60, %r17, 2;
	setp.eq.s32 	%p54, %r60, 0;
	@%p54 bra 	$L__BB6_80;

	mov.f32 	%f548, 0f00000000;
	mov.f32 	%f403, 0fBF800000;
	fma.rn.ftz.f32 	%f593, %f593, %f403, %f548;

$L__BB6_80:
	mov.f32 	%f553, 0f40000000;
	add.ftz.f32 	%f552, %f566, 0fC0000000;
	div.approx.ftz.f32 	%f551, %f552, %f553;
	cvt.rzi.f32.f32 	%f404, %f551;
	setp.neu.ftz.f32 	%p55, %f404, %f551;
	@%p55 bra 	$L__BB6_82;

	mov.f32 	%f556, 0f40000000;
	add.ftz.f32 	%f555, %f566, 0fC0000000;
	div.approx.ftz.f32 	%f554, %f555, %f556;
	mov.f32 	%f549, 0f00000000;
	mul.rn.ftz.f32 	%f593, %f554, %f549;

$L__BB6_82:
	add.ftz.f32 	%f544, %f566, 0fC0000000;
	mul.ftz.f32 	%f406, %f544, 0f411DE9E7;
	mul.ftz.f32 	%f407, %f544, %f406;
	mul.ftz.f32 	%f408, %f117, %f593;
	div.approx.ftz.f32 	%f594, %f408, %f407;

$L__BB6_83:
	mul.ftz.f32 	%f409, %f216, %f580;
	fma.rn.ftz.f32 	%f410, %f214, %f573, %f409;
	mul.ftz.f32 	%f411, %f217, %f580;
	fma.rn.ftz.f32 	%f412, %f215, %f573, %f411;
	fma.rn.ftz.f32 	%f413, %f218, %f587, %f410;
	fma.rn.ftz.f32 	%f414, %f219, %f587, %f412;
	fma.rn.ftz.f32 	%f599, %f220, %f594, %f413;
	fma.rn.ftz.f32 	%f600, %f221, %f594, %f414;

$L__BB6_102:
	fma.rn.ftz.f32 	%f602, %f10, %f599, %f602;
	fma.rn.ftz.f32 	%f601, %f10, %f600, %f601;
	add.s64 	%rd85, %rd85, %rd13;
	add.s64 	%rd86, %rd86, 1;
	setp.lt.u64 	%p67, %rd86, %rd20;
	@%p67 bra 	$L__BB6_7;

$L__BB6_103:
	add.s64 	%rd84, %rd84, 1;
	setp.lt.u64 	%p68, %rd84, %rd11;
	@%p68 bra 	$L__BB6_5;

$L__BB6_104:
	ld.const.u64 	%rd69, [QUPS_I];
	add.s64 	%rd83, %rd83, 1;
	setp.lt.u64 	%p69, %rd83, %rd69;
	@%p69 bra 	$L__BB6_3;

$L__BB6_105:
	ld.param.u64 	%rd73, [_Z7greensfP6float2PKfS2_S2_S2_PKS_ffffPKii_param_0];
	ld.const.u64 	%rd72, [QUPS_S];
	ld.const.u64 	%rd71, [QUPS_N];
	mov.u32 	%r81, %tid.y;
	mov.u32 	%r80, %ntid.y;
	mov.u32 	%r79, %ctaid.y;
	mad.lo.s32 	%r78, %r79, %r80, %r81;
	cvt.u64.u32 	%rd70, %r78;
	mul.lo.s64 	%rd62, %rd71, %rd4;
	add.s64 	%rd63, %rd62, %rd70;
	mul.lo.s64 	%rd64, %rd63, %rd72;
	add.s64 	%rd65, %rd64, %rd2;
	cvta.to.global.u64 	%rd66, %rd73;
	shl.b64 	%rd67, %rd65, 3;
	add.s64 	%rd68, %rd66, %rd67;
	st.global.v2.f32 	[%rd68], {%f602, %f601};

$L__BB6_106:
	ret;

}
	// .globl	_Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii
.visible .entry _Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii(
	.param .u64 _Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_0,
	.param .u64 _Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_1,
	.param .u64 _Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_2,
	.param .u64 _Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_3,
	.param .u64 _Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_4,
	.param .u64 _Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_5,
	.param .f64 _Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_6,
	.param .f64 _Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_7,
	.param .f64 _Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_8,
	.param .f64 _Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_9,
	.param .u64 _Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_10,
	.param .u32 _Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_11
)
{
	.reg .pred 	%p<71>;
	.reg .f32 	%f<304>;
	.reg .b32 	%r<97>;
	.reg .f64 	%fd<263>;
	.reg .b64 	%rd<85>;


	ld.param.u64 	%rd32, [_Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_3];
	ld.param.u64 	%rd33, [_Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_4];
	ld.param.u64 	%rd35, [_Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_5];
	ld.param.u64 	%rd34, [_Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_10];
	ld.param.u32 	%r24, [_Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_11];
	cvta.to.global.u64 	%rd1, %rd35;
	mov.u32 	%r25, %ntid.x;
	mov.u32 	%r26, %ctaid.x;
	mov.u32 	%r27, %tid.x;
	mad.lo.s32 	%r28, %r26, %r25, %r27;
	cvt.u64.u32 	%rd2, %r28;
	mov.u32 	%r29, %ntid.y;
	mov.u32 	%r30, %ctaid.y;
	mov.u32 	%r31, %tid.y;
	mad.lo.s32 	%r32, %r30, %r29, %r31;
	cvt.u64.u32 	%rd3, %r32;
	mov.u32 	%r33, %ntid.z;
	mov.u32 	%r34, %ctaid.z;
	mov.u32 	%r35, %tid.z;
	mad.lo.s32 	%r36, %r34, %r33, %r35;
	cvt.u64.u32 	%rd4, %r36;
	ld.const.u64 	%rd5, [QUPS_N];
	ld.const.u64 	%rd6, [QUPS_I];
	ld.const.u64 	%rd7, [QUPS_S];
	setp.le.u64 	%p1, %rd7, %rd2;
	@%p1 bra 	$L__BB7_97;

	setp.eq.s64 	%p2, %rd6, 0;
	mov.f64 	%fd257, 0d0000000000000000;
	mov.f64 	%fd258, %fd257;
	@%p2 bra 	$L__BB7_96;

	mov.u64 	%rd81, 0;
	cvt.u32.u64 	%r37, %rd2;
	cvta.to.global.u64 	%rd9, %rd34;
	cvt.rn.f64.u32 	%fd1, %r37;
	ld.const.u64 	%rd10, [QUPS_T];
	ld.global.nc.u32 	%r38, [%rd9+4];
	cvt.s64.s32 	%rd11, %r38;
	cvta.to.global.u64 	%rd37, %rd32;
	mul.lo.s64 	%rd38, %rd3, 24;
	add.s64 	%rd39, %rd37, %rd38;
	add.s64 	%rd12, %rd39, 16;
	mul.lo.s64 	%rd13, %rd5, 24;
	cvta.to.global.u64 	%rd15, %rd33;
	cvt.u32.u64 	%r39, %rd11;
	setp.eq.s32 	%p3, %r39, 0;
	setp.gt.s32 	%p5, %r24, 1;
	setp.eq.s32 	%p8, %r24, 0;
	setp.eq.s32 	%p9, %r24, 1;
	mov.f32 	%f211, 0f3F000000;
	mov.f32 	%f214, 0f40490FDA;

$L__BB7_3:
	@%p3 bra 	$L__BB7_95;

	ld.global.nc.u32 	%r40, [%rd9];
	cvt.s64.s32 	%rd20, %r40;
	mov.u64 	%rd82, 0;

$L__BB7_5:
	cvt.u32.u64 	%r41, %rd20;
	setp.eq.s32 	%p4, %r41, 0;
	@%p4 bra 	$L__BB7_94;

	ld.param.u64 	%rd80, [_Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_2];
	shl.b64 	%rd79, %rd81, 3;
	cvta.to.global.u64 	%rd78, %rd80;
	add.s64 	%rd77, %rd78, %rd79;
	ld.param.u64 	%rd76, [_Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_1];
	mul.lo.s64 	%rd75, %rd81, 24;
	cvta.to.global.u64 	%rd74, %rd76;
	add.s64 	%rd73, %rd74, %rd75;
	ld.const.u64 	%rd72, [QUPS_M];
	mul.lo.s64 	%rd44, %rd82, %rd72;
	add.s64 	%rd45, %rd44, %rd4;
	mul.lo.s64 	%rd46, %rd45, 24;
	add.s64 	%rd47, %rd15, %rd46;
	ld.global.nc.f64 	%fd82, [%rd47];
	ld.global.nc.f64 	%fd6, [%rd73];
	sub.f64 	%fd83, %fd6, %fd82;
	ld.global.nc.f64 	%fd84, [%rd47+8];
	ld.global.nc.f64 	%fd7, [%rd73+8];
	sub.f64 	%fd85, %fd7, %fd84;
	ld.global.nc.f64 	%fd86, [%rd47+16];
	ld.global.nc.f64 	%fd8, [%rd73+16];
	sub.f64 	%fd87, %fd8, %fd86;
	mul.f64 	%fd88, %fd85, %fd85;
	fma.rn.f64 	%fd89, %fd83, %fd83, %fd88;
	fma.rn.f64 	%fd90, %fd87, %fd87, %fd89;
	sqrt.rn.f64 	%fd9, %fd90;
	ld.global.nc.f64 	%fd10, [%rd77];
	mov.u64 	%rd84, 0;
	mov.u64 	%rd83, %rd12;

$L__BB7_7:
	ld.param.f64 	%fd220, [_Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_8];
	ld.param.f64 	%fd219, [_Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_7];
	ld.param.f64 	%fd218, [_Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_6];
	ld.param.f64 	%fd217, [_Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_9];
	ld.global.nc.f64 	%fd93, [%rd83+-16];
	sub.f64 	%fd94, %fd6, %fd93;
	ld.global.nc.f64 	%fd95, [%rd83+-8];
	sub.f64 	%fd96, %fd7, %fd95;
	ld.global.nc.f64 	%fd97, [%rd83];
	sub.f64 	%fd98, %fd8, %fd97;
	mul.f64 	%fd99, %fd96, %fd96;
	fma.rn.f64 	%fd100, %fd94, %fd94, %fd99;
	fma.rn.f64 	%fd101, %fd98, %fd98, %fd100;
	sqrt.rn.f64 	%fd102, %fd101;
	add.f64 	%fd103, %fd102, %fd9;
	mul.f64 	%fd104, %fd103, %fd217;
	sub.f64 	%fd105, %fd218, %fd104;
	sub.f64 	%fd106, %fd105, %fd219;
	fma.rn.f64 	%fd13, %fd106, %fd220, %fd1;
	mov.f64 	%fd255, 0d0000000000000000;
	@%p5 bra 	$L__BB7_10;

	@%p8 bra 	$L__BB7_90;

	mov.f64 	%fd256, %fd255;
	@%p9 bra 	$L__BB7_82;
	bra.uni 	$L__BB7_93;

$L__BB7_82:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r21}, %fd13;
	}
	and.b32  	%r74, %r21, 2146435072;
	setp.eq.s32 	%p60, %r74, 2146435072;
	@%p60 bra 	$L__BB7_84;
	bra.uni 	$L__BB7_83;

$L__BB7_84:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r79, %temp}, %fd13;
	}
	and.b32  	%r80, %r21, 2147483647;
	setp.eq.s32 	%p61, %r80, 2146435072;
	setp.eq.s32 	%p62, %r79, 0;
	and.pred  	%p63, %p61, %p62;
	@%p63 bra 	$L__BB7_86;
	bra.uni 	$L__BB7_85;

$L__BB7_86:
	mov.f64 	%fd195, 0d0000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r81, %temp}, %fd195;
	}
	and.b32  	%r82, %r21, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r83}, %fd195;
	}
	or.b32  	%r84, %r83, %r82;
	mov.b64 	%fd254, {%r81, %r84};
	mov.f64 	%fd253, %fd13;
	bra.uni 	$L__BB7_87;

$L__BB7_10:
	setp.eq.s32 	%p6, %r24, 2;
	@%p6 bra 	$L__BB7_75;

	setp.ne.s32 	%p7, %r24, 3;
	mov.f64 	%fd256, %fd255;
	@%p7 bra 	$L__BB7_93;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd13;
	}
	and.b32  	%r42, %r1, 2146435072;
	setp.eq.s32 	%p10, %r42, 2146435072;
	@%p10 bra 	$L__BB7_14;
	bra.uni 	$L__BB7_13;

$L__BB7_14:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd13;
	}
	and.b32  	%r48, %r1, 2147483647;
	setp.eq.s32 	%p11, %r48, 2146435072;
	setp.eq.s32 	%p12, %r47, 0;
	and.pred  	%p13, %p11, %p12;
	@%p13 bra 	$L__BB7_16;
	bra.uni 	$L__BB7_15;

$L__BB7_16:
	mov.f64 	%fd108, 0d0000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd108;
	}
	and.b32  	%r50, %r1, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r51}, %fd108;
	}
	or.b32  	%r52, %r51, %r50;
	mov.b64 	%fd246, {%r49, %r52};
	mov.f64 	%fd245, %fd13;
	bra.uni 	$L__BB7_17;

$L__BB7_90:
	cvt.rn.ftz.f32.f64 	%f249, %fd13;
	mov.b32 	%r86, %f249;
	and.b32  	%r87, %r86, -2147483648;
	or.b32  	%r88, %r87, 1056964608;
	mov.b32 	%f250, %r88;
	add.rz.ftz.f32 	%f251, %f249, %f250;
	cvt.rzi.f32.f32 	%f252, %f251;
	cvt.rzi.ftz.s32.f32 	%r23, %f252;
	setp.lt.s32 	%p66, %r23, 0;
	mov.f64 	%fd256, %fd255;
	@%p66 bra 	$L__BB7_93;

	cvt.s64.s32 	%rd24, %r23;
	setp.le.u64 	%p67, %rd10, %rd24;
	mov.f64 	%fd256, %fd255;
	@%p67 bra 	$L__BB7_93;

	shl.b64 	%rd57, %rd24, 4;
	add.s64 	%rd58, %rd1, %rd57;
	ld.global.nc.v2.f64 	{%fd255, %fd256}, [%rd58];
	bra.uni 	$L__BB7_93;

$L__BB7_75:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r19}, %fd13;
	}
	and.b32  	%r62, %r19, 2146435072;
	setp.eq.s32 	%p53, %r62, 2146435072;
	@%p53 bra 	$L__BB7_77;
	bra.uni 	$L__BB7_76;

$L__BB7_77:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r67, %temp}, %fd13;
	}
	and.b32  	%r68, %r19, 2147483647;
	setp.eq.s32 	%p54, %r68, 2146435072;
	setp.eq.s32 	%p55, %r67, 0;
	and.pred  	%p56, %p54, %p55;
	@%p56 bra 	$L__BB7_79;
	bra.uni 	$L__BB7_78;

$L__BB7_79:
	mov.f64 	%fd154, 0d0000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r69, %temp}, %fd154;
	}
	and.b32  	%r70, %r19, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r71}, %fd154;
	}
	or.b32  	%r72, %r71, %r70;
	mov.b64 	%fd252, {%r69, %r72};
	mov.f64 	%fd251, %fd13;
	bra.uni 	$L__BB7_80;

$L__BB7_83:
	cvt.rzi.f64.f64 	%fd253, %fd13;
	sub.f64 	%fd194, %fd13, %fd253;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r75, %temp}, %fd194;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r76}, %fd194;
	}
	and.b32  	%r77, %r21, -2147483648;
	or.b32  	%r78, %r76, %r77;
	mov.b64 	%fd254, {%r75, %r78};
	bra.uni 	$L__BB7_87;

$L__BB7_13:
	cvt.rzi.f64.f64 	%fd245, %fd13;
	sub.f64 	%fd107, %fd13, %fd245;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r43, %temp}, %fd107;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r44}, %fd107;
	}
	and.b32  	%r45, %r1, -2147483648;
	or.b32  	%r46, %r44, %r45;
	mov.b64 	%fd246, {%r43, %r46};
	bra.uni 	$L__BB7_17;

$L__BB7_76:
	cvt.rzi.f64.f64 	%fd251, %fd13;
	sub.f64 	%fd153, %fd13, %fd251;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r63, %temp}, %fd153;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r64}, %fd153;
	}
	and.b32  	%r65, %r19, -2147483648;
	or.b32  	%r66, %r64, %r65;
	mov.b64 	%fd252, {%r63, %r66};
	bra.uni 	$L__BB7_80;

$L__BB7_85:
	add.f64 	%fd253, %fd13, %fd13;
	mov.f64 	%fd254, %fd253;

$L__BB7_87:
	cvt.rzi.s32.f64 	%r22, %fd253;
	setp.lt.s32 	%p64, %r22, 0;
	mov.f64 	%fd256, %fd255;
	@%p64 bra 	$L__BB7_93;

	add.s32 	%r85, %r22, 1;
	cvt.s64.s32 	%rd54, %r85;
	setp.le.u64 	%p65, %rd10, %rd54;
	mov.f64 	%fd256, %fd255;
	@%p65 bra 	$L__BB7_93;

	mul.wide.s32 	%rd55, %r22, 16;
	add.s64 	%rd56, %rd1, %rd55;
	ld.global.nc.v2.f64 	{%fd200, %fd201}, [%rd56];
	ld.global.nc.v2.f64 	{%fd204, %fd205}, [%rd56+16];
	sub.f64 	%fd208, %fd204, %fd200;
	sub.f64 	%fd209, %fd205, %fd201;
	fma.rn.f64 	%fd256, %fd254, %fd209, %fd201;
	fma.rn.f64 	%fd255, %fd254, %fd208, %fd200;
	bra.uni 	$L__BB7_93;

$L__BB7_15:
	add.f64 	%fd245, %fd13, %fd13;
	mov.f64 	%fd246, %fd245;

$L__BB7_17:
	cvt.rzi.s32.f64 	%r2, %fd245;
	setp.lt.s32 	%p14, %r2, 1;
	add.s32 	%r53, %r2, 2;
	cvt.s64.s32 	%rd48, %r53;
	setp.le.u64 	%p15, %rd10, %rd48;
	or.pred  	%p16, %p14, %p15;
	mov.f64 	%fd256, %fd255;
	@%p16 bra 	$L__BB7_93;

	mul.wide.s32 	%rd49, %r2, 16;
	add.s64 	%rd50, %rd1, %rd49;
	ld.global.nc.v2.f64 	{%fd112, %fd113}, [%rd50+-16];
	ld.global.nc.v2.f64 	{%fd114, %fd115}, [%rd50];
	ld.global.nc.v2.f64 	{%fd116, %fd117}, [%rd50+16];
	ld.global.nc.v2.f64 	{%fd118, %fd119}, [%rd50+32];
	add.f64 	%fd28, %fd246, 0d3FF0000000000000;
	mov.f64 	%fd247, 0d3FF0000000000000;
	setp.eq.f64 	%p17, %fd28, 0d0000000000000000;
	@%p17 bra 	$L__BB7_32;

	cvt.rn.ftz.f32.f64 	%f1, %fd28;
	add.ftz.f32 	%f82, %f1, %f1;
	cvt.rni.f32.f32 	%f83, %f82;
	cvt.rzi.ftz.s32.f32 	%r3, %f83;
	neg.ftz.f32 	%f84, %f83;
	fma.rn.ftz.f32 	%f86, %f84, %f211, %f1;
	mul.ftz.f32 	%f87, %f86, 0f34222169;
	fma.rn.ftz.f32 	%f89, %f86, %f214, %f87;
	mul.rn.ftz.f32 	%f2, %f89, %f89;
	and.b32  	%r4, %r3, 1;
	setp.eq.s32 	%p18, %r4, 0;
	selp.f32 	%f3, %f89, 0f3F800000, %p18;
	mov.f32 	%f280, 0fB94D4153;
	@%p18 bra 	$L__BB7_21;

	mov.f32 	%f90, 0fBAB607ED;
	mov.f32 	%f91, 0f37CBAC00;
	fma.rn.ftz.f32 	%f280, %f91, %f2, %f90;

$L__BB7_21:
	selp.f32 	%f92, 0f3C0885E4, 0f3D2AAABB, %p18;
	fma.rn.ftz.f32 	%f93, %f280, %f2, %f92;
	selp.f32 	%f94, 0fBE2AAAA8, 0fBEFFFFFF, %p18;
	fma.rn.ftz.f32 	%f95, %f93, %f2, %f94;
	mov.f32 	%f96, 0f00000000;
	fma.rn.ftz.f32 	%f97, %f2, %f3, %f96;
	fma.rn.ftz.f32 	%f282, %f95, %f97, %f3;
	and.b32  	%r54, %r3, 2;
	setp.eq.s32 	%p20, %r54, 0;
	@%p20 bra 	$L__BB7_23;

	mov.f32 	%f99, 0fBF800000;
	fma.rn.ftz.f32 	%f282, %f282, %f99, %f96;

$L__BB7_23:
	add.f64 	%fd223, %fd246, 0d3FF0000000000000;
	cvt.rn.ftz.f32.f64 	%f259, %fd223;
	cvt.rzi.f32.f32 	%f100, %f259;
	setp.neu.ftz.f32 	%p21, %f100, %f259;
	@%p21 bra 	$L__BB7_25;

	add.f64 	%fd226, %fd246, 0d3FF0000000000000;
	cvt.rn.ftz.f32.f64 	%f260, %fd226;
	mul.rn.ftz.f32 	%f282, %f260, %f96;

$L__BB7_25:
	add.f64 	%fd224, %fd246, 0d3FF0000000000000;
	cvt.ftz.f64.f32 	%fd120, %f282;
	add.f64 	%fd29, %fd120, %fd120;
	mul.f64 	%fd121, %fd224, 0d3FE0000000000000;
	cvt.rn.ftz.f32.f64 	%f11, %fd121;
	add.ftz.f32 	%f103, %f11, %f11;
	cvt.rni.f32.f32 	%f104, %f103;
	cvt.rzi.ftz.s32.f32 	%r5, %f104;
	neg.ftz.f32 	%f105, %f104;
	fma.rn.ftz.f32 	%f107, %f105, %f211, %f11;
	mul.ftz.f32 	%f108, %f107, 0f34222169;
	fma.rn.ftz.f32 	%f110, %f107, %f214, %f108;
	mul.rn.ftz.f32 	%f12, %f110, %f110;
	and.b32  	%r6, %r5, 1;
	setp.eq.s32 	%p22, %r6, 0;
	selp.f32 	%f13, %f110, 0f3F800000, %p22;
	mov.f32 	%f283, 0fB94D4153;
	@%p22 bra 	$L__BB7_27;

	mov.f32 	%f111, 0fBAB607ED;
	mov.f32 	%f112, 0f37CBAC00;
	fma.rn.ftz.f32 	%f283, %f112, %f12, %f111;

$L__BB7_27:
	mov.f32 	%f261, 0f00000000;
	selp.f32 	%f113, 0f3C0885E4, 0f3D2AAABB, %p22;
	fma.rn.ftz.f32 	%f114, %f283, %f12, %f113;
	selp.f32 	%f115, 0fBE2AAAA8, 0fBEFFFFFF, %p22;
	fma.rn.ftz.f32 	%f116, %f114, %f12, %f115;
	fma.rn.ftz.f32 	%f118, %f12, %f13, %f261;
	fma.rn.ftz.f32 	%f285, %f116, %f118, %f13;
	and.b32  	%r55, %r5, 2;
	setp.eq.s32 	%p24, %r55, 0;
	@%p24 bra 	$L__BB7_29;

	mov.f32 	%f262, 0f00000000;
	mov.f32 	%f120, 0fBF800000;
	fma.rn.ftz.f32 	%f285, %f285, %f120, %f262;

$L__BB7_29:
	cvt.rzi.f32.f32 	%f121, %f11;
	setp.neu.ftz.f32 	%p25, %f121, %f11;
	@%p25 bra 	$L__BB7_31;

	mov.f32 	%f263, 0f00000000;
	mul.rn.ftz.f32 	%f285, %f11, %f263;

$L__BB7_31:
	add.f64 	%fd225, %fd246, 0d3FF0000000000000;
	cvt.ftz.f64.f32 	%fd122, %f285;
	mul.f64 	%fd123, %fd29, %fd122;
	mul.f64 	%fd124, %fd225, 0d4023BD3CDC2CAB20;
	mul.f64 	%fd125, %fd225, %fd124;
	div.rn.f64 	%fd247, %fd123, %fd125;

$L__BB7_32:
	mov.f64 	%fd248, 0d3FF0000000000000;
	add.f64 	%fd32, %fd246, 0d0000000000000000;
	setp.eq.f64 	%p26, %fd32, 0d0000000000000000;
	@%p26 bra 	$L__BB7_46;

	cvt.rn.ftz.f32.f64 	%f21, %fd32;
	add.ftz.f32 	%f124, %f21, %f21;
	cvt.rni.f32.f32 	%f125, %f124;
	cvt.rzi.ftz.s32.f32 	%r7, %f125;
	neg.ftz.f32 	%f126, %f125;
	fma.rn.ftz.f32 	%f128, %f126, %f211, %f21;
	mul.ftz.f32 	%f129, %f128, 0f34222169;
	fma.rn.ftz.f32 	%f131, %f128, %f214, %f129;
	mul.rn.ftz.f32 	%f22, %f131, %f131;
	and.b32  	%r8, %r7, 1;
	setp.eq.s32 	%p27, %r8, 0;
	selp.f32 	%f23, %f131, 0f3F800000, %p27;
	mov.f32 	%f286, 0fB94D4153;
	@%p27 bra 	$L__BB7_35;

	mov.f32 	%f132, 0fBAB607ED;
	mov.f32 	%f133, 0f37CBAC00;
	fma.rn.ftz.f32 	%f286, %f133, %f22, %f132;

$L__BB7_35:
	selp.f32 	%f134, 0f3C0885E4, 0f3D2AAABB, %p27;
	fma.rn.ftz.f32 	%f135, %f286, %f22, %f134;
	selp.f32 	%f136, 0fBE2AAAA8, 0fBEFFFFFF, %p27;
	fma.rn.ftz.f32 	%f137, %f135, %f22, %f136;
	mov.f32 	%f138, 0f00000000;
	fma.rn.ftz.f32 	%f139, %f22, %f23, %f138;
	fma.rn.ftz.f32 	%f288, %f137, %f139, %f23;
	and.b32  	%r56, %r7, 2;
	setp.eq.s32 	%p29, %r56, 0;
	@%p29 bra 	$L__BB7_37;

	mov.f32 	%f266, 0f00000000;
	mov.f32 	%f141, 0fBF800000;
	fma.rn.ftz.f32 	%f288, %f288, %f141, %f266;

$L__BB7_37:
	add.f64 	%fd227, %fd246, 0d0000000000000000;
	cvt.rn.ftz.f32.f64 	%f264, %fd227;
	cvt.rzi.f32.f32 	%f142, %f264;
	setp.neu.ftz.f32 	%p30, %f142, %f264;
	@%p30 bra 	$L__BB7_39;

	mov.f32 	%f270, 0f00000000;
	add.f64 	%fd230, %fd246, 0d0000000000000000;
	cvt.rn.ftz.f32.f64 	%f265, %fd230;
	mul.rn.ftz.f32 	%f288, %f265, %f270;

$L__BB7_39:
	add.f64 	%fd228, %fd246, 0d0000000000000000;
	cvt.ftz.f64.f32 	%fd127, %f288;
	add.f64 	%fd33, %fd127, %fd127;
	mul.f64 	%fd128, %fd228, 0d3FE0000000000000;
	cvt.rn.ftz.f32.f64 	%f31, %fd128;
	add.ftz.f32 	%f145, %f31, %f31;
	cvt.rni.f32.f32 	%f146, %f145;
	cvt.rzi.ftz.s32.f32 	%r9, %f146;
	neg.ftz.f32 	%f147, %f146;
	fma.rn.ftz.f32 	%f149, %f147, %f211, %f31;
	mul.ftz.f32 	%f150, %f149, 0f34222169;
	fma.rn.ftz.f32 	%f152, %f149, %f214, %f150;
	mul.rn.ftz.f32 	%f32, %f152, %f152;
	and.b32  	%r10, %r9, 1;
	setp.eq.s32 	%p31, %r10, 0;
	selp.f32 	%f33, %f152, 0f3F800000, %p31;
	mov.f32 	%f289, 0fB94D4153;
	@%p31 bra 	$L__BB7_41;

	mov.f32 	%f153, 0fBAB607ED;
	mov.f32 	%f154, 0f37CBAC00;
	fma.rn.ftz.f32 	%f289, %f154, %f32, %f153;

$L__BB7_41:
	mov.f32 	%f267, 0f00000000;
	selp.f32 	%f155, 0f3C0885E4, 0f3D2AAABB, %p31;
	fma.rn.ftz.f32 	%f156, %f289, %f32, %f155;
	selp.f32 	%f157, 0fBE2AAAA8, 0fBEFFFFFF, %p31;
	fma.rn.ftz.f32 	%f158, %f156, %f32, %f157;
	fma.rn.ftz.f32 	%f160, %f32, %f33, %f267;
	fma.rn.ftz.f32 	%f291, %f158, %f160, %f33;
	and.b32  	%r57, %r9, 2;
	setp.eq.s32 	%p33, %r57, 0;
	@%p33 bra 	$L__BB7_43;

	mov.f32 	%f268, 0f00000000;
	mov.f32 	%f162, 0fBF800000;
	fma.rn.ftz.f32 	%f291, %f291, %f162, %f268;

$L__BB7_43:
	cvt.rzi.f32.f32 	%f163, %f31;
	setp.neu.ftz.f32 	%p34, %f163, %f31;
	@%p34 bra 	$L__BB7_45;

	mov.f32 	%f269, 0f00000000;
	mul.rn.ftz.f32 	%f291, %f31, %f269;

$L__BB7_45:
	add.f64 	%fd229, %fd246, 0d0000000000000000;
	cvt.ftz.f64.f32 	%fd129, %f291;
	mul.f64 	%fd130, %fd33, %fd129;
	mul.f64 	%fd131, %fd229, 0d4023BD3CDC2CAB20;
	mul.f64 	%fd132, %fd229, %fd131;
	div.rn.f64 	%fd248, %fd130, %fd132;

$L__BB7_46:
	mov.f64 	%fd249, 0d3FF0000000000000;
	add.f64 	%fd36, %fd246, 0dBFF0000000000000;
	setp.eq.f64 	%p35, %fd36, 0d0000000000000000;
	@%p35 bra 	$L__BB7_60;

	cvt.rn.ftz.f32.f64 	%f41, %fd36;
	add.ftz.f32 	%f166, %f41, %f41;
	cvt.rni.f32.f32 	%f167, %f166;
	cvt.rzi.ftz.s32.f32 	%r11, %f167;
	neg.ftz.f32 	%f168, %f167;
	fma.rn.ftz.f32 	%f170, %f168, %f211, %f41;
	mul.ftz.f32 	%f171, %f170, 0f34222169;
	fma.rn.ftz.f32 	%f173, %f170, %f214, %f171;
	mul.rn.ftz.f32 	%f42, %f173, %f173;
	and.b32  	%r12, %r11, 1;
	setp.eq.s32 	%p36, %r12, 0;
	selp.f32 	%f43, %f173, 0f3F800000, %p36;
	mov.f32 	%f292, 0fB94D4153;
	@%p36 bra 	$L__BB7_49;

	mov.f32 	%f174, 0fBAB607ED;
	mov.f32 	%f175, 0f37CBAC00;
	fma.rn.ftz.f32 	%f292, %f175, %f42, %f174;

$L__BB7_49:
	selp.f32 	%f176, 0f3C0885E4, 0f3D2AAABB, %p36;
	fma.rn.ftz.f32 	%f177, %f292, %f42, %f176;
	selp.f32 	%f178, 0fBE2AAAA8, 0fBEFFFFFF, %p36;
	fma.rn.ftz.f32 	%f179, %f177, %f42, %f178;
	mov.f32 	%f180, 0f00000000;
	fma.rn.ftz.f32 	%f181, %f42, %f43, %f180;
	fma.rn.ftz.f32 	%f294, %f179, %f181, %f43;
	and.b32  	%r58, %r11, 2;
	setp.eq.s32 	%p38, %r58, 0;
	@%p38 bra 	$L__BB7_51;

	mov.f32 	%f256, 0f00000000;
	mov.f32 	%f183, 0fBF800000;
	fma.rn.ftz.f32 	%f294, %f294, %f183, %f256;

$L__BB7_51:
	add.f64 	%fd231, %fd246, 0dBFF0000000000000;
	cvt.rn.ftz.f32.f64 	%f271, %fd231;
	cvt.rzi.f32.f32 	%f184, %f271;
	setp.neu.ftz.f32 	%p39, %f184, %f271;
	@%p39 bra 	$L__BB7_53;

	add.f64 	%fd234, %fd246, 0dBFF0000000000000;
	cvt.rn.ftz.f32.f64 	%f272, %fd234;
	mov.f32 	%f257, 0f00000000;
	mul.rn.ftz.f32 	%f294, %f272, %f257;

$L__BB7_53:
	add.f64 	%fd232, %fd246, 0dBFF0000000000000;
	cvt.ftz.f64.f32 	%fd134, %f294;
	add.f64 	%fd37, %fd134, %fd134;
	mul.f64 	%fd135, %fd232, 0d3FE0000000000000;
	cvt.rn.ftz.f32.f64 	%f51, %fd135;
	add.ftz.f32 	%f187, %f51, %f51;
	cvt.rni.f32.f32 	%f188, %f187;
	cvt.rzi.ftz.s32.f32 	%r13, %f188;
	neg.ftz.f32 	%f189, %f188;
	fma.rn.ftz.f32 	%f191, %f189, %f211, %f51;
	mul.ftz.f32 	%f192, %f191, 0f34222169;
	fma.rn.ftz.f32 	%f194, %f191, %f214, %f192;
	mul.rn.ftz.f32 	%f52, %f194, %f194;
	and.b32  	%r14, %r13, 1;
	setp.eq.s32 	%p40, %r14, 0;
	selp.f32 	%f53, %f194, 0f3F800000, %p40;
	mov.f32 	%f295, 0fB94D4153;
	@%p40 bra 	$L__BB7_55;

	mov.f32 	%f195, 0fBAB607ED;
	mov.f32 	%f196, 0f37CBAC00;
	fma.rn.ftz.f32 	%f295, %f196, %f52, %f195;

$L__BB7_55:
	mov.f32 	%f253, 0f00000000;
	selp.f32 	%f197, 0f3C0885E4, 0f3D2AAABB, %p40;
	fma.rn.ftz.f32 	%f198, %f295, %f52, %f197;
	selp.f32 	%f199, 0fBE2AAAA8, 0fBEFFFFFF, %p40;
	fma.rn.ftz.f32 	%f200, %f198, %f52, %f199;
	fma.rn.ftz.f32 	%f202, %f52, %f53, %f253;
	fma.rn.ftz.f32 	%f297, %f200, %f202, %f53;
	and.b32  	%r59, %r13, 2;
	setp.eq.s32 	%p42, %r59, 0;
	@%p42 bra 	$L__BB7_57;

	mov.f32 	%f254, 0f00000000;
	mov.f32 	%f204, 0fBF800000;
	fma.rn.ftz.f32 	%f297, %f297, %f204, %f254;

$L__BB7_57:
	cvt.rzi.f32.f32 	%f205, %f51;
	setp.neu.ftz.f32 	%p43, %f205, %f51;
	@%p43 bra 	$L__BB7_59;

	mov.f32 	%f258, 0f00000000;
	mul.rn.ftz.f32 	%f297, %f51, %f258;

$L__BB7_59:
	add.f64 	%fd233, %fd246, 0dBFF0000000000000;
	cvt.ftz.f64.f32 	%fd136, %f297;
	mul.f64 	%fd137, %fd37, %fd136;
	mul.f64 	%fd138, %fd233, 0d4023BD3CDC2CAB20;
	mul.f64 	%fd139, %fd233, %fd138;
	div.rn.f64 	%fd249, %fd137, %fd139;

$L__BB7_60:
	mov.f64 	%fd250, 0d3FF0000000000000;
	add.f64 	%fd40, %fd246, 0dC000000000000000;
	setp.eq.f64 	%p44, %fd40, 0d0000000000000000;
	@%p44 bra 	$L__BB7_74;

	mov.f32 	%f298, 0fB94D4153;
	cvt.rn.ftz.f32.f64 	%f61, %fd40;
	add.ftz.f32 	%f208, %f61, %f61;
	cvt.rni.f32.f32 	%f209, %f208;
	cvt.rzi.ftz.s32.f32 	%r15, %f209;
	neg.ftz.f32 	%f210, %f209;
	fma.rn.ftz.f32 	%f212, %f210, %f211, %f61;
	mul.ftz.f32 	%f213, %f212, 0f34222169;
	fma.rn.ftz.f32 	%f215, %f212, %f214, %f213;
	mul.rn.ftz.f32 	%f62, %f215, %f215;
	and.b32  	%r16, %r15, 1;
	setp.eq.s32 	%p45, %r16, 0;
	selp.f32 	%f63, %f215, 0f3F800000, %p45;
	@%p45 bra 	$L__BB7_63;

	mov.f32 	%f216, 0fBAB607ED;
	mov.f32 	%f217, 0f37CBAC00;
	fma.rn.ftz.f32 	%f298, %f217, %f62, %f216;

$L__BB7_63:
	selp.f32 	%f218, 0f3C0885E4, 0f3D2AAABB, %p45;
	fma.rn.ftz.f32 	%f219, %f298, %f62, %f218;
	selp.f32 	%f220, 0fBE2AAAA8, 0fBEFFFFFF, %p45;
	fma.rn.ftz.f32 	%f221, %f219, %f62, %f220;
	mov.f32 	%f222, 0f00000000;
	fma.rn.ftz.f32 	%f223, %f62, %f63, %f222;
	fma.rn.ftz.f32 	%f300, %f221, %f223, %f63;
	and.b32  	%r60, %r15, 2;
	setp.eq.s32 	%p47, %r60, 0;
	@%p47 bra 	$L__BB7_65;

	mov.f32 	%f275, 0f00000000;
	mov.f32 	%f225, 0fBF800000;
	fma.rn.ftz.f32 	%f300, %f300, %f225, %f275;

$L__BB7_65:
	add.f64 	%fd235, %fd246, 0dC000000000000000;
	cvt.rn.ftz.f32.f64 	%f273, %fd235;
	cvt.rzi.f32.f32 	%f226, %f273;
	setp.neu.ftz.f32 	%p48, %f226, %f273;
	@%p48 bra 	$L__BB7_67;

	mov.f32 	%f279, 0f00000000;
	add.f64 	%fd238, %fd246, 0dC000000000000000;
	cvt.rn.ftz.f32.f64 	%f274, %fd238;
	mul.rn.ftz.f32 	%f300, %f274, %f279;

$L__BB7_67:
	add.f64 	%fd236, %fd246, 0dC000000000000000;
	cvt.ftz.f64.f32 	%fd141, %f300;
	add.f64 	%fd41, %fd141, %fd141;
	mul.f64 	%fd142, %fd236, 0d3FE0000000000000;
	cvt.rn.ftz.f32.f64 	%f71, %fd142;
	add.ftz.f32 	%f229, %f71, %f71;
	cvt.rni.f32.f32 	%f230, %f229;
	cvt.rzi.ftz.s32.f32 	%r17, %f230;
	neg.ftz.f32 	%f231, %f230;
	fma.rn.ftz.f32 	%f233, %f231, %f211, %f71;
	mul.ftz.f32 	%f234, %f233, 0f34222169;
	fma.rn.ftz.f32 	%f236, %f233, %f214, %f234;
	mul.rn.ftz.f32 	%f72, %f236, %f236;
	and.b32  	%r18, %r17, 1;
	setp.eq.s32 	%p49, %r18, 0;
	selp.f32 	%f73, %f236, 0f3F800000, %p49;
	mov.f32 	%f301, 0fB94D4153;
	@%p49 bra 	$L__BB7_69;

	mov.f32 	%f237, 0fBAB607ED;
	mov.f32 	%f238, 0f37CBAC00;
	fma.rn.ftz.f32 	%f301, %f238, %f72, %f237;

$L__BB7_69:
	mov.f32 	%f276, 0f00000000;
	selp.f32 	%f239, 0f3C0885E4, 0f3D2AAABB, %p49;
	fma.rn.ftz.f32 	%f240, %f301, %f72, %f239;
	selp.f32 	%f241, 0fBE2AAAA8, 0fBEFFFFFF, %p49;
	fma.rn.ftz.f32 	%f242, %f240, %f72, %f241;
	fma.rn.ftz.f32 	%f244, %f72, %f73, %f276;
	fma.rn.ftz.f32 	%f303, %f242, %f244, %f73;
	and.b32  	%r61, %r17, 2;
	setp.eq.s32 	%p51, %r61, 0;
	@%p51 bra 	$L__BB7_71;

	mov.f32 	%f277, 0f00000000;
	mov.f32 	%f246, 0fBF800000;
	fma.rn.ftz.f32 	%f303, %f303, %f246, %f277;

$L__BB7_71:
	cvt.rzi.f32.f32 	%f247, %f71;
	setp.neu.ftz.f32 	%p52, %f247, %f71;
	@%p52 bra 	$L__BB7_73;

	mov.f32 	%f278, 0f00000000;
	mul.rn.ftz.f32 	%f303, %f71, %f278;

$L__BB7_73:
	add.f64 	%fd237, %fd246, 0dC000000000000000;
	cvt.ftz.f64.f32 	%fd143, %f303;
	mul.f64 	%fd144, %fd41, %fd143;
	mul.f64 	%fd145, %fd237, 0d4023BD3CDC2CAB20;
	mul.f64 	%fd146, %fd237, %fd145;
	div.rn.f64 	%fd250, %fd144, %fd146;

$L__BB7_74:
	mul.f64 	%fd147, %fd114, %fd248;
	fma.rn.f64 	%fd148, %fd112, %fd247, %fd147;
	mul.f64 	%fd149, %fd115, %fd248;
	fma.rn.f64 	%fd150, %fd113, %fd247, %fd149;
	fma.rn.f64 	%fd151, %fd116, %fd249, %fd148;
	fma.rn.f64 	%fd152, %fd117, %fd249, %fd150;
	fma.rn.f64 	%fd255, %fd118, %fd250, %fd151;
	fma.rn.f64 	%fd256, %fd119, %fd250, %fd152;
	bra.uni 	$L__BB7_93;

$L__BB7_78:
	add.f64 	%fd251, %fd13, %fd13;
	mov.f64 	%fd252, %fd251;

$L__BB7_80:
	cvt.rzi.s32.f64 	%r20, %fd251;
	setp.lt.s32 	%p57, %r20, 1;
	add.s32 	%r73, %r20, 2;
	cvt.s64.s32 	%rd51, %r73;
	setp.le.u64 	%p58, %rd10, %rd51;
	or.pred  	%p59, %p57, %p58;
	mov.f64 	%fd256, %fd255;
	@%p59 bra 	$L__BB7_93;

	mul.wide.s32 	%rd52, %r20, 16;
	add.s64 	%rd53, %rd1, %rd52;
	ld.global.nc.v2.f64 	{%fd157, %fd158}, [%rd53+-16];
	ld.global.nc.v2.f64 	{%fd161, %fd162}, [%rd53];
	ld.global.nc.v2.f64 	{%fd165, %fd166}, [%rd53+16];
	ld.global.nc.v2.f64 	{%fd169, %fd170}, [%rd53+32];
	fma.rn.f64 	%fd173, %fd252, 0d4000000000000000, 0dBFF0000000000000;
	mov.f64 	%fd174, 0d3FF0000000000000;
	fma.rn.f64 	%fd175, %fd252, %fd173, 0dBFF0000000000000;
	fma.rn.f64 	%fd176, %fd252, %fd175, 0d0000000000000000;
	fma.rn.f64 	%fd177, %fd252, 0dC014000000000000, 0d4008000000000000;
	fma.rn.f64 	%fd178, %fd252, %fd177, 0d0000000000000000;
	fma.rn.f64 	%fd179, %fd252, %fd178, 0d4000000000000000;
	fma.rn.f64 	%fd180, %fd252, 0d4010000000000000, 0dC008000000000000;
	fma.rn.f64 	%fd181, %fd252, %fd180, 0d3FF0000000000000;
	fma.rn.f64 	%fd182, %fd252, %fd181, 0d0000000000000000;
	sub.f64 	%fd183, %fd174, %fd252;
	fma.rn.f64 	%fd184, %fd252, %fd183, 0d0000000000000000;
	fma.rn.f64 	%fd185, %fd252, %fd184, 0d0000000000000000;
	mul.f64 	%fd186, %fd179, %fd161;
	mul.f64 	%fd187, %fd179, %fd162;
	fma.rn.f64 	%fd188, %fd176, %fd157, %fd186;
	fma.rn.f64 	%fd189, %fd176, %fd158, %fd187;
	fma.rn.f64 	%fd190, %fd182, %fd165, %fd188;
	fma.rn.f64 	%fd191, %fd182, %fd166, %fd189;
	fma.rn.f64 	%fd192, %fd185, %fd169, %fd190;
	fma.rn.f64 	%fd193, %fd185, %fd170, %fd191;
	mul.f64 	%fd256, %fd193, 0d3FE0000000000000;
	mul.f64 	%fd255, %fd192, 0d3FE0000000000000;

$L__BB7_93:
	fma.rn.f64 	%fd258, %fd10, %fd255, %fd258;
	fma.rn.f64 	%fd257, %fd10, %fd256, %fd257;
	add.s64 	%rd83, %rd83, %rd13;
	add.s64 	%rd84, %rd84, 1;
	setp.lt.u64 	%p68, %rd84, %rd20;
	@%p68 bra 	$L__BB7_7;

$L__BB7_94:
	add.s64 	%rd82, %rd82, 1;
	setp.lt.u64 	%p69, %rd82, %rd11;
	@%p69 bra 	$L__BB7_5;

$L__BB7_95:
	ld.const.u64 	%rd66, [QUPS_I];
	add.s64 	%rd81, %rd81, 1;
	setp.lt.u64 	%p70, %rd81, %rd66;
	@%p70 bra 	$L__BB7_3;

$L__BB7_96:
	ld.param.u64 	%rd71, [_Z6greensP7double2PKdS2_S2_S2_PKS_ddddPKii_param_0];
	ld.const.u64 	%rd70, [QUPS_S];
	ld.const.u64 	%rd69, [QUPS_N];
	mov.u32 	%r96, %tid.y;
	mov.u32 	%r95, %ntid.y;
	mov.u32 	%r94, %ctaid.y;
	mad.lo.s32 	%r93, %r94, %r95, %r96;
	cvt.u64.u32 	%rd68, %r93;
	mov.u32 	%r92, %tid.x;
	mov.u32 	%r91, %ntid.x;
	mov.u32 	%r90, %ctaid.x;
	mad.lo.s32 	%r89, %r90, %r91, %r92;
	cvt.u64.u32 	%rd67, %r89;
	mul.lo.s64 	%rd59, %rd69, %rd4;
	add.s64 	%rd60, %rd59, %rd68;
	mul.lo.s64 	%rd61, %rd60, %rd70;
	add.s64 	%rd62, %rd61, %rd67;
	cvta.to.global.u64 	%rd63, %rd71;
	shl.b64 	%rd64, %rd62, 4;
	add.s64 	%rd65, %rd63, %rd64;
	st.global.v2.f64 	[%rd65], {%fd258, %fd257};

$L__BB7_97:
	ret;

}
	// .globl	_Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii
.visible .entry _Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii(
	.param .u64 _Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_0,
	.param .u64 _Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_1,
	.param .u64 _Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_2,
	.param .u64 _Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_3,
	.param .u64 _Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_4,
	.param .u64 _Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_5,
	.param .f32 _Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_6,
	.param .f32 _Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_7,
	.param .f32 _Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_8,
	.param .f32 _Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_9,
	.param .u64 _Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_10,
	.param .u32 _Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_11
)
{
	.reg .pred 	%p<82>;
	.reg .b16 	%rs<340>;
	.reg .f32 	%f<483>;
	.reg .b32 	%r<165>;
	.reg .f64 	%fd<13>;
	.reg .b64 	%rd<88>;


	ld.param.u64 	%rd32, [_Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_3];
	ld.param.u64 	%rd33, [_Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_4];
	ld.param.u64 	%rd35, [_Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_5];
	ld.param.u64 	%rd34, [_Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_10];
	ld.param.u32 	%r44, [_Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_11];
	cvta.to.global.u64 	%rd1, %rd35;
	mov.u32 	%r45, %ntid.x;
	mov.u32 	%r46, %ctaid.x;
	mov.u32 	%r47, %tid.x;
	mad.lo.s32 	%r48, %r46, %r45, %r47;
	cvt.u64.u32 	%rd2, %r48;
	mov.u32 	%r49, %ntid.y;
	mov.u32 	%r50, %ctaid.y;
	mov.u32 	%r51, %tid.y;
	mad.lo.s32 	%r52, %r50, %r49, %r51;
	cvt.u64.u32 	%rd3, %r52;
	mov.u32 	%r53, %ntid.z;
	mov.u32 	%r54, %ctaid.z;
	mov.u32 	%r55, %tid.z;
	mad.lo.s32 	%r56, %r54, %r53, %r55;
	cvt.u64.u32 	%rd4, %r56;
	ld.const.u64 	%rd5, [QUPS_N];
	ld.const.u64 	%rd6, [QUPS_I];
	ld.const.u64 	%rd7, [QUPS_S];
	mov.f32 	%f139, 0f00000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs55, %f139;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs56, %f139;}

	// end inline asm
	mov.b32 	%r1, {%rs55, %rs56};
	setp.le.u64 	%p1, %rd7, %rd2;
	@%p1 bra 	$L__BB8_123;

	setp.eq.s64 	%p2, %rd6, 0;
	mov.u32 	%r162, %r1;
	@%p2 bra 	$L__BB8_122;

	cvta.to.global.u64 	%rd9, %rd34;
	ld.const.u64 	%rd10, [QUPS_T];
	mov.u64 	%rd84, 0;
	ld.global.nc.u32 	%r57, [%rd9+4];
	cvt.s64.s32 	%rd11, %r57;
	cvta.to.global.u64 	%rd37, %rd32;
	mul.lo.s64 	%rd38, %rd3, 12;
	add.s64 	%rd39, %rd37, %rd38;
	add.s64 	%rd12, %rd39, 8;
	mul.lo.s64 	%rd13, %rd5, 12;
	cvta.to.global.u64 	%rd15, %rd33;
	cvt.u32.u64 	%r58, %rd11;
	setp.eq.s32 	%p3, %r58, 0;
	cvt.rn.f32.u64 	%f5, %rd2;
	setp.gt.s32 	%p5, %r44, 1;
	setp.eq.s32 	%p9, %r44, 0;
	setp.eq.s32 	%p10, %r44, 1;
	mov.f64 	%fd1, 0d0000000000000000;
	// begin inline asm
	{  cvt.rn.f16.f64 %rs85, %fd1;}

	// end inline asm
	mov.f64 	%fd3, 0d4000000000000000;
	// begin inline asm
	{  cvt.rn.f16.f64 %rs102, %fd3;}

	// end inline asm
	mov.f64 	%fd11, 0d3FF0000000000000;
	// begin inline asm
	{  cvt.rn.f16.f64 %rs199, %fd11;}

	// end inline asm
	mov.u32 	%r162, %r1;

$L__BB8_3:
	@%p3 bra 	$L__BB8_121;

	ld.global.nc.u32 	%r59, [%rd9];
	cvt.s64.s32 	%rd20, %r59;
	mov.u64 	%rd85, 0;

$L__BB8_5:
	cvt.u32.u64 	%r60, %rd20;
	setp.eq.s32 	%p4, %r60, 0;
	@%p4 bra 	$L__BB8_120;

	ld.param.u64 	%rd83, [_Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_2];
	shl.b64 	%rd82, %rd84, 1;
	cvta.to.global.u64 	%rd81, %rd83;
	add.s64 	%rd80, %rd81, %rd82;
	ld.param.u64 	%rd79, [_Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_1];
	mul.lo.s64 	%rd78, %rd84, 12;
	cvta.to.global.u64 	%rd77, %rd79;
	add.s64 	%rd76, %rd77, %rd78;
	ld.const.u64 	%rd75, [QUPS_M];
	mul.lo.s64 	%rd44, %rd85, %rd75;
	add.s64 	%rd45, %rd44, %rd4;
	mul.lo.s64 	%rd46, %rd45, 12;
	add.s64 	%rd47, %rd15, %rd46;
	ld.global.nc.f32 	%f140, [%rd47];
	ld.global.nc.f32 	%f1, [%rd76];
	sub.ftz.f32 	%f141, %f1, %f140;
	ld.global.nc.f32 	%f142, [%rd47+4];
	ld.global.nc.f32 	%f2, [%rd76+4];
	sub.ftz.f32 	%f143, %f2, %f142;
	ld.global.nc.f32 	%f144, [%rd47+8];
	ld.global.nc.f32 	%f3, [%rd76+8];
	sub.ftz.f32 	%f145, %f3, %f144;
	mul.ftz.f32 	%f146, %f143, %f143;
	fma.rn.ftz.f32 	%f147, %f141, %f141, %f146;
	fma.rn.ftz.f32 	%f148, %f145, %f145, %f147;
	sqrt.approx.ftz.f32 	%f4, %f148;
	ld.global.nc.u16 	%rs3, [%rd80];
	mov.u64 	%rd87, 0;
	mov.u64 	%rd86, %rd12;

$L__BB8_7:
	ld.param.f32 	%f426, [_Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_8];
	ld.param.f32 	%f425, [_Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_7];
	ld.param.f32 	%f424, [_Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_6];
	ld.param.f32 	%f423, [_Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_9];
	ld.global.nc.f32 	%f150, [%rd86+-8];
	sub.ftz.f32 	%f151, %f1, %f150;
	ld.global.nc.f32 	%f152, [%rd86+-4];
	sub.ftz.f32 	%f153, %f2, %f152;
	ld.global.nc.f32 	%f154, [%rd86];
	sub.ftz.f32 	%f155, %f3, %f154;
	mul.ftz.f32 	%f156, %f153, %f153;
	fma.rn.ftz.f32 	%f157, %f151, %f151, %f156;
	fma.rn.ftz.f32 	%f158, %f155, %f155, %f157;
	sqrt.approx.ftz.f32 	%f159, %f158;
	add.ftz.f32 	%f160, %f159, %f4;
	mul.ftz.f32 	%f161, %f160, %f423;
	sub.ftz.f32 	%f162, %f424, %f161;
	sub.ftz.f32 	%f163, %f162, %f425;
	fma.rn.ftz.f32 	%f149, %f163, %f426, %f5;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs57, %f149;}

	// end inline asm
	@%p5 bra 	$L__BB8_10;
	bra.uni 	$L__BB8_8;

$L__BB8_10:
	setp.eq.s32 	%p6, %r44, 2;
	@%p6 bra 	$L__BB8_98;

	setp.eq.s32 	%p7, %r44, 3;
	@%p7 bra 	$L__BB8_22;

	setp.ne.s32 	%p8, %r44, 4;
	mov.u16 	%rs338, %rs56;
	mov.u16 	%rs339, %rs55;
	@%p8 bra 	$L__BB8_119;

	// begin inline asm
	{  cvt.f32.f16 %f451, %rs57;}

	// end inline asm
	abs.ftz.f32 	%f7, %f451;
	setp.lt.ftz.f32 	%p11, %f7, 0f7F800000;
	@%p11 bra 	$L__BB8_17;
	bra.uni 	$L__BB8_14;

$L__BB8_17:
	cvt.rzi.f32.f32 	%f10, %f451;
	sub.ftz.f32 	%f165, %f451, %f10;
	mov.b32 	%r63, %f165;
	mov.b32 	%r64, %f451;
	and.b32  	%r65, %r64, -2147483648;
	or.b32  	%r66, %r65, %r63;
	mov.b32 	%f452, %r66;
	mov.f32 	%f451, %f10;
	bra.uni 	$L__BB8_18;

$L__BB8_8:
	@%p9 bra 	$L__BB8_115;

	mov.u16 	%rs338, %rs56;
	mov.u16 	%rs339, %rs55;
	@%p10 bra 	$L__BB8_106;
	bra.uni 	$L__BB8_119;

$L__BB8_106:
	// begin inline asm
	{  cvt.f32.f16 %f481, %rs57;}

	// end inline asm
	abs.ftz.f32 	%f127, %f481;
	setp.lt.ftz.f32 	%p73, %f127, 0f7F800000;
	@%p73 bra 	$L__BB8_110;
	bra.uni 	$L__BB8_107;

$L__BB8_110:
	cvt.rzi.f32.f32 	%f130, %f481;
	sub.ftz.f32 	%f414, %f481, %f130;
	mov.b32 	%r126, %f414;
	mov.b32 	%r127, %f481;
	and.b32  	%r128, %r127, -2147483648;
	or.b32  	%r129, %r128, %r126;
	mov.b32 	%f482, %r129;
	mov.f32 	%f481, %f130;
	bra.uni 	$L__BB8_111;

$L__BB8_98:
	// begin inline asm
	{  cvt.f32.f16 %f479, %rs57;}

	// end inline asm
	abs.ftz.f32 	%f119, %f479;
	setp.lt.ftz.f32 	%p68, %f119, 0f7F800000;
	@%p68 bra 	$L__BB8_102;
	bra.uni 	$L__BB8_99;

$L__BB8_102:
	cvt.rzi.f32.f32 	%f122, %f479;
	sub.ftz.f32 	%f398, %f479, %f122;
	mov.b32 	%r106, %f398;
	mov.b32 	%r107, %f479;
	and.b32  	%r108, %r107, -2147483648;
	or.b32  	%r109, %r108, %r106;
	mov.b32 	%f480, %r109;
	mov.f32 	%f479, %f122;
	bra.uni 	$L__BB8_103;

$L__BB8_22:
	// begin inline asm
	{  cvt.f32.f16 %f453, %rs57;}

	// end inline asm
	abs.ftz.f32 	%f15, %f453;
	setp.lt.ftz.f32 	%p15, %f15, 0f7F800000;
	@%p15 bra 	$L__BB8_26;
	bra.uni 	$L__BB8_23;

$L__BB8_26:
	cvt.rzi.f32.f32 	%f18, %f453;
	sub.ftz.f32 	%f168, %f453, %f18;
	mov.b32 	%r78, %f168;
	mov.b32 	%r79, %f453;
	and.b32  	%r80, %r79, -2147483648;
	or.b32  	%r81, %r80, %r78;
	mov.b32 	%f454, %r81;
	mov.f32 	%f453, %f18;
	bra.uni 	$L__BB8_27;

$L__BB8_115:
	// begin inline asm
	{  cvt.f32.f16 %f416, %rs57;}

	// end inline asm
	mov.b32 	%r139, %f416;
	and.b32  	%r140, %r139, -2147483648;
	or.b32  	%r141, %r140, 1056964608;
	mov.b32 	%f417, %r141;
	add.rz.ftz.f32 	%f418, %f416, %f417;
	cvt.rzi.f32.f32 	%f419, %f418;
	cvt.rzi.ftz.s32.f32 	%r37, %f419;
	setp.lt.s32 	%p77, %r37, 0;
	mov.u32 	%r161, %r1;
	@%p77 bra 	$L__BB8_118;

	cvt.s64.s32 	%rd24, %r37;
	setp.le.u64 	%p78, %rd10, %rd24;
	mov.u32 	%r161, %r1;
	@%p78 bra 	$L__BB8_118;

	shl.b64 	%rd60, %rd24, 2;
	add.s64 	%rd61, %rd1, %rd60;
	ld.global.nc.v2.u16 	{%rs322, %rs323}, [%rd61];
	// begin inline asm
	{  mov.b32 %r161, {%rs322,%rs323};}

	// end inline asm

$L__BB8_118:
	mov.b32 	{%rs339, %rs338}, %r161;
	bra.uni 	$L__BB8_119;

$L__BB8_14:
	setp.eq.ftz.f32 	%p12, %f7, 0f7F800000;
	@%p12 bra 	$L__BB8_16;
	bra.uni 	$L__BB8_15;

$L__BB8_16:
	mov.b32 	%r61, %f451;
	and.b32  	%r62, %r61, -2147483648;
	mov.b32 	%f452, %r62;
	bra.uni 	$L__BB8_18;

$L__BB8_107:
	setp.eq.ftz.f32 	%p74, %f127, 0f7F800000;
	@%p74 bra 	$L__BB8_109;
	bra.uni 	$L__BB8_108;

$L__BB8_109:
	mov.b32 	%r124, %f481;
	and.b32  	%r125, %r124, -2147483648;
	mov.b32 	%f482, %r125;
	bra.uni 	$L__BB8_111;

$L__BB8_99:
	setp.eq.ftz.f32 	%p69, %f119, 0f7F800000;
	@%p69 bra 	$L__BB8_101;
	bra.uni 	$L__BB8_100;

$L__BB8_101:
	mov.b32 	%r104, %f479;
	and.b32  	%r105, %r104, -2147483648;
	mov.b32 	%f480, %r105;
	bra.uni 	$L__BB8_103;

$L__BB8_23:
	setp.eq.ftz.f32 	%p16, %f15, 0f7F800000;
	@%p16 bra 	$L__BB8_25;
	bra.uni 	$L__BB8_24;

$L__BB8_25:
	mov.b32 	%r76, %f453;
	and.b32  	%r77, %r76, -2147483648;
	mov.b32 	%f454, %r77;
	bra.uni 	$L__BB8_27;

$L__BB8_15:
	add.ftz.f32 	%f451, %f451, %f451;
	mov.f32 	%f452, %f451;

$L__BB8_18:
	// begin inline asm
	{  cvt.rn.f16.f32 %rs59, %f452;}

	// end inline asm
	cvt.rzi.ftz.s32.f32 	%r5, %f451;
	setp.lt.s32 	%p13, %r5, 0;
	mov.u32 	%r157, %r1;
	@%p13 bra 	$L__BB8_21;

	add.s32 	%r67, %r5, 1;
	cvt.s64.s32 	%rd48, %r67;
	setp.le.u64 	%p14, %rd10, %rd48;
	mov.u32 	%r157, %r1;
	@%p14 bra 	$L__BB8_21;

	mul.wide.s32 	%rd49, %r5, 4;
	add.s64 	%rd50, %rd1, %rd49;
	ld.global.nc.v2.u16 	{%rs70, %rs71}, [%rd50];
	// begin inline asm
	{  mov.b32 %r68, {%rs70,%rs71};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs72, %rs73}, [%rd50+4];
	// begin inline asm
	{  mov.b32 %r69, {%rs72,%rs73};}

	// end inline asm
	// begin inline asm
	{sub.f16x2 %r70,%r69,%r68;
}
	// end inline asm
	mov.b32 	{%rs66, %rs69}, %r70;
	// begin inline asm
	{mul.f16 %rs67,%rs59,%rs69;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs64,%rs59,%rs66;
}
	// end inline asm
	mov.b32 	%r75, {%rs64, %rs67};
	// begin inline asm
	{add.f16x2 %r157,%r68,%r75;
}
	// end inline asm

$L__BB8_21:
	mov.b32 	{%rs339, %rs338}, %r157;
	bra.uni 	$L__BB8_119;

$L__BB8_108:
	add.ftz.f32 	%f481, %f481, %f481;
	mov.f32 	%f482, %f481;

$L__BB8_111:
	// begin inline asm
	{  cvt.rn.f16.f32 %rs304, %f482;}

	// end inline asm
	cvt.rzi.ftz.s32.f32 	%r34, %f481;
	setp.lt.s32 	%p75, %r34, 0;
	mov.u32 	%r160, %r1;
	@%p75 bra 	$L__BB8_114;

	add.s32 	%r130, %r34, 1;
	cvt.s64.s32 	%rd57, %r130;
	setp.le.u64 	%p76, %rd10, %rd57;
	mov.u32 	%r160, %r1;
	@%p76 bra 	$L__BB8_114;

	mul.wide.s32 	%rd58, %r34, 4;
	add.s64 	%rd59, %rd1, %rd58;
	ld.global.nc.v2.u16 	{%rs315, %rs316}, [%rd59];
	// begin inline asm
	{  mov.b32 %r131, {%rs315,%rs316};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs317, %rs318}, [%rd59+4];
	// begin inline asm
	{  mov.b32 %r132, {%rs317,%rs318};}

	// end inline asm
	// begin inline asm
	{sub.f16x2 %r133,%r132,%r131;
}
	// end inline asm
	mov.b32 	{%rs311, %rs314}, %r133;
	// begin inline asm
	{mul.f16 %rs312,%rs304,%rs314;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs309,%rs304,%rs311;
}
	// end inline asm
	mov.b32 	%r138, {%rs309, %rs312};
	// begin inline asm
	{add.f16x2 %r160,%r131,%r138;
}
	// end inline asm

$L__BB8_114:
	mov.b32 	{%rs339, %rs338}, %r160;
	bra.uni 	$L__BB8_119;

$L__BB8_100:
	add.ftz.f32 	%f479, %f479, %f479;
	mov.f32 	%f480, %f479;

$L__BB8_103:
	cvt.rzi.ftz.s32.f32 	%r31, %f479;
	setp.lt.s32 	%p70, %r31, 1;
	add.s32 	%r110, %r31, 2;
	cvt.s64.s32 	%rd54, %r110;
	setp.le.u64 	%p71, %rd10, %rd54;
	or.pred  	%p72, %p70, %p71;
	mov.u32 	%r159, %r1;
	@%p72 bra 	$L__BB8_105;

	mul.wide.s32 	%rd55, %r31, 4;
	add.s64 	%rd56, %rd1, %rd55;
	ld.global.nc.v2.u16 	{%rs295, %rs296}, [%rd56+-4];
	// begin inline asm
	{  mov.b32 %r111, {%rs295,%rs296};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs297, %rs298}, [%rd56];
	// begin inline asm
	{  mov.b32 %r112, {%rs297,%rs298};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs299, %rs300}, [%rd56+4];
	// begin inline asm
	{  mov.b32 %r113, {%rs299,%rs300};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs301, %rs302}, [%rd56+8];
	// begin inline asm
	{  mov.b32 %r114, {%rs301,%rs302};}

	// end inline asm
	fma.rn.ftz.f32 	%f404, %f480, 0f40000000, 0fBF800000;
	mov.f32 	%f405, 0f3F800000;
	fma.rn.ftz.f32 	%f406, %f480, %f404, 0fBF800000;
	fma.rn.ftz.f32 	%f399, %f480, %f406, 0f00000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs260, %f399;}

	// end inline asm
	fma.rn.ftz.f32 	%f407, %f480, 0fC0A00000, 0f40400000;
	fma.rn.ftz.f32 	%f408, %f480, %f407, 0f00000000;
	fma.rn.ftz.f32 	%f400, %f480, %f408, 0f40000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs261, %f400;}

	// end inline asm
	fma.rn.ftz.f32 	%f409, %f480, 0f40800000, 0fC0400000;
	fma.rn.ftz.f32 	%f410, %f480, %f409, 0f3F800000;
	fma.rn.ftz.f32 	%f401, %f480, %f410, 0f00000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs262, %f401;}

	// end inline asm
	sub.ftz.f32 	%f411, %f405, %f480;
	fma.rn.ftz.f32 	%f412, %f480, %f411, 0f00000000;
	fma.rn.ftz.f32 	%f402, %f480, %f412, 0f00000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs263, %f402;}

	// end inline asm
	mov.b32 	{%rs265, %rs268}, %r111;
	mov.b32 	{%rs271, %rs274}, %r112;
	// begin inline asm
	{mul.f16 %rs267,%rs268,%rs260;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs264,%rs265,%rs260;
}
	// end inline asm
	mov.b32 	%r116, {%rs264, %rs267};
	// begin inline asm
	{mul.f16 %rs273,%rs274,%rs261;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs270,%rs271,%rs261;
}
	// end inline asm
	mov.b32 	%r117, {%rs270, %rs273};
	// begin inline asm
	{add.f16x2 %r115,%r116,%r117;
}
	// end inline asm
	mov.b32 	{%rs277, %rs280}, %r113;
	// begin inline asm
	{mul.f16 %rs279,%rs280,%rs262;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs276,%rs277,%rs262;
}
	// end inline asm
	mov.b32 	%r120, {%rs276, %rs279};
	// begin inline asm
	{add.f16x2 %r118,%r115,%r120;
}
	// end inline asm
	mov.b32 	{%rs283, %rs286}, %r114;
	// begin inline asm
	{mul.f16 %rs285,%rs286,%rs263;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs282,%rs283,%rs263;
}
	// end inline asm
	mov.b32 	%r123, {%rs282, %rs285};
	// begin inline asm
	{add.f16x2 %r121,%r118,%r123;
}
	// end inline asm
	mov.b32 	{%rs290, %rs293}, %r121;
	mov.f32 	%f403, 0f3F000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs288, %f403;}

	// end inline asm
	// begin inline asm
	{mul.f16 %rs292,%rs293,%rs288;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs289,%rs290,%rs288;
}
	// end inline asm
	mov.b32 	%r159, {%rs289, %rs292};

$L__BB8_105:
	mov.b32 	{%rs339, %rs338}, %r159;
	bra.uni 	$L__BB8_119;

$L__BB8_24:
	add.ftz.f32 	%f453, %f453, %f453;
	mov.f32 	%f454, %f453;

$L__BB8_27:
	cvt.rzi.ftz.s32.f32 	%r8, %f453;
	setp.lt.s32 	%p17, %r8, 1;
	add.s32 	%r82, %r8, 2;
	cvt.s64.s32 	%rd51, %r82;
	setp.le.u64 	%p18, %rd10, %rd51;
	or.pred  	%p19, %p17, %p18;
	mov.u32 	%r158, %r1;
	@%p19 bra 	$L__BB8_97;

	mul.wide.s32 	%rd52, %r8, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.global.nc.v2.u16 	{%rs89, %rs90}, [%rd53+-4];
	// begin inline asm
	{  mov.b32 %r83, {%rs89,%rs90};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs91, %rs92}, [%rd53];
	// begin inline asm
	{  mov.b32 %r84, {%rs91,%rs92};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs93, %rs94}, [%rd53+4];
	// begin inline asm
	{  mov.b32 %r85, {%rs93,%rs94};}

	// end inline asm
	ld.global.nc.v2.u16 	{%rs95, %rs96}, [%rd53+8];
	// begin inline asm
	{  mov.b32 %r86, {%rs95,%rs96};}

	// end inline asm
	add.ftz.f32 	%f169, %f454, 0f3F800000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs83, %f169;}

	// end inline asm
	mov.f32 	%f170, 0f40490FDB;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs84, %f170;}

	// end inline asm
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.eq.f16  __$temp3, %rs83, %rs85;
  selp.u16 %rs86, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p20, %rs86, 0;
	@%p20 bra 	$L__BB8_30;

	mov.u16 	%rs331, %rs199;
	bra.uni 	$L__BB8_45;

$L__BB8_30:
	// begin inline asm
	{  cvt.f32.f16 %f171, %rs83;}

	// end inline asm
	add.ftz.f32 	%f173, %f171, %f171;
	cvt.rni.f32.f32 	%f174, %f173;
	cvt.rzi.ftz.s32.f32 	%r13, %f174;
	neg.ftz.f32 	%f175, %f174;
	mov.f32 	%f176, 0f3F000000;
	fma.rn.ftz.f32 	%f177, %f175, %f176, %f171;
	mul.ftz.f32 	%f178, %f177, 0f34222169;
	mov.f32 	%f179, 0f40490FDA;
	fma.rn.ftz.f32 	%f180, %f177, %f179, %f178;
	mul.rn.ftz.f32 	%f23, %f180, %f180;
	and.b32  	%r14, %r13, 1;
	setp.eq.s32 	%p21, %r14, 0;
	selp.f32 	%f24, %f180, 0f3F800000, %p21;
	mov.f32 	%f455, 0fB94D4153;
	@%p21 bra 	$L__BB8_32;

	mov.f32 	%f181, 0fBAB607ED;
	mov.f32 	%f182, 0f37CBAC00;
	fma.rn.ftz.f32 	%f455, %f182, %f23, %f181;

$L__BB8_32:
	selp.f32 	%f183, 0f3C0885E4, 0f3D2AAABB, %p21;
	fma.rn.ftz.f32 	%f184, %f455, %f23, %f183;
	selp.f32 	%f185, 0fBE2AAAA8, 0fBEFFFFFF, %p21;
	fma.rn.ftz.f32 	%f186, %f184, %f23, %f185;
	fma.rn.ftz.f32 	%f188, %f23, %f24, %f139;
	fma.rn.ftz.f32 	%f457, %f186, %f188, %f24;
	and.b32  	%r87, %r13, 2;
	setp.eq.s32 	%p23, %r87, 0;
	@%p23 bra 	$L__BB8_34;

	mov.f32 	%f190, 0fBF800000;
	fma.rn.ftz.f32 	%f457, %f457, %f190, %f139;

$L__BB8_34:
	cvt.rzi.f32.f32 	%f191, %f171;
	setp.neu.ftz.f32 	%p24, %f191, %f171;
	@%p24 bra 	$L__BB8_36;

	mul.rn.ftz.f32 	%f457, %f171, %f139;

$L__BB8_36:
	mov.f32 	%f430, 0f40490FDA;
	mov.f32 	%f429, 0f3F000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs99, %f457;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f194, %rs83;}

	// end inline asm
	mov.f32 	%f196, 0f40000000;
	div.approx.ftz.f32 	%f32, %f194, %f196;
	add.ftz.f32 	%f197, %f32, %f32;
	cvt.rni.f32.f32 	%f198, %f197;
	cvt.rzi.ftz.s32.f32 	%r15, %f198;
	neg.ftz.f32 	%f199, %f198;
	fma.rn.ftz.f32 	%f201, %f199, %f429, %f32;
	mul.ftz.f32 	%f202, %f201, 0f34222169;
	fma.rn.ftz.f32 	%f204, %f201, %f430, %f202;
	mul.rn.ftz.f32 	%f33, %f204, %f204;
	and.b32  	%r16, %r15, 1;
	setp.eq.s32 	%p25, %r16, 0;
	selp.f32 	%f34, %f204, 0f3F800000, %p25;
	mov.f32 	%f458, 0fB94D4153;
	@%p25 bra 	$L__BB8_38;

	mov.f32 	%f205, 0fBAB607ED;
	mov.f32 	%f206, 0f37CBAC00;
	fma.rn.ftz.f32 	%f458, %f206, %f33, %f205;

$L__BB8_38:
	selp.f32 	%f207, 0f3C0885E4, 0f3D2AAABB, %p25;
	fma.rn.ftz.f32 	%f208, %f458, %f33, %f207;
	selp.f32 	%f209, 0fBE2AAAA8, 0fBEFFFFFF, %p25;
	fma.rn.ftz.f32 	%f210, %f208, %f33, %f209;
	fma.rn.ftz.f32 	%f212, %f33, %f34, %f139;
	fma.rn.ftz.f32 	%f460, %f210, %f212, %f34;
	and.b32  	%r88, %r15, 2;
	setp.eq.s32 	%p27, %r88, 0;
	@%p27 bra 	$L__BB8_40;

	mov.f32 	%f214, 0fBF800000;
	fma.rn.ftz.f32 	%f460, %f460, %f214, %f139;

$L__BB8_40:
	mov.f32 	%f432, 0f40000000;
	div.approx.ftz.f32 	%f431, %f194, %f432;
	cvt.rzi.f32.f32 	%f215, %f431;
	setp.neu.ftz.f32 	%p28, %f215, %f431;
	@%p28 bra 	$L__BB8_42;

	mov.f32 	%f434, 0f40000000;
	div.approx.ftz.f32 	%f433, %f194, %f434;
	mul.rn.ftz.f32 	%f460, %f433, %f139;

$L__BB8_42:
	// begin inline asm
	{  cvt.rn.f16.f32 %rs101, %f460;}

	// end inline asm
	// begin inline asm
	{mul.f16 %rs103,%rs102,%rs99;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs106,%rs103,%rs101;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs109,%rs84,%rs84;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs112,%rs109,%rs83;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs115,%rs112,%rs83;
}
	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f218, %rs106;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f219, %rs115;}

	// end inline asm
	// begin inline asm
	{rcp.approx.ftz.f32 %f220, %f219;
}
	// end inline asm
	mul.ftz.f32 	%f222, %f218, %f220;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs331, %f222;}

	// end inline asm
	and.b16  	%rs122, %rs331, 32767;
	mov.u16 	%rs123, 143;
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.lt.f16  __$temp3, %rs122, %rs123;
  selp.u16 %rs121, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p29, %rs121, 0;
	setp.eq.s16 	%p30, %rs122, 0;
	or.pred  	%p31, %p29, %p30;
	@%p31 bra 	$L__BB8_45;

	neg.ftz.f32 	%f224, %f219;
	fma.rn.ftz.f32 	%f225, %f224, %f222, %f218;
	fma.rn.ftz.f32 	%f223, %f220, %f225, %f222;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs331, %f223;}

	// end inline asm

$L__BB8_45:
	mov.f32 	%f427, 0f40490FDB;
	add.ftz.f32 	%f226, %f454, 0f00000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs125, %f226;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs126, %f427;}

	// end inline asm
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.eq.f16  __$temp3, %rs125, %rs85;
  selp.u16 %rs128, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p32, %rs128, 0;
	@%p32 bra 	$L__BB8_47;

	mov.u16 	%rs333, %rs199;
	bra.uni 	$L__BB8_62;

$L__BB8_47:
	// begin inline asm
	{  cvt.f32.f16 %f228, %rs125;}

	// end inline asm
	add.ftz.f32 	%f230, %f228, %f228;
	cvt.rni.f32.f32 	%f231, %f230;
	cvt.rzi.ftz.s32.f32 	%r17, %f231;
	neg.ftz.f32 	%f232, %f231;
	mov.f32 	%f233, 0f3F000000;
	fma.rn.ftz.f32 	%f234, %f232, %f233, %f228;
	mul.ftz.f32 	%f235, %f234, 0f34222169;
	mov.f32 	%f236, 0f40490FDA;
	fma.rn.ftz.f32 	%f237, %f234, %f236, %f235;
	mul.rn.ftz.f32 	%f47, %f237, %f237;
	and.b32  	%r18, %r17, 1;
	setp.eq.s32 	%p33, %r18, 0;
	selp.f32 	%f48, %f237, 0f3F800000, %p33;
	mov.f32 	%f461, 0fB94D4153;
	@%p33 bra 	$L__BB8_49;

	mov.f32 	%f238, 0fBAB607ED;
	mov.f32 	%f239, 0f37CBAC00;
	fma.rn.ftz.f32 	%f461, %f239, %f47, %f238;

$L__BB8_49:
	selp.f32 	%f240, 0f3C0885E4, 0f3D2AAABB, %p33;
	fma.rn.ftz.f32 	%f241, %f461, %f47, %f240;
	selp.f32 	%f242, 0fBE2AAAA8, 0fBEFFFFFF, %p33;
	fma.rn.ftz.f32 	%f243, %f241, %f47, %f242;
	fma.rn.ftz.f32 	%f245, %f47, %f48, %f139;
	fma.rn.ftz.f32 	%f463, %f243, %f245, %f48;
	and.b32  	%r89, %r17, 2;
	setp.eq.s32 	%p35, %r89, 0;
	@%p35 bra 	$L__BB8_51;

	mov.f32 	%f247, 0fBF800000;
	fma.rn.ftz.f32 	%f463, %f463, %f247, %f139;

$L__BB8_51:
	cvt.rzi.f32.f32 	%f248, %f228;
	setp.neu.ftz.f32 	%p36, %f248, %f228;
	@%p36 bra 	$L__BB8_53;

	mul.rn.ftz.f32 	%f463, %f228, %f139;

$L__BB8_53:
	mov.f32 	%f436, 0f40490FDA;
	mov.f32 	%f435, 0f3F000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs133, %f463;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f251, %rs125;}

	// end inline asm
	mov.f32 	%f253, 0f40000000;
	div.approx.ftz.f32 	%f56, %f251, %f253;
	add.ftz.f32 	%f254, %f56, %f56;
	cvt.rni.f32.f32 	%f255, %f254;
	cvt.rzi.ftz.s32.f32 	%r19, %f255;
	neg.ftz.f32 	%f256, %f255;
	fma.rn.ftz.f32 	%f258, %f256, %f435, %f56;
	mul.ftz.f32 	%f259, %f258, 0f34222169;
	fma.rn.ftz.f32 	%f261, %f258, %f436, %f259;
	mul.rn.ftz.f32 	%f57, %f261, %f261;
	and.b32  	%r20, %r19, 1;
	setp.eq.s32 	%p37, %r20, 0;
	selp.f32 	%f58, %f261, 0f3F800000, %p37;
	mov.f32 	%f464, 0fB94D4153;
	@%p37 bra 	$L__BB8_55;

	mov.f32 	%f262, 0fBAB607ED;
	mov.f32 	%f263, 0f37CBAC00;
	fma.rn.ftz.f32 	%f464, %f263, %f57, %f262;

$L__BB8_55:
	selp.f32 	%f264, 0f3C0885E4, 0f3D2AAABB, %p37;
	fma.rn.ftz.f32 	%f265, %f464, %f57, %f264;
	selp.f32 	%f266, 0fBE2AAAA8, 0fBEFFFFFF, %p37;
	fma.rn.ftz.f32 	%f267, %f265, %f57, %f266;
	fma.rn.ftz.f32 	%f269, %f57, %f58, %f139;
	fma.rn.ftz.f32 	%f466, %f267, %f269, %f58;
	and.b32  	%r90, %r19, 2;
	setp.eq.s32 	%p39, %r90, 0;
	@%p39 bra 	$L__BB8_57;

	mov.f32 	%f271, 0fBF800000;
	fma.rn.ftz.f32 	%f466, %f466, %f271, %f139;

$L__BB8_57:
	mov.f32 	%f438, 0f40000000;
	div.approx.ftz.f32 	%f437, %f251, %f438;
	cvt.rzi.f32.f32 	%f272, %f437;
	setp.neu.ftz.f32 	%p40, %f272, %f437;
	@%p40 bra 	$L__BB8_59;

	mov.f32 	%f440, 0f40000000;
	div.approx.ftz.f32 	%f439, %f251, %f440;
	mul.rn.ftz.f32 	%f466, %f439, %f139;

$L__BB8_59:
	// begin inline asm
	{  cvt.rn.f16.f32 %rs135, %f466;}

	// end inline asm
	// begin inline asm
	{mul.f16 %rs137,%rs102,%rs133;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs140,%rs137,%rs135;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs143,%rs126,%rs126;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs146,%rs143,%rs125;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs149,%rs146,%rs125;
}
	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f275, %rs140;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f276, %rs149;}

	// end inline asm
	// begin inline asm
	{rcp.approx.ftz.f32 %f277, %f276;
}
	// end inline asm
	mul.ftz.f32 	%f279, %f275, %f277;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs333, %f279;}

	// end inline asm
	and.b16  	%rs156, %rs333, 32767;
	mov.u16 	%rs157, 143;
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.lt.f16  __$temp3, %rs156, %rs157;
  selp.u16 %rs155, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p41, %rs155, 0;
	setp.eq.s16 	%p42, %rs156, 0;
	or.pred  	%p43, %p41, %p42;
	@%p43 bra 	$L__BB8_62;

	neg.ftz.f32 	%f281, %f276;
	fma.rn.ftz.f32 	%f282, %f281, %f279, %f275;
	fma.rn.ftz.f32 	%f280, %f277, %f282, %f279;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs333, %f280;}

	// end inline asm

$L__BB8_62:
	mov.f32 	%f428, 0f40490FDB;
	add.ftz.f32 	%f283, %f454, 0fBF800000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs159, %f283;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs160, %f428;}

	// end inline asm
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.eq.f16  __$temp3, %rs159, %rs85;
  selp.u16 %rs162, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p44, %rs162, 0;
	@%p44 bra 	$L__BB8_64;

	mov.u16 	%rs335, %rs199;
	bra.uni 	$L__BB8_79;

$L__BB8_64:
	// begin inline asm
	{  cvt.f32.f16 %f285, %rs159;}

	// end inline asm
	add.ftz.f32 	%f287, %f285, %f285;
	cvt.rni.f32.f32 	%f288, %f287;
	cvt.rzi.ftz.s32.f32 	%r21, %f288;
	neg.ftz.f32 	%f289, %f288;
	mov.f32 	%f290, 0f3F000000;
	fma.rn.ftz.f32 	%f291, %f289, %f290, %f285;
	mul.ftz.f32 	%f292, %f291, 0f34222169;
	mov.f32 	%f293, 0f40490FDA;
	fma.rn.ftz.f32 	%f294, %f291, %f293, %f292;
	mul.rn.ftz.f32 	%f71, %f294, %f294;
	and.b32  	%r22, %r21, 1;
	setp.eq.s32 	%p45, %r22, 0;
	selp.f32 	%f72, %f294, 0f3F800000, %p45;
	mov.f32 	%f467, 0fB94D4153;
	@%p45 bra 	$L__BB8_66;

	mov.f32 	%f295, 0fBAB607ED;
	mov.f32 	%f296, 0f37CBAC00;
	fma.rn.ftz.f32 	%f467, %f296, %f71, %f295;

$L__BB8_66:
	selp.f32 	%f297, 0f3C0885E4, 0f3D2AAABB, %p45;
	fma.rn.ftz.f32 	%f298, %f467, %f71, %f297;
	selp.f32 	%f299, 0fBE2AAAA8, 0fBEFFFFFF, %p45;
	fma.rn.ftz.f32 	%f300, %f298, %f71, %f299;
	fma.rn.ftz.f32 	%f302, %f71, %f72, %f139;
	fma.rn.ftz.f32 	%f469, %f300, %f302, %f72;
	and.b32  	%r91, %r21, 2;
	setp.eq.s32 	%p47, %r91, 0;
	@%p47 bra 	$L__BB8_68;

	mov.f32 	%f304, 0fBF800000;
	fma.rn.ftz.f32 	%f469, %f469, %f304, %f139;

$L__BB8_68:
	cvt.rzi.f32.f32 	%f305, %f285;
	setp.neu.ftz.f32 	%p48, %f305, %f285;
	@%p48 bra 	$L__BB8_70;

	mul.rn.ftz.f32 	%f469, %f285, %f139;

$L__BB8_70:
	mov.f32 	%f421, 0f40490FDA;
	mov.f32 	%f420, 0f3F000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs167, %f469;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f308, %rs159;}

	// end inline asm
	mov.f32 	%f310, 0f40000000;
	div.approx.ftz.f32 	%f80, %f308, %f310;
	add.ftz.f32 	%f311, %f80, %f80;
	cvt.rni.f32.f32 	%f312, %f311;
	cvt.rzi.ftz.s32.f32 	%r23, %f312;
	neg.ftz.f32 	%f313, %f312;
	fma.rn.ftz.f32 	%f315, %f313, %f420, %f80;
	mul.ftz.f32 	%f316, %f315, 0f34222169;
	fma.rn.ftz.f32 	%f318, %f315, %f421, %f316;
	mul.rn.ftz.f32 	%f81, %f318, %f318;
	and.b32  	%r24, %r23, 1;
	setp.eq.s32 	%p49, %r24, 0;
	selp.f32 	%f82, %f318, 0f3F800000, %p49;
	mov.f32 	%f470, 0fB94D4153;
	@%p49 bra 	$L__BB8_72;

	mov.f32 	%f319, 0fBAB607ED;
	mov.f32 	%f320, 0f37CBAC00;
	fma.rn.ftz.f32 	%f470, %f320, %f81, %f319;

$L__BB8_72:
	selp.f32 	%f321, 0f3C0885E4, 0f3D2AAABB, %p49;
	fma.rn.ftz.f32 	%f322, %f470, %f81, %f321;
	selp.f32 	%f323, 0fBE2AAAA8, 0fBEFFFFFF, %p49;
	fma.rn.ftz.f32 	%f324, %f322, %f81, %f323;
	fma.rn.ftz.f32 	%f326, %f81, %f82, %f139;
	fma.rn.ftz.f32 	%f472, %f324, %f326, %f82;
	and.b32  	%r92, %r23, 2;
	setp.eq.s32 	%p51, %r92, 0;
	@%p51 bra 	$L__BB8_74;

	mov.f32 	%f328, 0fBF800000;
	fma.rn.ftz.f32 	%f472, %f472, %f328, %f139;

$L__BB8_74:
	mov.f32 	%f442, 0f40000000;
	div.approx.ftz.f32 	%f441, %f308, %f442;
	cvt.rzi.f32.f32 	%f329, %f441;
	setp.neu.ftz.f32 	%p52, %f329, %f441;
	@%p52 bra 	$L__BB8_76;

	mov.f32 	%f444, 0f40000000;
	div.approx.ftz.f32 	%f443, %f308, %f444;
	mul.rn.ftz.f32 	%f472, %f443, %f139;

$L__BB8_76:
	// begin inline asm
	{  cvt.rn.f16.f32 %rs169, %f472;}

	// end inline asm
	// begin inline asm
	{mul.f16 %rs171,%rs102,%rs167;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs174,%rs171,%rs169;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs177,%rs160,%rs160;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs180,%rs177,%rs159;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs183,%rs180,%rs159;
}
	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f332, %rs174;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f333, %rs183;}

	// end inline asm
	// begin inline asm
	{rcp.approx.ftz.f32 %f334, %f333;
}
	// end inline asm
	mul.ftz.f32 	%f336, %f332, %f334;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs335, %f336;}

	// end inline asm
	and.b16  	%rs190, %rs335, 32767;
	mov.u16 	%rs191, 143;
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.lt.f16  __$temp3, %rs190, %rs191;
  selp.u16 %rs189, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p53, %rs189, 0;
	setp.eq.s16 	%p54, %rs190, 0;
	or.pred  	%p55, %p53, %p54;
	@%p55 bra 	$L__BB8_79;

	neg.ftz.f32 	%f338, %f333;
	fma.rn.ftz.f32 	%f339, %f338, %f336, %f332;
	fma.rn.ftz.f32 	%f337, %f334, %f339, %f336;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs335, %f337;}

	// end inline asm

$L__BB8_79:
	mov.f32 	%f422, 0f40490FDB;
	add.ftz.f32 	%f340, %f454, 0fC0000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs193, %f340;}

	// end inline asm
	// begin inline asm
	{  cvt.rn.f16.f32 %rs194, %f422;}

	// end inline asm
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.eq.f16  __$temp3, %rs193, %rs85;
  selp.u16 %rs196, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p56, %rs196, 0;
	@%p56 bra 	$L__BB8_81;

	mov.u16 	%rs337, %rs199;
	bra.uni 	$L__BB8_96;

$L__BB8_81:
	// begin inline asm
	{  cvt.f32.f16 %f342, %rs193;}

	// end inline asm
	add.ftz.f32 	%f344, %f342, %f342;
	cvt.rni.f32.f32 	%f345, %f344;
	cvt.rzi.ftz.s32.f32 	%r25, %f345;
	neg.ftz.f32 	%f346, %f345;
	mov.f32 	%f347, 0f3F000000;
	fma.rn.ftz.f32 	%f348, %f346, %f347, %f342;
	mul.ftz.f32 	%f349, %f348, 0f34222169;
	mov.f32 	%f350, 0f40490FDA;
	fma.rn.ftz.f32 	%f351, %f348, %f350, %f349;
	mul.rn.ftz.f32 	%f95, %f351, %f351;
	and.b32  	%r26, %r25, 1;
	setp.eq.s32 	%p57, %r26, 0;
	selp.f32 	%f96, %f351, 0f3F800000, %p57;
	mov.f32 	%f473, 0fB94D4153;
	@%p57 bra 	$L__BB8_83;

	mov.f32 	%f352, 0fBAB607ED;
	mov.f32 	%f353, 0f37CBAC00;
	fma.rn.ftz.f32 	%f473, %f353, %f95, %f352;

$L__BB8_83:
	selp.f32 	%f354, 0f3C0885E4, 0f3D2AAABB, %p57;
	fma.rn.ftz.f32 	%f355, %f473, %f95, %f354;
	selp.f32 	%f356, 0fBE2AAAA8, 0fBEFFFFFF, %p57;
	fma.rn.ftz.f32 	%f357, %f355, %f95, %f356;
	fma.rn.ftz.f32 	%f359, %f95, %f96, %f139;
	fma.rn.ftz.f32 	%f475, %f357, %f359, %f96;
	and.b32  	%r93, %r25, 2;
	setp.eq.s32 	%p59, %r93, 0;
	@%p59 bra 	$L__BB8_85;

	mov.f32 	%f361, 0fBF800000;
	fma.rn.ftz.f32 	%f475, %f475, %f361, %f139;

$L__BB8_85:
	cvt.rzi.f32.f32 	%f362, %f342;
	setp.neu.ftz.f32 	%p60, %f362, %f342;
	@%p60 bra 	$L__BB8_87;

	mul.rn.ftz.f32 	%f475, %f342, %f139;

$L__BB8_87:
	mov.f32 	%f446, 0f40490FDA;
	mov.f32 	%f445, 0f3F000000;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs201, %f475;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f365, %rs193;}

	// end inline asm
	mov.f32 	%f367, 0f40000000;
	div.approx.ftz.f32 	%f104, %f365, %f367;
	add.ftz.f32 	%f368, %f104, %f104;
	cvt.rni.f32.f32 	%f369, %f368;
	cvt.rzi.ftz.s32.f32 	%r27, %f369;
	neg.ftz.f32 	%f370, %f369;
	fma.rn.ftz.f32 	%f372, %f370, %f445, %f104;
	mul.ftz.f32 	%f373, %f372, 0f34222169;
	fma.rn.ftz.f32 	%f375, %f372, %f446, %f373;
	mul.rn.ftz.f32 	%f105, %f375, %f375;
	and.b32  	%r28, %r27, 1;
	setp.eq.s32 	%p61, %r28, 0;
	selp.f32 	%f106, %f375, 0f3F800000, %p61;
	mov.f32 	%f476, 0fB94D4153;
	@%p61 bra 	$L__BB8_89;

	mov.f32 	%f376, 0fBAB607ED;
	mov.f32 	%f377, 0f37CBAC00;
	fma.rn.ftz.f32 	%f476, %f377, %f105, %f376;

$L__BB8_89:
	selp.f32 	%f378, 0f3C0885E4, 0f3D2AAABB, %p61;
	fma.rn.ftz.f32 	%f379, %f476, %f105, %f378;
	selp.f32 	%f380, 0fBE2AAAA8, 0fBEFFFFFF, %p61;
	fma.rn.ftz.f32 	%f381, %f379, %f105, %f380;
	fma.rn.ftz.f32 	%f383, %f105, %f106, %f139;
	fma.rn.ftz.f32 	%f478, %f381, %f383, %f106;
	and.b32  	%r94, %r27, 2;
	setp.eq.s32 	%p63, %r94, 0;
	@%p63 bra 	$L__BB8_91;

	mov.f32 	%f385, 0fBF800000;
	fma.rn.ftz.f32 	%f478, %f478, %f385, %f139;

$L__BB8_91:
	mov.f32 	%f448, 0f40000000;
	div.approx.ftz.f32 	%f447, %f365, %f448;
	cvt.rzi.f32.f32 	%f386, %f447;
	setp.neu.ftz.f32 	%p64, %f386, %f447;
	@%p64 bra 	$L__BB8_93;

	mov.f32 	%f450, 0f40000000;
	div.approx.ftz.f32 	%f449, %f365, %f450;
	mul.rn.ftz.f32 	%f478, %f449, %f139;

$L__BB8_93:
	// begin inline asm
	{  cvt.rn.f16.f32 %rs203, %f478;}

	// end inline asm
	// begin inline asm
	{mul.f16 %rs205,%rs102,%rs201;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs208,%rs205,%rs203;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs211,%rs194,%rs194;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs214,%rs211,%rs193;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs217,%rs214,%rs193;
}
	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f389, %rs208;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f390, %rs217;}

	// end inline asm
	// begin inline asm
	{rcp.approx.ftz.f32 %f391, %f390;
}
	// end inline asm
	mul.ftz.f32 	%f393, %f389, %f391;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs337, %f393;}

	// end inline asm
	and.b16  	%rs224, %rs337, 32767;
	mov.u16 	%rs225, 143;
	// begin inline asm
	{ .reg .pred __$temp3;
  setp.lt.f16  __$temp3, %rs224, %rs225;
  selp.u16 %rs223, 1, 0, __$temp3;}
	// end inline asm
	setp.eq.s16 	%p65, %rs223, 0;
	setp.eq.s16 	%p66, %rs224, 0;
	or.pred  	%p67, %p65, %p66;
	@%p67 bra 	$L__BB8_96;

	neg.ftz.f32 	%f395, %f390;
	fma.rn.ftz.f32 	%f396, %f395, %f393, %f389;
	fma.rn.ftz.f32 	%f394, %f391, %f396, %f393;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs337, %f394;}

	// end inline asm

$L__BB8_96:
	mov.b32 	{%rs228, %rs231}, %r83;
	mov.b32 	{%rs234, %rs237}, %r84;
	// begin inline asm
	{mul.f16 %rs230,%rs231,%rs331;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs227,%rs228,%rs331;
}
	// end inline asm
	mov.b32 	%r96, {%rs227, %rs230};
	// begin inline asm
	{mul.f16 %rs236,%rs237,%rs333;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs233,%rs234,%rs333;
}
	// end inline asm
	mov.b32 	%r97, {%rs233, %rs236};
	// begin inline asm
	{add.f16x2 %r95,%r96,%r97;
}
	// end inline asm
	mov.b32 	{%rs240, %rs243}, %r85;
	// begin inline asm
	{mul.f16 %rs242,%rs243,%rs335;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs239,%rs240,%rs335;
}
	// end inline asm
	mov.b32 	%r100, {%rs239, %rs242};
	// begin inline asm
	{add.f16x2 %r98,%r95,%r100;
}
	// end inline asm
	mov.b32 	{%rs246, %rs249}, %r86;
	// begin inline asm
	{mul.f16 %rs248,%rs249,%rs337;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs245,%rs246,%rs337;
}
	// end inline asm
	mov.b32 	%r103, {%rs245, %rs248};
	// begin inline asm
	{add.f16x2 %r158,%r98,%r103;
}
	// end inline asm

$L__BB8_97:
	mov.b32 	{%rs339, %rs338}, %r158;

$L__BB8_119:
	// begin inline asm
	{mul.f16 %rs327,%rs3,%rs338;
}
	// end inline asm
	// begin inline asm
	{mul.f16 %rs324,%rs3,%rs339;
}
	// end inline asm
	mov.b32 	%r145, {%rs324, %rs327};
	// begin inline asm
	{add.f16x2 %r162,%r162,%r145;
}
	// end inline asm
	add.s64 	%rd86, %rd86, %rd13;
	add.s64 	%rd87, %rd87, 1;
	setp.lt.u64 	%p79, %rd87, %rd20;
	@%p79 bra 	$L__BB8_7;

$L__BB8_120:
	add.s64 	%rd85, %rd85, 1;
	setp.lt.u64 	%p80, %rd85, %rd11;
	@%p80 bra 	$L__BB8_5;

$L__BB8_121:
	ld.const.u64 	%rd69, [QUPS_I];
	add.s64 	%rd84, %rd84, 1;
	setp.lt.u64 	%p81, %rd84, %rd69;
	@%p81 bra 	$L__BB8_3;

$L__BB8_122:
	ld.param.u64 	%rd74, [_Z7greenshP7ushort2PKfPKtS2_S2_PKS_ffffPKii_param_0];
	ld.const.u64 	%rd73, [QUPS_S];
	mov.u32 	%r153, %tid.x;
	mov.u32 	%r152, %ntid.x;
	mov.u32 	%r151, %ctaid.x;
	mad.lo.s32 	%r150, %r151, %r152, %r153;
	cvt.u64.u32 	%rd72, %r150;
	ld.const.u64 	%rd71, [QUPS_N];
	mov.u32 	%r149, %tid.y;
	mov.u32 	%r148, %ntid.y;
	mov.u32 	%r147, %ctaid.y;
	mad.lo.s32 	%r146, %r147, %r148, %r149;
	cvt.u64.u32 	%rd70, %r146;
	mul.lo.s64 	%rd62, %rd71, %rd4;
	add.s64 	%rd63, %rd62, %rd70;
	mul.lo.s64 	%rd64, %rd63, %rd73;
	add.s64 	%rd65, %rd64, %rd72;
	cvta.to.global.u64 	%rd66, %rd74;
	shl.b64 	%rd67, %rd65, 2;
	add.s64 	%rd68, %rd66, %rd67;
	st.global.u32 	[%rd68], %r162;

$L__BB8_123:
	ret;

}

